(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2436575,      48910]
NotebookOptionsPosition[   2411135,      48442]
NotebookOutlinePosition[   2411623,      48460]
CellTagsIndexPosition[   2411580,      48457]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Elementary Intro", "Title",
 CellChangeTimes->{{3.826982851337235*^9, 
  3.826982852823399*^9}},ExpressionUUID->"c7ca2fb0-b882-4af8-a6c9-\
c7471bc5a2e1"],

Cell[CellGroupData[{

Cell["7. Colors and Styles", "Section",
 CellChangeTimes->{{3.826982859533957*^9, 3.8269828614705353`*^9}, {
  3.826984034051291*^9, 
  3.826984034377014*^9}},ExpressionUUID->"9b904985-492d-4519-a808-\
fbdd897c10f7"],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"i", "+", "j"}], ",", 
      RowBox[{"RandomColor", "[", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"a76de33f-a02c-4664-aa84-33a6fa163adb"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["2",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8757014525545153, 0.825623031429884, 0.20094808855791646`],
      FrontFaceColor->RGBColor[
       0.8757014525545153, 0.825623031429884, 0.20094808855791646`],
      BackFaceColor->RGBColor[
       0.8757014525545153, 0.825623031429884, 0.20094808855791646`],
      GraphicsColor->RGBColor[
       0.8757014525545153, 0.825623031429884, 0.20094808855791646`],
      FontColor->RGBColor[
       0.8757014525545153, 0.825623031429884, 0.20094808855791646`]], 
     StyleBox["3",
      StripOnInput->False,
      LineColor->RGBColor[
       0.33361159998550516`, 0.6776037859290029, 0.023655962268267938`],
      FrontFaceColor->RGBColor[
       0.33361159998550516`, 0.6776037859290029, 0.023655962268267938`],
      BackFaceColor->RGBColor[
       0.33361159998550516`, 0.6776037859290029, 0.023655962268267938`],
      GraphicsColor->RGBColor[
       0.33361159998550516`, 0.6776037859290029, 0.023655962268267938`],
      FontColor->RGBColor[
       0.33361159998550516`, 0.6776037859290029, 0.023655962268267938`]], 
     StyleBox["4",
      StripOnInput->False,
      LineColor->RGBColor[
       0.3903387126597657, 0.49931622478267146`, 0.053878177792655135`],
      FrontFaceColor->RGBColor[
       0.3903387126597657, 0.49931622478267146`, 0.053878177792655135`],
      BackFaceColor->RGBColor[
       0.3903387126597657, 0.49931622478267146`, 0.053878177792655135`],
      GraphicsColor->RGBColor[
       0.3903387126597657, 0.49931622478267146`, 0.053878177792655135`],
      FontColor->RGBColor[
       0.3903387126597657, 0.49931622478267146`, 0.053878177792655135`]], 
     StyleBox["5",
      StripOnInput->False,
      LineColor->RGBColor[
       0.30317279459265256`, 0.24260367542513017`, 0.4326571645165769],
      FrontFaceColor->RGBColor[
       0.30317279459265256`, 0.24260367542513017`, 0.4326571645165769],
      BackFaceColor->RGBColor[
       0.30317279459265256`, 0.24260367542513017`, 0.4326571645165769],
      GraphicsColor->RGBColor[
       0.30317279459265256`, 0.24260367542513017`, 0.4326571645165769],
      FontColor->RGBColor[
       0.30317279459265256`, 0.24260367542513017`, 0.4326571645165769]], 
     StyleBox["6",
      StripOnInput->False,
      LineColor->RGBColor[
       0.18755813044014813`, 0.4127401126530841, 0.3118348558011199],
      FrontFaceColor->RGBColor[
       0.18755813044014813`, 0.4127401126530841, 0.3118348558011199],
      BackFaceColor->RGBColor[
       0.18755813044014813`, 0.4127401126530841, 0.3118348558011199],
      GraphicsColor->RGBColor[
       0.18755813044014813`, 0.4127401126530841, 0.3118348558011199],
      FontColor->RGBColor[
       0.18755813044014813`, 0.4127401126530841, 0.3118348558011199]], 
     StyleBox["7",
      StripOnInput->False,
      LineColor->RGBColor[
       0.29797900040726844`, 0.32117300814953564`, 0.5056921699556414],
      FrontFaceColor->RGBColor[
       0.29797900040726844`, 0.32117300814953564`, 0.5056921699556414],
      BackFaceColor->RGBColor[
       0.29797900040726844`, 0.32117300814953564`, 0.5056921699556414],
      GraphicsColor->RGBColor[
       0.29797900040726844`, 0.32117300814953564`, 0.5056921699556414],
      FontColor->RGBColor[
       0.29797900040726844`, 0.32117300814953564`, 0.5056921699556414]], 
     StyleBox["8",
      StripOnInput->False,
      LineColor->RGBColor[
       0.10877564605648549`, 0.2771032188920677, 0.7305462484355061],
      FrontFaceColor->RGBColor[
       0.10877564605648549`, 0.2771032188920677, 0.7305462484355061],
      BackFaceColor->RGBColor[
       0.10877564605648549`, 0.2771032188920677, 0.7305462484355061],
      GraphicsColor->RGBColor[
       0.10877564605648549`, 0.2771032188920677, 0.7305462484355061],
      FontColor->RGBColor[
       0.10877564605648549`, 0.2771032188920677, 0.7305462484355061]], 
     StyleBox["9",
      StripOnInput->False,
      LineColor->RGBColor[
       0.20304754582773654`, 0.7787703154369534, 0.4315068089430265],
      FrontFaceColor->RGBColor[
       0.20304754582773654`, 0.7787703154369534, 0.4315068089430265],
      BackFaceColor->RGBColor[
       0.20304754582773654`, 0.7787703154369534, 0.4315068089430265],
      GraphicsColor->RGBColor[
       0.20304754582773654`, 0.7787703154369534, 0.4315068089430265],
      FontColor->RGBColor[
       0.20304754582773654`, 0.7787703154369534, 0.4315068089430265]], 
     StyleBox["10",
      StripOnInput->False,
      LineColor->RGBColor[
       0.19609564947329328`, 0.34865155357928246`, 0.642159729201528],
      FrontFaceColor->RGBColor[
       0.19609564947329328`, 0.34865155357928246`, 0.642159729201528],
      BackFaceColor->RGBColor[
       0.19609564947329328`, 0.34865155357928246`, 0.642159729201528],
      GraphicsColor->RGBColor[
       0.19609564947329328`, 0.34865155357928246`, 0.642159729201528],
      FontColor->RGBColor[
       0.19609564947329328`, 0.34865155357928246`, 0.642159729201528]], 
     StyleBox["11",
      StripOnInput->False,
      LineColor->RGBColor[
       0.352875293853796, 0.5434000372134165, 0.08888218562072758],
      FrontFaceColor->RGBColor[
       0.352875293853796, 0.5434000372134165, 0.08888218562072758],
      BackFaceColor->RGBColor[
       0.352875293853796, 0.5434000372134165, 0.08888218562072758],
      GraphicsColor->RGBColor[
       0.352875293853796, 0.5434000372134165, 0.08888218562072758],
      FontColor->RGBColor[
       0.352875293853796, 0.5434000372134165, 0.08888218562072758]]},
    {
     StyleBox["3",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6981796868403225, 0.17204222491295473`, 0.2204221275178624],
      FrontFaceColor->RGBColor[
       0.6981796868403225, 0.17204222491295473`, 0.2204221275178624],
      BackFaceColor->RGBColor[
       0.6981796868403225, 0.17204222491295473`, 0.2204221275178624],
      GraphicsColor->RGBColor[
       0.6981796868403225, 0.17204222491295473`, 0.2204221275178624],
      FontColor->RGBColor[
       0.6981796868403225, 0.17204222491295473`, 0.2204221275178624]], 
     StyleBox["4",
      StripOnInput->False,
      LineColor->RGBColor[
       0.10042198759457022`, 0.7044176878640158, 0.8300493863450047],
      FrontFaceColor->RGBColor[
       0.10042198759457022`, 0.7044176878640158, 0.8300493863450047],
      BackFaceColor->RGBColor[
       0.10042198759457022`, 0.7044176878640158, 0.8300493863450047],
      GraphicsColor->RGBColor[
       0.10042198759457022`, 0.7044176878640158, 0.8300493863450047],
      FontColor->RGBColor[
       0.10042198759457022`, 0.7044176878640158, 0.8300493863450047]], 
     StyleBox["5",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8458444676662642, 0.4590383294737883, 0.7808834501543023],
      FrontFaceColor->RGBColor[
       0.8458444676662642, 0.4590383294737883, 0.7808834501543023],
      BackFaceColor->RGBColor[
       0.8458444676662642, 0.4590383294737883, 0.7808834501543023],
      GraphicsColor->RGBColor[
       0.8458444676662642, 0.4590383294737883, 0.7808834501543023],
      FontColor->RGBColor[
       0.8458444676662642, 0.4590383294737883, 0.7808834501543023]], 
     StyleBox["6",
      StripOnInput->False,
      LineColor->RGBColor[
       0.1353775002084221, 0.3475923620570951, 0.36464710616048435`],
      FrontFaceColor->RGBColor[
       0.1353775002084221, 0.3475923620570951, 0.36464710616048435`],
      BackFaceColor->RGBColor[
       0.1353775002084221, 0.3475923620570951, 0.36464710616048435`],
      GraphicsColor->RGBColor[
       0.1353775002084221, 0.3475923620570951, 0.36464710616048435`],
      FontColor->RGBColor[
       0.1353775002084221, 0.3475923620570951, 0.36464710616048435`]], 
     StyleBox["7",
      StripOnInput->False,
      LineColor->RGBColor[
       0.25349319282112703`, 0.5997463384557162, 0.46944830709806973`],
      FrontFaceColor->RGBColor[
       0.25349319282112703`, 0.5997463384557162, 0.46944830709806973`],
      BackFaceColor->RGBColor[
       0.25349319282112703`, 0.5997463384557162, 0.46944830709806973`],
      GraphicsColor->RGBColor[
       0.25349319282112703`, 0.5997463384557162, 0.46944830709806973`],
      FontColor->RGBColor[
       0.25349319282112703`, 0.5997463384557162, 0.46944830709806973`]], 
     StyleBox["8",
      StripOnInput->False,
      LineColor->RGBColor[
       0.04579994172703228, 0.6896370711391355, 0.3643347397238894],
      FrontFaceColor->RGBColor[
       0.04579994172703228, 0.6896370711391355, 0.3643347397238894],
      BackFaceColor->RGBColor[
       0.04579994172703228, 0.6896370711391355, 0.3643347397238894],
      GraphicsColor->RGBColor[
       0.04579994172703228, 0.6896370711391355, 0.3643347397238894],
      FontColor->RGBColor[
       0.04579994172703228, 0.6896370711391355, 0.3643347397238894]], 
     StyleBox["9",
      StripOnInput->False,
      LineColor->RGBColor[
       0.9006192313302006, 0.3824586889911963, 0.8193316290436252],
      FrontFaceColor->RGBColor[
       0.9006192313302006, 0.3824586889911963, 0.8193316290436252],
      BackFaceColor->RGBColor[
       0.9006192313302006, 0.3824586889911963, 0.8193316290436252],
      GraphicsColor->RGBColor[
       0.9006192313302006, 0.3824586889911963, 0.8193316290436252],
      FontColor->RGBColor[
       0.9006192313302006, 0.3824586889911963, 0.8193316290436252]], 
     StyleBox["10",
      StripOnInput->False,
      LineColor->RGBColor[
       0.13262965103256485`, 0.9272772342172957, 0.10192184247387237`],
      FrontFaceColor->RGBColor[
       0.13262965103256485`, 0.9272772342172957, 0.10192184247387237`],
      BackFaceColor->RGBColor[
       0.13262965103256485`, 0.9272772342172957, 0.10192184247387237`],
      GraphicsColor->RGBColor[
       0.13262965103256485`, 0.9272772342172957, 0.10192184247387237`],
      FontColor->RGBColor[
       0.13262965103256485`, 0.9272772342172957, 0.10192184247387237`]], 
     StyleBox["11",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5722981654761896, 0.24673008610963265`, 0.18343822281516187`],
      FrontFaceColor->RGBColor[
       0.5722981654761896, 0.24673008610963265`, 0.18343822281516187`],
      BackFaceColor->RGBColor[
       0.5722981654761896, 0.24673008610963265`, 0.18343822281516187`],
      GraphicsColor->RGBColor[
       0.5722981654761896, 0.24673008610963265`, 0.18343822281516187`],
      FontColor->RGBColor[
       0.5722981654761896, 0.24673008610963265`, 0.18343822281516187`]], 
     StyleBox["12",
      StripOnInput->False,
      LineColor->RGBColor[
       0.698019436558627, 0.4936924046196396, 0.5715711400659824],
      FrontFaceColor->RGBColor[
       0.698019436558627, 0.4936924046196396, 0.5715711400659824],
      BackFaceColor->RGBColor[
       0.698019436558627, 0.4936924046196396, 0.5715711400659824],
      GraphicsColor->RGBColor[
       0.698019436558627, 0.4936924046196396, 0.5715711400659824],
      FontColor->RGBColor[
       0.698019436558627, 0.4936924046196396, 0.5715711400659824]]},
    {
     StyleBox["4",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5983491507760845, 0.44040804090492824`, 0.6045307414060515],
      FrontFaceColor->RGBColor[
       0.5983491507760845, 0.44040804090492824`, 0.6045307414060515],
      BackFaceColor->RGBColor[
       0.5983491507760845, 0.44040804090492824`, 0.6045307414060515],
      GraphicsColor->RGBColor[
       0.5983491507760845, 0.44040804090492824`, 0.6045307414060515],
      FontColor->RGBColor[
       0.5983491507760845, 0.44040804090492824`, 0.6045307414060515]], 
     StyleBox["5",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7982095769005799, 0.14467216694100204`, 0.7074886570928158],
      FrontFaceColor->RGBColor[
       0.7982095769005799, 0.14467216694100204`, 0.7074886570928158],
      BackFaceColor->RGBColor[
       0.7982095769005799, 0.14467216694100204`, 0.7074886570928158],
      GraphicsColor->RGBColor[
       0.7982095769005799, 0.14467216694100204`, 0.7074886570928158],
      FontColor->RGBColor[
       0.7982095769005799, 0.14467216694100204`, 0.7074886570928158]], 
     StyleBox["6",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8604632430802428, 0.7307759800141589, 0.6222376752842498],
      FrontFaceColor->RGBColor[
       0.8604632430802428, 0.7307759800141589, 0.6222376752842498],
      BackFaceColor->RGBColor[
       0.8604632430802428, 0.7307759800141589, 0.6222376752842498],
      GraphicsColor->RGBColor[
       0.8604632430802428, 0.7307759800141589, 0.6222376752842498],
      FontColor->RGBColor[
       0.8604632430802428, 0.7307759800141589, 0.6222376752842498]], 
     StyleBox["7",
      StripOnInput->False,
      LineColor->RGBColor[
       0.253108987660714, 0.6633102064118848, 0.6109070320931478],
      FrontFaceColor->RGBColor[
       0.253108987660714, 0.6633102064118848, 0.6109070320931478],
      BackFaceColor->RGBColor[
       0.253108987660714, 0.6633102064118848, 0.6109070320931478],
      GraphicsColor->RGBColor[
       0.253108987660714, 0.6633102064118848, 0.6109070320931478],
      FontColor->RGBColor[
       0.253108987660714, 0.6633102064118848, 0.6109070320931478]], 
     StyleBox["8",
      StripOnInput->False,
      LineColor->RGBColor[
       0.553760275794742, 0.2816010010522034, 0.4497354383012262],
      FrontFaceColor->RGBColor[
       0.553760275794742, 0.2816010010522034, 0.4497354383012262],
      BackFaceColor->RGBColor[
       0.553760275794742, 0.2816010010522034, 0.4497354383012262],
      GraphicsColor->RGBColor[
       0.553760275794742, 0.2816010010522034, 0.4497354383012262],
      FontColor->RGBColor[
       0.553760275794742, 0.2816010010522034, 0.4497354383012262]], 
     StyleBox["9",
      StripOnInput->False,
      LineColor->RGBColor[
       0.3145569064843874, 0.887007025676033, 0.5374480282708074],
      FrontFaceColor->RGBColor[
       0.3145569064843874, 0.887007025676033, 0.5374480282708074],
      BackFaceColor->RGBColor[
       0.3145569064843874, 0.887007025676033, 0.5374480282708074],
      GraphicsColor->RGBColor[
       0.3145569064843874, 0.887007025676033, 0.5374480282708074],
      FontColor->RGBColor[
       0.3145569064843874, 0.887007025676033, 0.5374480282708074]], 
     StyleBox["10",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6924336360973236, 0.211959581363258, 0.8267564484820216],
      FrontFaceColor->RGBColor[
       0.6924336360973236, 0.211959581363258, 0.8267564484820216],
      BackFaceColor->RGBColor[
       0.6924336360973236, 0.211959581363258, 0.8267564484820216],
      GraphicsColor->RGBColor[
       0.6924336360973236, 0.211959581363258, 0.8267564484820216],
      FontColor->RGBColor[
       0.6924336360973236, 0.211959581363258, 0.8267564484820216]], 
     StyleBox["11",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7053705328032247, 0.7920271242265633, 0.3430610180814677],
      FrontFaceColor->RGBColor[
       0.7053705328032247, 0.7920271242265633, 0.3430610180814677],
      BackFaceColor->RGBColor[
       0.7053705328032247, 0.7920271242265633, 0.3430610180814677],
      GraphicsColor->RGBColor[
       0.7053705328032247, 0.7920271242265633, 0.3430610180814677],
      FontColor->RGBColor[
       0.7053705328032247, 0.7920271242265633, 0.3430610180814677]], 
     StyleBox["12",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8796568754579697, 0.7668470440413315, 0.06021099747541392],
      FrontFaceColor->RGBColor[
       0.8796568754579697, 0.7668470440413315, 0.06021099747541392],
      BackFaceColor->RGBColor[
       0.8796568754579697, 0.7668470440413315, 0.06021099747541392],
      GraphicsColor->RGBColor[
       0.8796568754579697, 0.7668470440413315, 0.06021099747541392],
      FontColor->RGBColor[
       0.8796568754579697, 0.7668470440413315, 0.06021099747541392]], 
     StyleBox["13",
      StripOnInput->False,
      LineColor->RGBColor[
       0.10548269637850582`, 0.7404177792600197, 0.8459012528053174],
      FrontFaceColor->RGBColor[
       0.10548269637850582`, 0.7404177792600197, 0.8459012528053174],
      BackFaceColor->RGBColor[
       0.10548269637850582`, 0.7404177792600197, 0.8459012528053174],
      GraphicsColor->RGBColor[
       0.10548269637850582`, 0.7404177792600197, 0.8459012528053174],
      FontColor->RGBColor[
       0.10548269637850582`, 0.7404177792600197, 0.8459012528053174]]},
    {
     StyleBox["5",
      StripOnInput->False,
      LineColor->RGBColor[
       0.07872526425827675, 0.6798215085030488, 0.7275500913502957],
      FrontFaceColor->RGBColor[
       0.07872526425827675, 0.6798215085030488, 0.7275500913502957],
      BackFaceColor->RGBColor[
       0.07872526425827675, 0.6798215085030488, 0.7275500913502957],
      GraphicsColor->RGBColor[
       0.07872526425827675, 0.6798215085030488, 0.7275500913502957],
      FontColor->RGBColor[
       0.07872526425827675, 0.6798215085030488, 0.7275500913502957]], 
     StyleBox["6",
      StripOnInput->False,
      LineColor->RGBColor[
       0.9374661722116813, 0.10488772003802249`, 0.49308176609158627`],
      FrontFaceColor->RGBColor[
       0.9374661722116813, 0.10488772003802249`, 0.49308176609158627`],
      BackFaceColor->RGBColor[
       0.9374661722116813, 0.10488772003802249`, 0.49308176609158627`],
      GraphicsColor->RGBColor[
       0.9374661722116813, 0.10488772003802249`, 0.49308176609158627`],
      FontColor->RGBColor[
       0.9374661722116813, 0.10488772003802249`, 0.49308176609158627`]], 
     StyleBox["7",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8978005566637548, 0.14285386681639234`, 0.29285370394972965`],
      FrontFaceColor->RGBColor[
       0.8978005566637548, 0.14285386681639234`, 0.29285370394972965`],
      BackFaceColor->RGBColor[
       0.8978005566637548, 0.14285386681639234`, 0.29285370394972965`],
      GraphicsColor->RGBColor[
       0.8978005566637548, 0.14285386681639234`, 0.29285370394972965`],
      FontColor->RGBColor[
       0.8978005566637548, 0.14285386681639234`, 0.29285370394972965`]], 
     StyleBox["8",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5365385672157847, 0.29016702615774737`, 0.5762766524362781],
      FrontFaceColor->RGBColor[
       0.5365385672157847, 0.29016702615774737`, 0.5762766524362781],
      BackFaceColor->RGBColor[
       0.5365385672157847, 0.29016702615774737`, 0.5762766524362781],
      GraphicsColor->RGBColor[
       0.5365385672157847, 0.29016702615774737`, 0.5762766524362781],
      FontColor->RGBColor[
       0.5365385672157847, 0.29016702615774737`, 0.5762766524362781]], 
     StyleBox["9",
      StripOnInput->False,
      LineColor->RGBColor[
       0.09316366910553553, 0.8148147828735295, 0.6812681117243597],
      FrontFaceColor->RGBColor[
       0.09316366910553553, 0.8148147828735295, 0.6812681117243597],
      BackFaceColor->RGBColor[
       0.09316366910553553, 0.8148147828735295, 0.6812681117243597],
      GraphicsColor->RGBColor[
       0.09316366910553553, 0.8148147828735295, 0.6812681117243597],
      FontColor->RGBColor[
       0.09316366910553553, 0.8148147828735295, 0.6812681117243597]], 
     StyleBox["10",
      StripOnInput->False,
      LineColor->RGBColor[
       0.31635633161685495`, 0.6177549383088266, 0.6828688273468895],
      FrontFaceColor->RGBColor[
       0.31635633161685495`, 0.6177549383088266, 0.6828688273468895],
      BackFaceColor->RGBColor[
       0.31635633161685495`, 0.6177549383088266, 0.6828688273468895],
      GraphicsColor->RGBColor[
       0.31635633161685495`, 0.6177549383088266, 0.6828688273468895],
      FontColor->RGBColor[
       0.31635633161685495`, 0.6177549383088266, 0.6828688273468895]], 
     StyleBox["11",
      StripOnInput->False,
      LineColor->RGBColor[
       0.03278553056099143, 0.4001486247014132, 0.04401786545564157],
      FrontFaceColor->RGBColor[
       0.03278553056099143, 0.4001486247014132, 0.04401786545564157],
      BackFaceColor->RGBColor[
       0.03278553056099143, 0.4001486247014132, 0.04401786545564157],
      GraphicsColor->RGBColor[
       0.03278553056099143, 0.4001486247014132, 0.04401786545564157],
      FontColor->RGBColor[
       0.03278553056099143, 0.4001486247014132, 0.04401786545564157]], 
     StyleBox["12",
      StripOnInput->False,
      LineColor->RGBColor[
       0.12326268393612683`, 0.3725431667054522, 0.8313477979224133],
      FrontFaceColor->RGBColor[
       0.12326268393612683`, 0.3725431667054522, 0.8313477979224133],
      BackFaceColor->RGBColor[
       0.12326268393612683`, 0.3725431667054522, 0.8313477979224133],
      GraphicsColor->RGBColor[
       0.12326268393612683`, 0.3725431667054522, 0.8313477979224133],
      FontColor->RGBColor[
       0.12326268393612683`, 0.3725431667054522, 0.8313477979224133]], 
     StyleBox["13",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8657563482518869, 0.18256974544960913`, 0.3476049591214423],
      FrontFaceColor->RGBColor[
       0.8657563482518869, 0.18256974544960913`, 0.3476049591214423],
      BackFaceColor->RGBColor[
       0.8657563482518869, 0.18256974544960913`, 0.3476049591214423],
      GraphicsColor->RGBColor[
       0.8657563482518869, 0.18256974544960913`, 0.3476049591214423],
      FontColor->RGBColor[
       0.8657563482518869, 0.18256974544960913`, 0.3476049591214423]], 
     StyleBox["14",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7935154957155013, 0.7229352691165407, 0.9013330883590027],
      FrontFaceColor->RGBColor[
       0.7935154957155013, 0.7229352691165407, 0.9013330883590027],
      BackFaceColor->RGBColor[
       0.7935154957155013, 0.7229352691165407, 0.9013330883590027],
      GraphicsColor->RGBColor[
       0.7935154957155013, 0.7229352691165407, 0.9013330883590027],
      FontColor->RGBColor[
       0.7935154957155013, 0.7229352691165407, 0.9013330883590027]]},
    {
     StyleBox["6",
      StripOnInput->False,
      LineColor->RGBColor[
       0.9963035811084702, 0.20995728687092807`, 0.7938254015780486],
      FrontFaceColor->RGBColor[
       0.9963035811084702, 0.20995728687092807`, 0.7938254015780486],
      BackFaceColor->RGBColor[
       0.9963035811084702, 0.20995728687092807`, 0.7938254015780486],
      GraphicsColor->RGBColor[
       0.9963035811084702, 0.20995728687092807`, 0.7938254015780486],
      FontColor->RGBColor[
       0.9963035811084702, 0.20995728687092807`, 0.7938254015780486]], 
     StyleBox["7",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7808115147679193, 0.4293336245548123, 0.6893593016026671],
      FrontFaceColor->RGBColor[
       0.7808115147679193, 0.4293336245548123, 0.6893593016026671],
      BackFaceColor->RGBColor[
       0.7808115147679193, 0.4293336245548123, 0.6893593016026671],
      GraphicsColor->RGBColor[
       0.7808115147679193, 0.4293336245548123, 0.6893593016026671],
      FontColor->RGBColor[
       0.7808115147679193, 0.4293336245548123, 0.6893593016026671]], 
     StyleBox["8",
      StripOnInput->False,
      LineColor->RGBColor[
       0.47797961476070894`, 0.7825634488426136, 0.8717376802052035],
      FrontFaceColor->RGBColor[
       0.47797961476070894`, 0.7825634488426136, 0.8717376802052035],
      BackFaceColor->RGBColor[
       0.47797961476070894`, 0.7825634488426136, 0.8717376802052035],
      GraphicsColor->RGBColor[
       0.47797961476070894`, 0.7825634488426136, 0.8717376802052035],
      FontColor->RGBColor[
       0.47797961476070894`, 0.7825634488426136, 0.8717376802052035]], 
     StyleBox["9",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6100928554937488, 0.0944378124731804, 0.9699839434288198],
      FrontFaceColor->RGBColor[
       0.6100928554937488, 0.0944378124731804, 0.9699839434288198],
      BackFaceColor->RGBColor[
       0.6100928554937488, 0.0944378124731804, 0.9699839434288198],
      GraphicsColor->RGBColor[
       0.6100928554937488, 0.0944378124731804, 0.9699839434288198],
      FontColor->RGBColor[
       0.6100928554937488, 0.0944378124731804, 0.9699839434288198]], 
     StyleBox["10",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7207326422909697, 0.21922841335762677`, 0.6793757491281631],
      FrontFaceColor->RGBColor[
       0.7207326422909697, 0.21922841335762677`, 0.6793757491281631],
      BackFaceColor->RGBColor[
       0.7207326422909697, 0.21922841335762677`, 0.6793757491281631],
      GraphicsColor->RGBColor[
       0.7207326422909697, 0.21922841335762677`, 0.6793757491281631],
      FontColor->RGBColor[
       0.7207326422909697, 0.21922841335762677`, 0.6793757491281631]], 
     StyleBox["11",
      StripOnInput->False,
      LineColor->RGBColor[
       0.1995163923626524, 0.37766509455595787`, 0.5577893704086538],
      FrontFaceColor->RGBColor[
       0.1995163923626524, 0.37766509455595787`, 0.5577893704086538],
      BackFaceColor->RGBColor[
       0.1995163923626524, 0.37766509455595787`, 0.5577893704086538],
      GraphicsColor->RGBColor[
       0.1995163923626524, 0.37766509455595787`, 0.5577893704086538],
      FontColor->RGBColor[
       0.1995163923626524, 0.37766509455595787`, 0.5577893704086538]], 
     StyleBox["12",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6991161903167809, 0.8339475467444271, 0.7914977268916916],
      FrontFaceColor->RGBColor[
       0.6991161903167809, 0.8339475467444271, 0.7914977268916916],
      BackFaceColor->RGBColor[
       0.6991161903167809, 0.8339475467444271, 0.7914977268916916],
      GraphicsColor->RGBColor[
       0.6991161903167809, 0.8339475467444271, 0.7914977268916916],
      FontColor->RGBColor[
       0.6991161903167809, 0.8339475467444271, 0.7914977268916916]], 
     StyleBox["13",
      StripOnInput->False,
      LineColor->RGBColor[
       0.4221688729607427, 0.21516533221615264`, 0.22309207680732968`],
      FrontFaceColor->RGBColor[
       0.4221688729607427, 0.21516533221615264`, 0.22309207680732968`],
      BackFaceColor->RGBColor[
       0.4221688729607427, 0.21516533221615264`, 0.22309207680732968`],
      GraphicsColor->RGBColor[
       0.4221688729607427, 0.21516533221615264`, 0.22309207680732968`],
      FontColor->RGBColor[
       0.4221688729607427, 0.21516533221615264`, 0.22309207680732968`]], 
     StyleBox["14",
      StripOnInput->False,
      LineColor->RGBColor[
       0.1844711877015215, 0.6710677508134351, 0.11271469676443235`],
      FrontFaceColor->RGBColor[
       0.1844711877015215, 0.6710677508134351, 0.11271469676443235`],
      BackFaceColor->RGBColor[
       0.1844711877015215, 0.6710677508134351, 0.11271469676443235`],
      GraphicsColor->RGBColor[
       0.1844711877015215, 0.6710677508134351, 0.11271469676443235`],
      FontColor->RGBColor[
       0.1844711877015215, 0.6710677508134351, 0.11271469676443235`]], 
     StyleBox["15",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5691703435047775, 0.23442601216276238`, 0.5839134973246125],
      FrontFaceColor->RGBColor[
       0.5691703435047775, 0.23442601216276238`, 0.5839134973246125],
      BackFaceColor->RGBColor[
       0.5691703435047775, 0.23442601216276238`, 0.5839134973246125],
      GraphicsColor->RGBColor[
       0.5691703435047775, 0.23442601216276238`, 0.5839134973246125],
      FontColor->RGBColor[
       0.5691703435047775, 0.23442601216276238`, 0.5839134973246125]]},
    {
     StyleBox["7",
      StripOnInput->False,
      LineColor->RGBColor[
       0.19123824559406177`, 0.3971819441141531, 0.06412927923789047],
      FrontFaceColor->RGBColor[
       0.19123824559406177`, 0.3971819441141531, 0.06412927923789047],
      BackFaceColor->RGBColor[
       0.19123824559406177`, 0.3971819441141531, 0.06412927923789047],
      GraphicsColor->RGBColor[
       0.19123824559406177`, 0.3971819441141531, 0.06412927923789047],
      FontColor->RGBColor[
       0.19123824559406177`, 0.3971819441141531, 0.06412927923789047]], 
     StyleBox["8",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7681816570250419, 0.5338227504295745, 0.4289659954924654],
      FrontFaceColor->RGBColor[
       0.7681816570250419, 0.5338227504295745, 0.4289659954924654],
      BackFaceColor->RGBColor[
       0.7681816570250419, 0.5338227504295745, 0.4289659954924654],
      GraphicsColor->RGBColor[
       0.7681816570250419, 0.5338227504295745, 0.4289659954924654],
      FontColor->RGBColor[
       0.7681816570250419, 0.5338227504295745, 0.4289659954924654]], 
     StyleBox["9",
      StripOnInput->False,
      LineColor->RGBColor[
       0.851819500606749, 0.677946645003916, 0.4528553939242066],
      FrontFaceColor->RGBColor[
       0.851819500606749, 0.677946645003916, 0.4528553939242066],
      BackFaceColor->RGBColor[
       0.851819500606749, 0.677946645003916, 0.4528553939242066],
      GraphicsColor->RGBColor[
       0.851819500606749, 0.677946645003916, 0.4528553939242066],
      FontColor->RGBColor[
       0.851819500606749, 0.677946645003916, 0.4528553939242066]], 
     StyleBox["10",
      StripOnInput->False,
      LineColor->RGBColor[
       0.22180216460581859`, 0.7838329456667152, 0.08746413995882185],
      FrontFaceColor->RGBColor[
       0.22180216460581859`, 0.7838329456667152, 0.08746413995882185],
      BackFaceColor->RGBColor[
       0.22180216460581859`, 0.7838329456667152, 0.08746413995882185],
      GraphicsColor->RGBColor[
       0.22180216460581859`, 0.7838329456667152, 0.08746413995882185],
      FontColor->RGBColor[
       0.22180216460581859`, 0.7838329456667152, 0.08746413995882185]], 
     StyleBox["11",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7603449297710687, 0.4897691574006271, 0.2601477073828018],
      FrontFaceColor->RGBColor[
       0.7603449297710687, 0.4897691574006271, 0.2601477073828018],
      BackFaceColor->RGBColor[
       0.7603449297710687, 0.4897691574006271, 0.2601477073828018],
      GraphicsColor->RGBColor[
       0.7603449297710687, 0.4897691574006271, 0.2601477073828018],
      FontColor->RGBColor[
       0.7603449297710687, 0.4897691574006271, 0.2601477073828018]], 
     StyleBox["12",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7414032043537906, 0.8221397115588212, 0.46235474084896233`],
      FrontFaceColor->RGBColor[
       0.7414032043537906, 0.8221397115588212, 0.46235474084896233`],
      BackFaceColor->RGBColor[
       0.7414032043537906, 0.8221397115588212, 0.46235474084896233`],
      GraphicsColor->RGBColor[
       0.7414032043537906, 0.8221397115588212, 0.46235474084896233`],
      FontColor->RGBColor[
       0.7414032043537906, 0.8221397115588212, 0.46235474084896233`]], 
     StyleBox["13",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7004253860712997, 0.9150948777969279, 0.3841776897645204],
      FrontFaceColor->RGBColor[
       0.7004253860712997, 0.9150948777969279, 0.3841776897645204],
      BackFaceColor->RGBColor[
       0.7004253860712997, 0.9150948777969279, 0.3841776897645204],
      GraphicsColor->RGBColor[
       0.7004253860712997, 0.9150948777969279, 0.3841776897645204],
      FontColor->RGBColor[
       0.7004253860712997, 0.9150948777969279, 0.3841776897645204]], 
     StyleBox["14",
      StripOnInput->False,
      LineColor->RGBColor[
       0.37466759931208027`, 0.5574494523220899, 0.886520824378261],
      FrontFaceColor->RGBColor[
       0.37466759931208027`, 0.5574494523220899, 0.886520824378261],
      BackFaceColor->RGBColor[
       0.37466759931208027`, 0.5574494523220899, 0.886520824378261],
      GraphicsColor->RGBColor[
       0.37466759931208027`, 0.5574494523220899, 0.886520824378261],
      FontColor->RGBColor[
       0.37466759931208027`, 0.5574494523220899, 0.886520824378261]], 
     StyleBox["15",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8959594455921813, 0.5442186730373428, 0.8273032233170328],
      FrontFaceColor->RGBColor[
       0.8959594455921813, 0.5442186730373428, 0.8273032233170328],
      BackFaceColor->RGBColor[
       0.8959594455921813, 0.5442186730373428, 0.8273032233170328],
      GraphicsColor->RGBColor[
       0.8959594455921813, 0.5442186730373428, 0.8273032233170328],
      FontColor->RGBColor[
       0.8959594455921813, 0.5442186730373428, 0.8273032233170328]], 
     StyleBox["16",
      StripOnInput->False,
      LineColor->RGBColor[
       0.16608245023918689`, 0.6048838584335614, 0.3645768353011247],
      FrontFaceColor->RGBColor[
       0.16608245023918689`, 0.6048838584335614, 0.3645768353011247],
      BackFaceColor->RGBColor[
       0.16608245023918689`, 0.6048838584335614, 0.3645768353011247],
      GraphicsColor->RGBColor[
       0.16608245023918689`, 0.6048838584335614, 0.3645768353011247],
      FontColor->RGBColor[
       0.16608245023918689`, 0.6048838584335614, 0.3645768353011247]]},
    {
     StyleBox["8",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6197453383960683, 0.813657715494005, 0.33624967397644534`],
      FrontFaceColor->RGBColor[
       0.6197453383960683, 0.813657715494005, 0.33624967397644534`],
      BackFaceColor->RGBColor[
       0.6197453383960683, 0.813657715494005, 0.33624967397644534`],
      GraphicsColor->RGBColor[
       0.6197453383960683, 0.813657715494005, 0.33624967397644534`],
      FontColor->RGBColor[
       0.6197453383960683, 0.813657715494005, 0.33624967397644534`]], 
     StyleBox["9",
      StripOnInput->False,
      LineColor->RGBColor[
       0.33510610826629317`, 0.23040467823674615`, 0.37568033227685094`],
      FrontFaceColor->RGBColor[
       0.33510610826629317`, 0.23040467823674615`, 0.37568033227685094`],
      BackFaceColor->RGBColor[
       0.33510610826629317`, 0.23040467823674615`, 0.37568033227685094`],
      GraphicsColor->RGBColor[
       0.33510610826629317`, 0.23040467823674615`, 0.37568033227685094`],
      FontColor->RGBColor[
       0.33510610826629317`, 0.23040467823674615`, 0.37568033227685094`]], 
     StyleBox["10",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8382294687143779, 0.6013934773939862, 0.9392188830869219],
      FrontFaceColor->RGBColor[
       0.8382294687143779, 0.6013934773939862, 0.9392188830869219],
      BackFaceColor->RGBColor[
       0.8382294687143779, 0.6013934773939862, 0.9392188830869219],
      GraphicsColor->RGBColor[
       0.8382294687143779, 0.6013934773939862, 0.9392188830869219],
      FontColor->RGBColor[
       0.8382294687143779, 0.6013934773939862, 0.9392188830869219]], 
     StyleBox["11",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8550965795716585, 0.001233141181838926, 0.18467538294981067`],
      FrontFaceColor->RGBColor[
       0.8550965795716585, 0.001233141181838926, 0.18467538294981067`],
      BackFaceColor->RGBColor[
       0.8550965795716585, 0.001233141181838926, 0.18467538294981067`],
      GraphicsColor->RGBColor[
       0.8550965795716585, 0.001233141181838926, 0.18467538294981067`],
      FontColor->RGBColor[
       0.8550965795716585, 0.001233141181838926, 0.18467538294981067`]], 
     StyleBox["12",
      StripOnInput->False,
      LineColor->RGBColor[
       0.3420225310507834, 0.08649070059621455, 0.7711847999183061],
      FrontFaceColor->RGBColor[
       0.3420225310507834, 0.08649070059621455, 0.7711847999183061],
      BackFaceColor->RGBColor[
       0.3420225310507834, 0.08649070059621455, 0.7711847999183061],
      GraphicsColor->RGBColor[
       0.3420225310507834, 0.08649070059621455, 0.7711847999183061],
      FontColor->RGBColor[
       0.3420225310507834, 0.08649070059621455, 0.7711847999183061]], 
     StyleBox["13",
      StripOnInput->False,
      LineColor->RGBColor[
       0.1621117886436998, 0.7454470164648912, 0.820167345637169],
      FrontFaceColor->RGBColor[
       0.1621117886436998, 0.7454470164648912, 0.820167345637169],
      BackFaceColor->RGBColor[
       0.1621117886436998, 0.7454470164648912, 0.820167345637169],
      GraphicsColor->RGBColor[
       0.1621117886436998, 0.7454470164648912, 0.820167345637169],
      FontColor->RGBColor[
       0.1621117886436998, 0.7454470164648912, 0.820167345637169]], 
     StyleBox["14",
      StripOnInput->False,
      LineColor->RGBColor[
       0.38168892817592437`, 0.02886745590078066, 0.10145365074643586`],
      FrontFaceColor->RGBColor[
       0.38168892817592437`, 0.02886745590078066, 0.10145365074643586`],
      BackFaceColor->RGBColor[
       0.38168892817592437`, 0.02886745590078066, 0.10145365074643586`],
      GraphicsColor->RGBColor[
       0.38168892817592437`, 0.02886745590078066, 0.10145365074643586`],
      FontColor->RGBColor[
       0.38168892817592437`, 0.02886745590078066, 0.10145365074643586`]], 
     StyleBox["15",
      StripOnInput->False,
      LineColor->RGBColor[
       0.4992309281188023, 0.0831443422528031, 0.964732779320177],
      FrontFaceColor->RGBColor[
       0.4992309281188023, 0.0831443422528031, 0.964732779320177],
      BackFaceColor->RGBColor[
       0.4992309281188023, 0.0831443422528031, 0.964732779320177],
      GraphicsColor->RGBColor[
       0.4992309281188023, 0.0831443422528031, 0.964732779320177],
      FontColor->RGBColor[
       0.4992309281188023, 0.0831443422528031, 0.964732779320177]], 
     StyleBox["16",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7489121631327529, 0.6980091343140395, 0.16118046440066958`],
      FrontFaceColor->RGBColor[
       0.7489121631327529, 0.6980091343140395, 0.16118046440066958`],
      BackFaceColor->RGBColor[
       0.7489121631327529, 0.6980091343140395, 0.16118046440066958`],
      GraphicsColor->RGBColor[
       0.7489121631327529, 0.6980091343140395, 0.16118046440066958`],
      FontColor->RGBColor[
       0.7489121631327529, 0.6980091343140395, 0.16118046440066958`]], 
     StyleBox["17",
      StripOnInput->False,
      LineColor->RGBColor[
       0.13420124670628164`, 0.7601480525049673, 0.6976641068333442],
      FrontFaceColor->RGBColor[
       0.13420124670628164`, 0.7601480525049673, 0.6976641068333442],
      BackFaceColor->RGBColor[
       0.13420124670628164`, 0.7601480525049673, 0.6976641068333442],
      GraphicsColor->RGBColor[
       0.13420124670628164`, 0.7601480525049673, 0.6976641068333442],
      FontColor->RGBColor[
       0.13420124670628164`, 0.7601480525049673, 0.6976641068333442]]},
    {
     StyleBox["9",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8242297525265083, 0.8572031158278757, 0.1436498147153884],
      FrontFaceColor->RGBColor[
       0.8242297525265083, 0.8572031158278757, 0.1436498147153884],
      BackFaceColor->RGBColor[
       0.8242297525265083, 0.8572031158278757, 0.1436498147153884],
      GraphicsColor->RGBColor[
       0.8242297525265083, 0.8572031158278757, 0.1436498147153884],
      FontColor->RGBColor[
       0.8242297525265083, 0.8572031158278757, 0.1436498147153884]], 
     StyleBox["10",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5407934168649573, 0.0878762653247791, 0.9215896435389537],
      FrontFaceColor->RGBColor[
       0.5407934168649573, 0.0878762653247791, 0.9215896435389537],
      BackFaceColor->RGBColor[
       0.5407934168649573, 0.0878762653247791, 0.9215896435389537],
      GraphicsColor->RGBColor[
       0.5407934168649573, 0.0878762653247791, 0.9215896435389537],
      FontColor->RGBColor[
       0.5407934168649573, 0.0878762653247791, 0.9215896435389537]], 
     StyleBox["11",
      StripOnInput->False,
      LineColor->RGBColor[
       0.4170618876650347, 0.4072759244017523, 0.38225676541388265`],
      FrontFaceColor->RGBColor[
       0.4170618876650347, 0.4072759244017523, 0.38225676541388265`],
      BackFaceColor->RGBColor[
       0.4170618876650347, 0.4072759244017523, 0.38225676541388265`],
      GraphicsColor->RGBColor[
       0.4170618876650347, 0.4072759244017523, 0.38225676541388265`],
      FontColor->RGBColor[
       0.4170618876650347, 0.4072759244017523, 0.38225676541388265`]], 
     StyleBox["12",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7658274068134634, 0.48115621640497186`, 0.953694582171142],
      FrontFaceColor->RGBColor[
       0.7658274068134634, 0.48115621640497186`, 0.953694582171142],
      BackFaceColor->RGBColor[
       0.7658274068134634, 0.48115621640497186`, 0.953694582171142],
      GraphicsColor->RGBColor[
       0.7658274068134634, 0.48115621640497186`, 0.953694582171142],
      FontColor->RGBColor[
       0.7658274068134634, 0.48115621640497186`, 0.953694582171142]], 
     StyleBox["13",
      StripOnInput->False,
      LineColor->RGBColor[
       0.14295630227259193`, 0.10723274025787721`, 0.2919241755396682],
      FrontFaceColor->RGBColor[
       0.14295630227259193`, 0.10723274025787721`, 0.2919241755396682],
      BackFaceColor->RGBColor[
       0.14295630227259193`, 0.10723274025787721`, 0.2919241755396682],
      GraphicsColor->RGBColor[
       0.14295630227259193`, 0.10723274025787721`, 0.2919241755396682],
      FontColor->RGBColor[
       0.14295630227259193`, 0.10723274025787721`, 0.2919241755396682]], 
     StyleBox["14",
      StripOnInput->False,
      LineColor->RGBColor[
       0.725175136046031, 0.602306185984989, 0.4118977885408315],
      FrontFaceColor->RGBColor[
       0.725175136046031, 0.602306185984989, 0.4118977885408315],
      BackFaceColor->RGBColor[
       0.725175136046031, 0.602306185984989, 0.4118977885408315],
      GraphicsColor->RGBColor[
       0.725175136046031, 0.602306185984989, 0.4118977885408315],
      FontColor->RGBColor[
       0.725175136046031, 0.602306185984989, 0.4118977885408315]], 
     StyleBox["15",
      StripOnInput->False,
      LineColor->RGBColor[
       0.23134946769314846`, 0.011900188149800872`, 0.9812737176198445],
      FrontFaceColor->RGBColor[
       0.23134946769314846`, 0.011900188149800872`, 0.9812737176198445],
      BackFaceColor->RGBColor[
       0.23134946769314846`, 0.011900188149800872`, 0.9812737176198445],
      GraphicsColor->RGBColor[
       0.23134946769314846`, 0.011900188149800872`, 0.9812737176198445],
      FontColor->RGBColor[
       0.23134946769314846`, 0.011900188149800872`, 0.9812737176198445]], 
     StyleBox["16",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8220488497311782, 0.20141528074180104`, 0.6014697117265637],
      FrontFaceColor->RGBColor[
       0.8220488497311782, 0.20141528074180104`, 0.6014697117265637],
      BackFaceColor->RGBColor[
       0.8220488497311782, 0.20141528074180104`, 0.6014697117265637],
      GraphicsColor->RGBColor[
       0.8220488497311782, 0.20141528074180104`, 0.6014697117265637],
      FontColor->RGBColor[
       0.8220488497311782, 0.20141528074180104`, 0.6014697117265637]], 
     StyleBox["17",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6614743553513365, 0.8308320021884805, 0.34001451348426137`],
      FrontFaceColor->RGBColor[
       0.6614743553513365, 0.8308320021884805, 0.34001451348426137`],
      BackFaceColor->RGBColor[
       0.6614743553513365, 0.8308320021884805, 0.34001451348426137`],
      GraphicsColor->RGBColor[
       0.6614743553513365, 0.8308320021884805, 0.34001451348426137`],
      FontColor->RGBColor[
       0.6614743553513365, 0.8308320021884805, 0.34001451348426137`]], 
     StyleBox["18",
      StripOnInput->False,
      LineColor->RGBColor[
       0.023945210814197093`, 0.9369135467300445, 0.8863845146129712],
      FrontFaceColor->RGBColor[
       0.023945210814197093`, 0.9369135467300445, 0.8863845146129712],
      BackFaceColor->RGBColor[
       0.023945210814197093`, 0.9369135467300445, 0.8863845146129712],
      GraphicsColor->RGBColor[
       0.023945210814197093`, 0.9369135467300445, 0.8863845146129712],
      FontColor->RGBColor[
       0.023945210814197093`, 0.9369135467300445, 0.8863845146129712]]},
    {
     StyleBox["10",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6133984054295336, 0.041084381892192656`, 0.8229526623157046],
      FrontFaceColor->RGBColor[
       0.6133984054295336, 0.041084381892192656`, 0.8229526623157046],
      BackFaceColor->RGBColor[
       0.6133984054295336, 0.041084381892192656`, 0.8229526623157046],
      GraphicsColor->RGBColor[
       0.6133984054295336, 0.041084381892192656`, 0.8229526623157046],
      FontColor->RGBColor[
       0.6133984054295336, 0.041084381892192656`, 0.8229526623157046]], 
     StyleBox["11",
      StripOnInput->False,
      LineColor->RGBColor[
       0.16583845850629153`, 0.143417955866866, 0.6385222792976308],
      FrontFaceColor->RGBColor[
       0.16583845850629153`, 0.143417955866866, 0.6385222792976308],
      BackFaceColor->RGBColor[
       0.16583845850629153`, 0.143417955866866, 0.6385222792976308],
      GraphicsColor->RGBColor[
       0.16583845850629153`, 0.143417955866866, 0.6385222792976308],
      FontColor->RGBColor[
       0.16583845850629153`, 0.143417955866866, 0.6385222792976308]], 
     StyleBox["12",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8963775030735313, 0.42436185355573786`, 0.8616624996597337],
      FrontFaceColor->RGBColor[
       0.8963775030735313, 0.42436185355573786`, 0.8616624996597337],
      BackFaceColor->RGBColor[
       0.8963775030735313, 0.42436185355573786`, 0.8616624996597337],
      GraphicsColor->RGBColor[
       0.8963775030735313, 0.42436185355573786`, 0.8616624996597337],
      FontColor->RGBColor[
       0.8963775030735313, 0.42436185355573786`, 0.8616624996597337]], 
     StyleBox["13",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6092450677263892, 0.4130800492756701, 0.9107001481995887],
      FrontFaceColor->RGBColor[
       0.6092450677263892, 0.4130800492756701, 0.9107001481995887],
      BackFaceColor->RGBColor[
       0.6092450677263892, 0.4130800492756701, 0.9107001481995887],
      GraphicsColor->RGBColor[
       0.6092450677263892, 0.4130800492756701, 0.9107001481995887],
      FontColor->RGBColor[
       0.6092450677263892, 0.4130800492756701, 0.9107001481995887]], 
     StyleBox["14",
      StripOnInput->False,
      LineColor->RGBColor[
       0.37107731032531555`, 0.7461759986707046, 0.3866430584423943],
      FrontFaceColor->RGBColor[
       0.37107731032531555`, 0.7461759986707046, 0.3866430584423943],
      BackFaceColor->RGBColor[
       0.37107731032531555`, 0.7461759986707046, 0.3866430584423943],
      GraphicsColor->RGBColor[
       0.37107731032531555`, 0.7461759986707046, 0.3866430584423943],
      FontColor->RGBColor[
       0.37107731032531555`, 0.7461759986707046, 0.3866430584423943]], 
     StyleBox["15",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5394046565493367, 0.8505846276185713, 0.5382203327955333],
      FrontFaceColor->RGBColor[
       0.5394046565493367, 0.8505846276185713, 0.5382203327955333],
      BackFaceColor->RGBColor[
       0.5394046565493367, 0.8505846276185713, 0.5382203327955333],
      GraphicsColor->RGBColor[
       0.5394046565493367, 0.8505846276185713, 0.5382203327955333],
      FontColor->RGBColor[
       0.5394046565493367, 0.8505846276185713, 0.5382203327955333]], 
     StyleBox["16",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7795405259442927, 0.5188268215618415, 0.3197048066344206],
      FrontFaceColor->RGBColor[
       0.7795405259442927, 0.5188268215618415, 0.3197048066344206],
      BackFaceColor->RGBColor[
       0.7795405259442927, 0.5188268215618415, 0.3197048066344206],
      GraphicsColor->RGBColor[
       0.7795405259442927, 0.5188268215618415, 0.3197048066344206],
      FontColor->RGBColor[
       0.7795405259442927, 0.5188268215618415, 0.3197048066344206]], 
     StyleBox["17",
      StripOnInput->False,
      LineColor->RGBColor[
       0.9009145263881444, 0.1564336518504037, 0.3675859926187788],
      FrontFaceColor->RGBColor[
       0.9009145263881444, 0.1564336518504037, 0.3675859926187788],
      BackFaceColor->RGBColor[
       0.9009145263881444, 0.1564336518504037, 0.3675859926187788],
      GraphicsColor->RGBColor[
       0.9009145263881444, 0.1564336518504037, 0.3675859926187788],
      FontColor->RGBColor[
       0.9009145263881444, 0.1564336518504037, 0.3675859926187788]], 
     StyleBox["18",
      StripOnInput->False,
      LineColor->RGBColor[
       0.13708800056635417`, 0.9585961126973761, 0.09413702727562479],
      FrontFaceColor->RGBColor[
       0.13708800056635417`, 0.9585961126973761, 0.09413702727562479],
      BackFaceColor->RGBColor[
       0.13708800056635417`, 0.9585961126973761, 0.09413702727562479],
      GraphicsColor->RGBColor[
       0.13708800056635417`, 0.9585961126973761, 0.09413702727562479],
      FontColor->RGBColor[
       0.13708800056635417`, 0.9585961126973761, 0.09413702727562479]], 
     StyleBox["19",
      StripOnInput->False,
      LineColor->RGBColor[
       0.4025354857070662, 0.6455796588635088, 0.6941658100359542],
      FrontFaceColor->RGBColor[
       0.4025354857070662, 0.6455796588635088, 0.6941658100359542],
      BackFaceColor->RGBColor[
       0.4025354857070662, 0.6455796588635088, 0.6941658100359542],
      GraphicsColor->RGBColor[
       0.4025354857070662, 0.6455796588635088, 0.6941658100359542],
      FontColor->RGBColor[
       0.4025354857070662, 0.6455796588635088, 0.6941658100359542]]},
    {
     StyleBox["11",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8217033273464718, 0.9565141400386035, 0.14061450823618626`],
      FrontFaceColor->RGBColor[
       0.8217033273464718, 0.9565141400386035, 0.14061450823618626`],
      BackFaceColor->RGBColor[
       0.8217033273464718, 0.9565141400386035, 0.14061450823618626`],
      GraphicsColor->RGBColor[
       0.8217033273464718, 0.9565141400386035, 0.14061450823618626`],
      FontColor->RGBColor[
       0.8217033273464718, 0.9565141400386035, 0.14061450823618626`]], 
     StyleBox["12",
      StripOnInput->False,
      LineColor->RGBColor[
       0.29795233373470387`, 0.22987027645785285`, 0.08720505440168957],
      FrontFaceColor->RGBColor[
       0.29795233373470387`, 0.22987027645785285`, 0.08720505440168957],
      BackFaceColor->RGBColor[
       0.29795233373470387`, 0.22987027645785285`, 0.08720505440168957],
      GraphicsColor->RGBColor[
       0.29795233373470387`, 0.22987027645785285`, 0.08720505440168957],
      FontColor->RGBColor[
       0.29795233373470387`, 0.22987027645785285`, 0.08720505440168957]], 
     StyleBox["13",
      StripOnInput->False,
      LineColor->RGBColor[
       0.38831533810993624`, 0.03136176871028362, 0.6039607173208024],
      FrontFaceColor->RGBColor[
       0.38831533810993624`, 0.03136176871028362, 0.6039607173208024],
      BackFaceColor->RGBColor[
       0.38831533810993624`, 0.03136176871028362, 0.6039607173208024],
      GraphicsColor->RGBColor[
       0.38831533810993624`, 0.03136176871028362, 0.6039607173208024],
      FontColor->RGBColor[
       0.38831533810993624`, 0.03136176871028362, 0.6039607173208024]], 
     StyleBox["14",
      StripOnInput->False,
      LineColor->RGBColor[
       0.18460084876723615`, 0.7877927016271906, 0.3799992729990571],
      FrontFaceColor->RGBColor[
       0.18460084876723615`, 0.7877927016271906, 0.3799992729990571],
      BackFaceColor->RGBColor[
       0.18460084876723615`, 0.7877927016271906, 0.3799992729990571],
      GraphicsColor->RGBColor[
       0.18460084876723615`, 0.7877927016271906, 0.3799992729990571],
      FontColor->RGBColor[
       0.18460084876723615`, 0.7877927016271906, 0.3799992729990571]], 
     StyleBox["15",
      StripOnInput->False,
      LineColor->RGBColor[
       0.01762213834737225, 0.699385652576848, 0.3983569119802117],
      FrontFaceColor->RGBColor[
       0.01762213834737225, 0.699385652576848, 0.3983569119802117],
      BackFaceColor->RGBColor[
       0.01762213834737225, 0.699385652576848, 0.3983569119802117],
      GraphicsColor->RGBColor[
       0.01762213834737225, 0.699385652576848, 0.3983569119802117],
      FontColor->RGBColor[
       0.01762213834737225, 0.699385652576848, 0.3983569119802117]], 
     StyleBox["16",
      StripOnInput->False,
      LineColor->RGBColor[
       0.7291305950448019, 0.9692970911823597, 0.08564097083190059],
      FrontFaceColor->RGBColor[
       0.7291305950448019, 0.9692970911823597, 0.08564097083190059],
      BackFaceColor->RGBColor[
       0.7291305950448019, 0.9692970911823597, 0.08564097083190059],
      GraphicsColor->RGBColor[
       0.7291305950448019, 0.9692970911823597, 0.08564097083190059],
      FontColor->RGBColor[
       0.7291305950448019, 0.9692970911823597, 0.08564097083190059]], 
     StyleBox["17",
      StripOnInput->False,
      LineColor->RGBColor[
       0.2115063931879484, 0.7402401046848772, 0.9736048799358374],
      FrontFaceColor->RGBColor[
       0.2115063931879484, 0.7402401046848772, 0.9736048799358374],
      BackFaceColor->RGBColor[
       0.2115063931879484, 0.7402401046848772, 0.9736048799358374],
      GraphicsColor->RGBColor[
       0.2115063931879484, 0.7402401046848772, 0.9736048799358374],
      FontColor->RGBColor[
       0.2115063931879484, 0.7402401046848772, 0.9736048799358374]], 
     StyleBox["18",
      StripOnInput->False,
      LineColor->RGBColor[
       0.3309591576383939, 0.5572082502687796, 0.14956275719266054`],
      FrontFaceColor->RGBColor[
       0.3309591576383939, 0.5572082502687796, 0.14956275719266054`],
      BackFaceColor->RGBColor[
       0.3309591576383939, 0.5572082502687796, 0.14956275719266054`],
      GraphicsColor->RGBColor[
       0.3309591576383939, 0.5572082502687796, 0.14956275719266054`],
      FontColor->RGBColor[
       0.3309591576383939, 0.5572082502687796, 0.14956275719266054`]], 
     StyleBox["19",
      StripOnInput->False,
      LineColor->RGBColor[
       0.9979824587880197, 0.8043202298451513, 0.3932149351772136],
      FrontFaceColor->RGBColor[
       0.9979824587880197, 0.8043202298451513, 0.3932149351772136],
      BackFaceColor->RGBColor[
       0.9979824587880197, 0.8043202298451513, 0.3932149351772136],
      GraphicsColor->RGBColor[
       0.9979824587880197, 0.8043202298451513, 0.3932149351772136],
      FontColor->RGBColor[
       0.9979824587880197, 0.8043202298451513, 0.3932149351772136]], 
     StyleBox["20",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6758859593564619, 0.8641442225615867, 0.645860732016259],
      FrontFaceColor->RGBColor[
       0.6758859593564619, 0.8641442225615867, 0.645860732016259],
      BackFaceColor->RGBColor[
       0.6758859593564619, 0.8641442225615867, 0.645860732016259],
      GraphicsColor->RGBColor[
       0.6758859593564619, 0.8641442225615867, 0.645860732016259],
      FontColor->RGBColor[
       0.6758859593564619, 0.8641442225615867, 0.645860732016259]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Input",
 CellChangeTimes->{3.82698298555241*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"4127bde4-d98d-4172-a61c-cdc5b733754a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["8. Basic Graphics Objects", "Section",
 CellChangeTimes->{{3.826983476502763*^9, 3.8269834787058067`*^9}, {
  3.8269840305413303`*^9, 
  3.8269840306830397`*^9}},ExpressionUUID->"83359d99-dca2-45a6-a205-\
74555312e3bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomColor", "[", "]"}], ",", " ", 
       RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}], ",", "5"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.826983136249702*^9, 3.8269831667735043`*^9}, {
   3.826983510676394*^9, 3.8269835171871233`*^9}, 3.826987157702404*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"a3574409-fe27-426c-850b-59f0803e116b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     RGBColor[0.9090797181176387, 0.1753567402835412, 0.08452393310779938], 
     RectangleBox[{0, 0}]}], 
   GraphicsBox[{
     RGBColor[0.934740131574977, 0.6119976778374274, 0.7521566628732199], 
     RectangleBox[{0, 0}]}], 
   GraphicsBox[{
     RGBColor[0.9190556569647992, 0.8275200477891729, 0.4454729068466179], 
     RectangleBox[{0, 0}]}], 
   GraphicsBox[{
     RGBColor[0.4827683516099279, 0.46511007096325496`, 0.7907197111052127], 
     RectangleBox[{0, 0}]}], 
   GraphicsBox[{
     RGBColor[0.1368448994665652, 0.7038316352502583, 0.6113021500810389], 
     RectangleBox[{0, 0}]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.826983148225061*^9, 3.8269831674200087`*^9}, 
   3.8269837723785133`*^9, {3.8269871581295223`*^9, 3.826987161745225*^9}},
 CellLabel->"Out[98]=",ExpressionUUID->"e571bf28-d2f3-4f41-b06b-b020a539c1a8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["9. Interactive Manipulation", "Section",
 CellChangeTimes->{{3.826984036937105*^9, 
  3.8269840410151052`*^9}},ExpressionUUID->"13c2da56-cacf-4c05-a304-\
27df5d2933ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"RegularPolygon", "[", "n", "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"{", 
        RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], "]"}]}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "3", ",", "10", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"g", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1"}], "}"}], ",", "0", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.826985761819066*^9, 
  3.826985904315302*^9}},ExpressionUUID->"955f5044-835e-415c-ad7a-\
2c98361b529b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1, $CellContext`b$$ = 
    0.58, $CellContext`g$$ = 0., $CellContext`n$$ = 10, $CellContext`r$$ = 
    0.34, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 3, 10, 1}, {
      Hold[$CellContext`r$$], 0, 1}, {
      Hold[$CellContext`g$$], 0, 1}, {
      Hold[$CellContext`b$$], 0, 1}, {{
       Hold[$CellContext`a$$], 1}, 0, 1}}, Typeset`size$$ = {
    360., {169., 174.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1, $CellContext`b$$ = 
        0, $CellContext`g$$ = 0, $CellContext`n$$ = 3, $CellContext`r$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Style[
         RegularPolygon[$CellContext`n$$], 
         RGBColor[{$CellContext`r$$, $CellContext`g$$, $CellContext`b$$, \
$CellContext`a$$}]]], 
      "Specifications" :> {{$CellContext`n$$, 3, 10, 1}, {$CellContext`r$$, 0,
          1}, {$CellContext`g$$, 0, 1}, {$CellContext`b$$, 0, 
         1}, {{$CellContext`a$$, 1}, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {262., 268.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8269858285608263`*^9, 3.826985878898034*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"edd1d297-5768-466f-9cda-beb649ad0aed"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["10. Images", "Section",
 CellChangeTimes->{{3.826985994523511*^9, 3.82698599923956*^9}, {
  3.826987534502433*^9, 
  3.82698753487367*^9}},ExpressionUUID->"563a6215-558e-4d4d-924d-\
e5be27d218cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Image", "[", 
   RowBox[{
    RowBox[{"EntityValue", "[", 
     RowBox[{
      NamespaceBox["LinguisticAssistant",
       DynamicModuleBox[{Typeset`query$$ = "spikey", Typeset`boxes$$ = 
        TemplateBox[{"\"Wolfram spikey\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Polyhedron\"", ",", "\"WolframSpikey\""}], "]"}], 
          "\"Entity[\\\"Polyhedron\\\", \\\"WolframSpikey\\\"]\"", 
          "\"polyhedron\""}, "Entity"], 
        Typeset`allassumptions$$ = {{
         "type" -> "SubCategory", "word" -> "spikey", "template" -> 
          "Assuming Wolfram spikey${separator}Use ${desc} instead", "count" -> 
          "2", "pulldown" -> "false", "default" -> 
          "{\"DPClash\", \"PolyhedronE\", \"spikey\"} -> {\"WolframSpikey\", \
\"dflt\"}", 
          "Values" -> {{
            "name" -> "WolframSpikey", "desc" -> "Wolfram spikey", "input" -> 
             "{\"DPClash\", \"PolyhedronE\", \"spikey\"} -> \
{\"WolframSpikey\"}"}, {
            "name" -> "MathematicaPolyhedron", "desc" -> 
             "Mathematica polyhedron", "input" -> 
             "{\"DPClash\", \"PolyhedronE\", \"spikey\"} -> \
{\"MathematicaPolyhedron\"}"}}}}, Typeset`assumptions$$ = {}, 
        Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.36297`6.011415724942915, "Messages" -> {}}}, 
        DynamicBox[ToBoxes[
          AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
           Dynamic[Typeset`query$$], 
           Dynamic[Typeset`boxes$$], 
           Dynamic[Typeset`allassumptions$$], 
           Dynamic[Typeset`assumptions$$], 
           Dynamic[Typeset`open$$], 
           Dynamic[Typeset`querystate$$]], StandardForm],
         ImageSizeCache->{237., {7., 17.}},
         TrackedSymbols:>{
          Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
           Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
        DynamicModuleValues:>{},
        UndoTrackedVariables:>{Typeset`open$$}],
       BaseStyle->{"Deploy"},
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True], ",", "\"\<Image\>\""}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "//", 
  "EdgeDetect"}]], "Input",
 CellChangeTimes->{{3.8269861379140463`*^9, 3.8269862002944193`*^9}, {
  3.8269862343021173`*^9, 3.826986287280505*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"67bddb89-eced-47a3-a435-24a90c2314d9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnc3S7KYRhiGr3EbuItsss3WuwE45ySqpclKVyt3HHo0kQPz0LzSCdp3j
bzRAw/P1vDQIzfnDT//64W+/c879+/e//vXDj//90y+//Pi/v/z24s///M/P
f//5lz/+9Nvbf/XO/ePXP9vWMu/3L72H+d9Qj+7EAuavv7Yp2jecd0grm/+Q
3qC1zV+asUFr2snZb9CqdsXz1g5Ni8N4g9Yyn6jFBq1jMect0lqWxPMWaSVL
dcN1B+1X2GDJj7DjuA/IrwedCeee2nGG8pKcu4H+xvIKk2+W8/cdbdenYizA
uTg+9bEHurwE50o4K2pHNPstzfnzrtLw4xxjBX2uc9YZf5rJrZDXNeJZIaSf
+fICnFvDEwedW5UswRkwQDkG+bXf5nwUkYJQWmHvafBbRkQ7ivsYO90IynFB
VHaLlpANjaKZyrU9uSU4AwfI+mg3dj4356gkVTua+8ubc1qaQAOwi785Z8oj
2wfcK/GuWWR2Q44Oqx2wO1JLcEaHMxw09L7f5lyqBCoFvru6OeergHZEEPew
38+ZOrim4qJOCqzAmTi8qkgjz2P49+d1ZM61xR321MvmXKtYCGnC2aLNuVoz
B5p0guv9nNlbnclL2jm5FThzRpckeOTTiJtzs/qtHYwzn5szpIkj+WWcrPWv
z59lhuaZ55dX4Mwf3CnSjHstmzOoEa64bs59WvlOg5uzciuvTzeEhsZODrds
wFrZnOtmSTY2Z+1WXs/ZhjyvwFlkbJtzw2xwDr7K5qVmKt3YnJVbmYaz97Qv
VbA1DZrn/O1lZMCKFuR5Fs45eYQx35wxduZEJbRl4pszxr53jZKLObg+MTH/
IunGFJxru7dlrqbCeRLOkG3yNJRFQno1zqiOfmmLPHq5HGdsT2W+8HkZzj7/
M7Au/yHXRThH/esPWuzXZP42rK+8alfmascy4Zx2EB3SPNDLcu6sHetypmgH
HfTKnHuK9NKc+2mH2O7GnJy7gRYL50k59xJpNudrx2VWzlhsNJFmPt+S27Vl
tKdqlQ1RZEOEkOZw9j64PRFdNgm80h910Ixp0Dc/QNJ3JJhW7yquKax28J4O
z7rKXTRBvOpbeRVO5FymHJbxZ4+ii8NgN9yqagftS1IAlCMX3kXRPAh0y60i
aIo8oyj74M+3NndlRLeWWz2RxocznrJ/ujHKWS/BQ3+HFYXyw41RgQYWiYoD
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
wpY4UrDNuf8DDpkelw==
    "], {{0, 355.}, {360., 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Bit", ColorSpace -> Automatic, Interleaving -> None, Magnification -> 
    Automatic],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Medium,
  ImageSizeRaw->{360., 355.},
  PlotRange->{{0, 360.}, {0, 355.}}]], "Output",
 CellChangeTimes->{{3.8269861496333437`*^9, 3.826986170817769*^9}, {
  3.8269862031681757`*^9, 3.826986206905608*^9}, {3.826986236913365*^9, 
  3.826986287496915*^9}},
 CellLabel->"Out[81]=",ExpressionUUID->"b14b733c-0abb-4f86-955f-5654c7e7ecda"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8269861448756027`*^9, 
  3.826986145476033*^9}},ExpressionUUID->"cce5b4f6-17f7-4297-8e48-\
6c7e90f348be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["11. Strings and Text", "Section",
 CellChangeTimes->{{3.826986407278839*^9, 3.826986409121683*^9}, {
  3.826987536283362*^9, 
  3.826987536833377*^9}},ExpressionUUID->"e3c4f93b-05d8-45c5-9c5e-\
aa78e653692f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WikipediaData", "[", "\"\<c. elegans\>\"", "]"}], "//", 
    "WordCloud"}], "//", "Rasterize"}], "//", "ColorNegate"}]], "Input",
 CellChangeTimes->{{3.826986353525145*^9, 3.826986395028727*^9}, {
  3.826986451058736*^9, 3.8269864727688093`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"e8d22223-268d-48e3-9e59-ff5fd9680b81"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
oNxzOB0F+S821v+/KNyAJCbcCg4AAoFX6sTcAJe8Nb91OtYRPo4Bazpd4BNg
k+IG3vJxzsBrl8OVFFX9ITH1bCy/jDV+HVweehzH5tgIC4Td+Ni5EWul2jqy
7HVqALToFcI0O8gqEDvIzIdgdZB1f6GGWlJOUD2H0bkBiVtAln6fKrDmPapT
lPkN45dTY6wN/4o0DksSjlXU6G3936k07gOx/FBTcvlyfHlCYUrYTrA3sNBw
sMctrql6B+5Gbs6zgvHHNYqfotV4y0tfR5aKsh9ZzL113j9G54ZYHA+bJMG1
mR04ATdIgKuw4Evk+FSExITtNVXvMqPDk+JGdtF3s4q+o1TX/P/2zjs4juzO
75NzznkGkwAMco6DDAIgApEjAwCCJLAkSOREggjMEcxgAAluuNWddKlO1rnu
SjpLPvtk6SSvJVvavdOeYp0tl332+f65ctmu8renmz2NQSC5BKldEb/qQr1+
/d6bnsa8T39/v/f6tUyRzg+1gPs+aBCd8GWdsVWlKTOY9/kCT/CXRcRUr7hj
7iJfoS5ATnr+z+PTqPeGaPR1aNbiGJEpMqWhuMGLc2PrD93YzJ3skn9gvX2P
AMtTUny3bj2/3G/IuquMjyf92B6N+64MuPfuMoiF4f/RhSNROBRwhVet352t
QSazBS6HvTToWR7xSURr3pvQVW5wW37DL5p8KXszk0JVqtyK8v8rEm7D+6Re
ihsKVV5y1kdQHcz5GyrtrvjUb2QX/1NOyT+n5X0KJSAO+WVaQ2N86tczC/4r
yqfn/8ITc4//LH4IiYXdrML/ju6/xfwN5nkyubHFh4bN2ktEMoVmln43u+Bn
hM/y9tnnnxunu51mrcCiE6T6ZVffcffVhJdAASLuj/pQgFal67mBWnPdzuEW
a2naS78w8XNlr5sb0PkSiTcj/RtJic95v9tbbvA4iPldcCvgJngXWZyNF0X/
7bbPPzemu8Iz7ZsKdRAP9C4QAdlwb8SbFaA8jvXcONFs3ZWhRoH5njUL479u
P4UNocPlPr/cC9vr5obV0l1R/v9ys7+/LWJjxzYzvqtAPfVr/H2RwhylHYWF
SV3PL/pmjeSGtqbGf/du9IMH5p4eNp96VMFy6JDv9u2YJ0+8166pCgvJTPQF
c2+vf3k5ZmUFFZVBavVXSWysa34+emXFu7SkqajYrtOjuQFFYVQLFnqdkBz0
USCiJlfTENRd6o/icQnREcENtZz3YMynlPIEPPbdYa/LFHZM1nMjaaY3+jC1
YrY6zlP4wVlPF7XypC4ttuC9Ra5IELoCnKjW8uxbEwVPF9IvDOozwjMkY440
JU73WEozM6+NoLzUbjQVpBIJmzFl7nBwdT7t7FGZ08wR8KP7GvIfzWbdGDMV
pm3XtdqxL4T91nAj8MEH5r4+4IKnVrsvXDB2UE8fqEtKuAoFPEZpQkLs06di
N9FhVUVFnkuXuFLiyQKeUim0Evcmod0es7qqyMggxK7VCp4osrfnsWUyvvFo
wr8y4ScDHUx3g+SGSMABBMrTiUlKEdyozdUOt1J3z57dpn27wqPh67nhaizJ
vDZMpZtK0c1Tz1DDW56uKmYaxHDUFWqTo2OPtha+f0abSg10ghugQfKpPnmU
RWzU8CQicAMF0i8O2qpy9Zlx6eeP4SMCxzt8PXW69ADK46jEvLMy4Vtkr8iN
6l26uUnPmRmvTLqdavZlDdyIff99joi6EcvT06Pvb/AqH9vwsLaWWGNfmZcH
LEgDATYv/NY/88GDlv7w7EdtdbV9bBuebWSFuDHX7bTqhZAKcEkGmyzMt5qT
3ECiLF0NDoiFHCY3UBA6JDtATcyOcUjuDHkFfKr+em6QGkOgJCJ10B6+A7Uh
jUGM7qUuDnj2EtoDR8ETe234nw4hkXaWQgo4AKSQLZBGcOODs4Yc6iFuVWwU
dkEb6gy5nNzlGUftC/2EtjaeXJbyO4/4KuXzi76CWYuSS1cnOXzqX4/zL1kZ
z70c/teL9cryD05qE9ybNPCqln/tHbRPbO+fLLx7In5gD/NqfyHsVbhhNAjO
nfJKJC9NDB6PfWXRr9Ns21PP4Ib/XvjhXJHTGfjwQ9JV0VRVuc+d8925A1DA
WzF2dhIl2GxgAfkQGPbxcVJvOKam4OPAnSE3382brtnZbTm9iPjGRKedBAVp
NDfgpAARjQU6JjcCLgmpVegNu7nxFEbWcwPuQ8G7C/qsePhiwSdz0Aw5tyc1
iT64JwXvLuoyiKW51QledHyRIXwO1oocaAaukHBhwA0oCmabJDe4YurBE/zI
sWvMT6ELpMwfAaDItNBsdA+/k7B8PenpvcD1887+l1jR8c1wQ2xQoc+qY6lI
kdJnLbw3BJIIVVTntRQklb07zRW+6O8T5HmpEwA3YnuqpBat1KrTp/rzl46l
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
t83+P+x97N8=
    "], {{0, 358.}, {360., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->72.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360., 358.},
  PlotRange->{{0, 360.}, {0, 358.}}]], "Output",
 CellChangeTimes->{{3.8269863621855097`*^9, 3.826986399249466*^9}, 
   3.82698647617168*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"4adad6a6-1329-4fd5-a05a-c5e9873e7b30"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["12. Sound", "Section",
 CellChangeTimes->{{3.8269865690272007`*^9, 3.82698657560485*^9}, {
  3.826987539753439*^9, 
  3.8269875400350723`*^9}},ExpressionUUID->"810c0998-80c6-45cd-b101-\
35166d7d241b"],

Cell[BoxData[
 RowBox[{"Sound", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"SoundNote", "[", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{"Characters", "[", "\"\<ACDEG\>\"", "]"}], "]"}], "]"}], ",", 
    "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.826986578023485*^9, 3.82698668661753*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"cf0c0892-63ff-4596-a3a4-a3ff0c48e65d"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[{
    {RGBColor[0.9568627450980393, 0.9568627450980393, 0.9568627450980393], 
     RectangleBox[{0, 0}, {360, -164}]}, {InsetBox[
      GraphicsBox[
       {RGBColor[0.5, 0, 0.5], 
        StyleBox[{
          RectangleBox[{1., 0.43198696602798653}, {1.95, 0.4438917279327484}],
           RectangleBox[{3., 0.43198696602798653}, \
{3.95, 0.4438917279327484}], 
          RectangleBox[{4., 0.43198696602798653}, {4.95, 0.4438917279327484}],
           RectangleBox[{2., 0.5153202993613198}, {2.95, 0.5272250612660818}],
           RectangleBox[{0., 0.5391298231708438}, {0.95, 0.5510345850756055}]},
         Antialiasing->True]},
       AspectRatio->NCache[
         Rational[6, 35], 0.17142857142857143`],
       Background->GrayLevel[1],
       Frame->True,
       FrameStyle->GrayLevel[0.75],
       FrameTicks->False,
       ImagePadding->None,
       PlotRange->{All, All},
       PlotRangePadding->{Automatic, 0.05}], {180, -35}, 
      ImageScaled[{0.5, 0.5}], {350, 60},
      Background->RGBColor[
       0.9568627450980393, 0.9568627450980393, 0.9568627450980393]], 
     InsetBox[
      GraphicsBox[
       {GrayLevel[0.6], RectangleBox[{0, 0}]},
       AspectRatio->NCache[
         Rational[6, 35], 0.17142857142857143`],
       Background->GrayLevel[1],
       Frame->True,
       FrameStyle->GrayLevel[0.75],
       FrameTicks->False,
       ImagePadding->None], {180, -100}, ImageScaled[{0.5, 0.5}], {350, 60},
      Background->RGBColor[
       0.9568627450980393, 0.9568627450980393, 0.9568627450980393]]}, InsetBox[
     StyleBox[
      TemplateBox[{
        StyleBox[
        "\" | \"", FontSize -> 14, FontColor -> 
         RGBColor[0.5098039215686274, 0.5098039215686274, 0.5098039215686274],
          StripOnInput -> False], 
        StyleBox[
         TemplateBox[{"\"5\"", "\" s\""}, "RowDefault"], FontColor -> 
         RGBColor[0.5098039215686274, 0.5098039215686274, 0.5098039215686274],
          StripOnInput -> False]},
       "RowWithSeparator"], "DialogStyle",
      StripOnInput->False], {355, -159}, Scaled[{1, 0}]], 
    TagBox[{
      {RGBColor[0.9568627450980393, 0.9568627450980393, 0.9568627450980393], 
       RectangleBox[{5, -158}, {29, -135}]}, 
      {RGBColor[0.27450980392156865`, 0.5411764705882353, 0.796078431372549], 
       PolygonBox[
        NCache[{{11, -157}, {11, -136}, {20., Rational[-293, 2]}, {
          11, -157}}, {{11, -157}, {11, -136}, {20., -146.5}, {11, -157}}]], 
       StyleBox[{},
        Antialiasing->False]}},
     EventHandlerTag[{"MouseClicked" :> If[True, Sound`EmitMIDI[
           Sound`MIDISequence[{
             Sound`MIDITrack[{
               Sound`MIDIEvent[0, "SetTempo", "Tempo" -> 1000000], 
               Sound`MIDIEvent[
               0, "ProgramCommand", "Channel" -> 0, "Value" -> 0], 
               Sound`MIDIEvent[
               0, "NoteOn", "Note" -> 69, "Channel" -> 0, "Velocity" -> 127], 
               
               Sound`MIDIEvent[
               48, "NoteOff", "Note" -> 69, "Channel" -> 0, "Velocity" -> 0], 
               
               Sound`MIDIEvent[
               48, "NoteOn", "Note" -> 60, "Channel" -> 0, "Velocity" -> 127], 
               Sound`MIDIEvent[
               96, "NoteOff", "Note" -> 60, "Channel" -> 0, "Velocity" -> 0], 
               
               Sound`MIDIEvent[
               96, "NoteOn", "Note" -> 67, "Channel" -> 0, "Velocity" -> 127], 
               Sound`MIDIEvent[
               144, "NoteOff", "Note" -> 67, "Channel" -> 0, "Velocity" -> 0], 
               Sound`MIDIEvent[
               144, "NoteOn", "Note" -> 60, "Channel" -> 0, "Velocity" -> 
                127], 
               Sound`MIDIEvent[
               192, "NoteOff", "Note" -> 60, "Channel" -> 0, "Velocity" -> 0], 
               Sound`MIDIEvent[
               192, "NoteOn", "Note" -> 60, "Channel" -> 0, "Velocity" -> 
                127], 
               Sound`MIDIEvent[
               240, "NoteOff", "Note" -> 60, "Channel" -> 0, "Velocity" -> 
                0]}]}, "DivisionType" -> "PPQ", "Resolution" -> 48]]; 
         Sound`EmitSampledSound[None, "Preemptive"], 
         FEPrivate`EmitSound[None, "Preemptive"]], Method -> "Preemptive", 
       PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    TagBox[{
      {RGBColor[0.9568627450980393, 0.9568627450980393, 0.9568627450980393], 
       RectangleBox[{29, -158}, {53, -135}]}, 
      {RGBColor[0.27450980392156865`, 0.5411764705882353, 0.796078431372549], 
       RectangleBox[{35, -152}, {47, -141}], 
       StyleBox[{},
        Antialiasing->False]}},
     EventHandlerTag[{"MouseClicked" :> If[True, Sound`EmitSampledSound[
           SampledSoundList[{{0.}}, 8000], "Preemptive"]; Sound`StopMIDI[], 
         FEPrivate`EmitSound[
          SampledSoundList[{{0.}}, 8000], "Preemptive"]], Method -> 
       "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
    {GrayLevel[0.75], 
     StyleBox[LineBox[{{0, 0}, {360, 0}, {360, -164}, {0, -164}, {0, 0}}],
      Antialiasing->False]}},
   ContentSelectable->False,
   ImageSize->250,
   PlotRange->{{0, 360}, {-164, 0}},
   PlotRangePadding->1],
  Sound[{
    SoundNote["A"], 
    SoundNote["C"], 
    SoundNote["G"], 
    SoundNote["C"], 
    SoundNote["C"]}]]], "Input",
 CellChangeTimes->{3.8269871174112797`*^9},
 CellLabel->"In[94]:=",ExpressionUUID->"22ca8b4a-20f2-4cc2-8654-ffe8daf0607c"],

Cell["Note: doesn\[CloseCurlyQuote]t play sound :DDDDDDD", "Text",
 CellChangeTimes->{{3.826987104005225*^9, 
  3.8269871093351603`*^9}},ExpressionUUID->"4e456190-b80e-4a3e-b865-\
97e7b391b220"]
}, Open  ]],

Cell[CellGroupData[{

Cell["13. Arrays", "Section",
 CellChangeTimes->{{3.826987173857358*^9, 3.826987174487352*^9}, {
  3.826987541801256*^9, 
  3.826987542128282*^9}},ExpressionUUID->"605fe58e-05ba-4312-8a64-\
04c92ab9930b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.826987176987824*^9, 
  3.826987178757571*^9}},ExpressionUUID->"790921a4-6365-4ca7-b25c-\
474db3d5884b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomColor", "[", "]"}], ",", "10", ",", "10"}], "]"}], ",", 
   " ", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.826987192377632*^9, 3.826987244706504*^9}, {
  3.826987350829624*^9, 3.8269873515469*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"e6a7173b-7587-4531-acbe-81e459679e1e"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
   "], {{0, 0}, {10, 10}}, {
   0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Small,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.826987202534739*^9, 3.826987245700403*^9}, 
   3.826987351900277*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"513cce8a-a124-428f-9f30-eec05fc2d21b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["14. Coordinates and Graphics", "Section",
 CellChangeTimes->{{3.826987523870949*^9, 
  3.8269875443830557`*^9}},ExpressionUUID->"3437db58-fbba-41df-9c80-\
5eeaa1f3ce72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"RegularPolygon", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", "1", ",", 
         RowBox[{"3", "+", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"x", "*", "y"}], ",", "10"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"RandomColor", "[", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "10", ",", "2"}], "}"}]}], "]"}], ",", " ", 
   
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8269872901839457`*^9, 3.826987365885215*^9}, {
  3.8269874032915*^9, 3.826987474891775*^9}, {3.826987506182331*^9, 
  3.8269875097834*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"a19c8743-580c-4080-9d1c-4c9689d51eb2"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.6995206658293442, 0.11453196591901005`, 0.8576649755357999], 
     InterpretationBox[
      PolygonBox[
       NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {0, 1}, {
         Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {{
         0.8660254037844386, -0.5}, {0, 1}, {-0.8660254037844386, -0.5}}]],
      RegularPolygon[{0, 0}, 1, 3]]}, 
    {RGBColor[0.5497024644780881, 0.16809698309485377`, 0.5135019408800621], 
     InterpretationBox[
      PolygonBox[
       NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[3, 2]}, {0, 3}, {
         Rational[-1, 2] 3^Rational[1, 2], Rational[3, 2]}}, {{
         0.8660254037844386, 1.5}, {0, 3}, {-0.8660254037844386, 1.5}}]],
      RegularPolygon[{0, 2}, 1, 3]]}, 
    {RGBColor[0.01187766462699491, 0.4670410391072941, 0.9619196164974115], 
     InterpretationBox[
      PolygonBox[
       NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[7, 2]}, {0, 5}, {
         Rational[-1, 2] 3^Rational[1, 2], Rational[7, 2]}}, {{
         0.8660254037844386, 3.5}, {0, 5}, {-0.8660254037844386, 3.5}}]],
      RegularPolygon[{0, 4}, 1, 3]]}, 
    {RGBColor[0.9073053910637092, 0.005559962464653179, 0.2509468022271919], 
     InterpretationBox[
      PolygonBox[
       NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[11, 2]}, {0, 7}, {
         Rational[-1, 2] 3^Rational[1, 2], Rational[11, 2]}}, {{
         0.8660254037844386, 5.5}, {0, 7}, {-0.8660254037844386, 5.5}}]],
      RegularPolygon[{0, 6}, 1, 3]]}, 
    {RGBColor[0.7909575768213235, 0.5442986232984546, 0.47374033405386595`], 
     InterpretationBox[
      PolygonBox[
       NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[15, 2]}, {0, 9}, {
         Rational[-1, 2] 3^Rational[1, 2], Rational[15, 2]}}, {{
         0.8660254037844386, 7.5}, {0, 9}, {-0.8660254037844386, 7.5}}]],
      RegularPolygon[{0, 8}, 1, 3]]}, 
    {RGBColor[0.3349985027184226, 0.7061073031373162, 0.765079039615888], 
     InterpretationBox[
      PolygonBox[
       NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[19, 2]}, {0, 11}, {
         Rational[-1, 2] 3^Rational[1, 2], Rational[19, 2]}}, {{
         0.8660254037844386, 9.5}, {0, 11}, {-0.8660254037844386, 9.5}}]],
      RegularPolygon[{0, 10}, 1, 3]]}}, {
    {RGBColor[0.8491088096818722, 0.8773741705642544, 0.8135443355780407], 
     InterpretationBox[
      PolygonBox[
       NCache[{{2 + Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {2, 
         1}, {2 + Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {{
         2.8660254037844384`, -0.5}, {2, 1}, {1.1339745962155614`, -0.5}}]],
      RegularPolygon[{2, 0}, 1, 3]]}, 
    {RGBColor[0.5513241686160797, 0.45912593898343923`, 0.6935646200359471], 
     InterpretationBox[
      PolygonBox[
       NCache[{{2 + Sin[Rational[1, 7] Pi], 2 - Cos[Rational[1, 7] Pi]}, {
         2 + Cos[Rational[1, 14] Pi], 2 - Sin[Rational[1, 14] Pi]}, {
         2 + Cos[Rational[3, 14] Pi], 2 + Sin[Rational[3, 14] Pi]}, {2, 3}, {
         2 - Cos[Rational[3, 14] Pi], 2 + Sin[Rational[3, 14] Pi]}, {
         2 - Cos[Rational[1, 14] Pi], 2 - Sin[Rational[1, 14] Pi]}, {
         2 - Sin[Rational[1, 7] Pi], 2 - Cos[Rational[1, 7] Pi]}}, {{
         2.433883739117558, 1.099031132097581}, {2.9749279121818235`, 
         1.7774790660436857`}, {2.78183148246803, 2.6234898018587334`}, {2, 
         3}, {1.21816851753197, 2.6234898018587334`}, {1.0250720878181765`, 
         1.7774790660436857`}, {1.566116260882442, 1.099031132097581}}]],
      RegularPolygon[{2, 2}, 1, 7]]}, 
    {RGBColor[0.06023193842636587, 0.7930426100854389, 0.2992608501988445], 
     InterpretationBox[
      PolygonBox[
       NCache[{{2 + Sin[Rational[1, 11] Pi], 4 - Cos[Rational[1, 11] Pi]}, {
         2 + Cos[Rational[5, 22] Pi], 4 - Sin[Rational[5, 22] Pi]}, {
         2 + Cos[Rational[1, 22] Pi], 4 - Sin[Rational[1, 22] Pi]}, {
         2 + Cos[Rational[3, 22] Pi], 4 + Sin[Rational[3, 22] Pi]}, {
         2 + Sin[Rational[2, 11] Pi], 4 + Cos[Rational[2, 11] Pi]}, {2, 5}, {
         2 - Sin[Rational[2, 11] Pi], 4 + Cos[Rational[2, 11] Pi]}, {
         2 - Cos[Rational[3, 22] Pi], 4 + Sin[Rational[3, 22] Pi]}, {
         2 - Cos[Rational[1, 22] Pi], 4 - Sin[Rational[1, 22] Pi]}, {
         2 - Cos[Rational[5, 22] Pi], 4 - Sin[Rational[5, 22] Pi]}, {
         2 - Sin[Rational[1, 11] Pi], 4 - Cos[Rational[1, 11] Pi]}}, {{
         2.2817325568414297`, 3.0405070263855025`}, {2.755749574354258, 
         3.345139266054715}, {2.989821441880933, 3.8576851617267147`}, {
         2.9096319953545184`, 4.415415013001886}, {2.5406408174555977`, 
         4.841253532831181}, {2, 5}, {1.4593591825444023`, 
         4.841253532831181}, {1.0903680046454816`, 4.415415013001886}, {
         1.0101785581190672`, 3.8576851617267147`}, {1.2442504256457416`, 
         3.345139266054715}, {1.7182674431585703`, 3.0405070263855025`}}]],
      RegularPolygon[{2, 4}, 1, 11]]}, 
    {RGBColor[0.22564267633512602`, 0.5458096628937281, 0.3029198342720709], 
     InterpretationBox[
      PolygonBox[
       NCache[{{
         2 + (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2], 6 + Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
         2 + (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2], 6 + Rational[1, 4] (-1 + 5^Rational[1, 2])}, {2, 
         7}, {2 - (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 6 + Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
         2 - (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 6 + Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{
         2.5877852522924734`, 5.1909830056250525`}, {2.9510565162951536`, 
         6.3090169943749475`}, {2, 7}, {1.0489434837048464`, 
         6.3090169943749475`}, {1.4122147477075269`, 5.1909830056250525`}}]],
      RegularPolygon[{2, 6}, 1, 5]]}, 
    {RGBColor[0.6100650281074154, 0.09216405609326994, 0.10723533826610843`], 
     
     InterpretationBox[
      PolygonBox[
       NCache[{{2 + Sin[Rational[1, 9] Pi], 8 - Cos[Rational[1, 9] Pi]}, {
         2 + Rational[1, 2] 3^Rational[1, 2], Rational[15, 2]}, {
         2 + Cos[Rational[1, 18] Pi], 8 + Sin[Rational[1, 18] Pi]}, {
         2 + Sin[Rational[2, 9] Pi], 8 + Cos[Rational[2, 9] Pi]}, {2, 9}, {
         2 - Sin[Rational[2, 9] Pi], 8 + Cos[Rational[2, 9] Pi]}, {
         2 - Cos[Rational[1, 18] Pi], 8 + Sin[Rational[1, 18] Pi]}, {
         2 + Rational[-1, 2] 3^Rational[1, 2], Rational[15, 2]}, {
         2 - Sin[Rational[1, 9] Pi], 8 - Cos[Rational[1, 9] Pi]}}, {{
         2.342020143325669, 7.060307379214091}, {2.8660254037844384`, 7.5}, {
         2.984807753012208, 8.17364817766693}, {2.6427876096865393`, 
         8.766044443118979}, {2, 9}, {1.3572123903134607`, 
         8.766044443118979}, {1.0151922469877919`, 8.17364817766693}, {
         1.1339745962155614`, 7.5}, {1.6579798566743313`, 
         7.060307379214091}}]],
      RegularPolygon[{2, 8}, 1, 9]]}, 
    {RGBColor[0.8271850406700707, 0.8869078338324266, 0.6238275879566051], 
     InterpretationBox[
      PolygonBox[
       NCache[{{2 + Rational[1, 2] 3^Rational[1, 2], Rational[19, 2]}, {2, 
         11}, {2 + Rational[-1, 2] 3^Rational[1, 2], Rational[19, 2]}}, {{
         2.8660254037844384`, 9.5}, {2, 11}, {1.1339745962155614`, 9.5}}]],
      RegularPolygon[{2, 10}, 1, 3]]}}, {
    {RGBColor[0.616585192571522, 0.8105747904052616, 0.3512932647413214], 
     InterpretationBox[
      PolygonBox[
       NCache[{{4 + Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {4, 
         1}, {4 + Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {{
         4.866025403784438, -0.5}, {4, 1}, {3.1339745962155616`, -0.5}}]],
      RegularPolygon[{4, 0}, 1, 3]]}, 
    {RGBColor[0.1864154042590891, 0.06297973830230119, 0.8161681334361195], 
     InterpretationBox[
      PolygonBox[
       NCache[{{4 + Sin[Rational[1, 11] Pi], 2 - Cos[Rational[1, 11] Pi]}, {
         4 + Cos[Rational[5, 22] Pi], 2 - Sin[Rational[5, 22] Pi]}, {
         4 + Cos[Rational[1, 22] Pi], 2 - Sin[Rational[1, 22] Pi]}, {
         4 + Cos[Rational[3, 22] Pi], 2 + Sin[Rational[3, 22] Pi]}, {
         4 + Sin[Rational[2, 11] Pi], 2 + Cos[Rational[2, 11] Pi]}, {4, 3}, {
         4 - Sin[Rational[2, 11] Pi], 2 + Cos[Rational[2, 11] Pi]}, {
         4 - Cos[Rational[3, 22] Pi], 2 + Sin[Rational[3, 22] Pi]}, {
         4 - Cos[Rational[1, 22] Pi], 2 - Sin[Rational[1, 22] Pi]}, {
         4 - Cos[Rational[5, 22] Pi], 2 - Sin[Rational[5, 22] Pi]}, {
         4 - Sin[Rational[1, 11] Pi], 2 - Cos[Rational[1, 11] Pi]}}, {{
         4.28173255684143, 1.0405070263855025`}, {4.755749574354258, 
         1.345139266054715}, {4.989821441880933, 1.857685161726715}, {
         4.909631995354518, 2.4154150130018865`}, {4.540640817455597, 
         2.841253532831181}, {4, 3}, {3.4593591825444023`, 
         2.841253532831181}, {3.0903680046454816`, 2.4154150130018865`}, {
         3.010178558119067, 1.857685161726715}, {3.244250425645742, 
         1.345139266054715}, {3.7182674431585703`, 1.0405070263855025`}}]],
      RegularPolygon[{4, 2}, 1, 11]]}, 
    {RGBColor[0.6165398569809089, 0.09127310718541337, 0.4175756714606995], 
     InterpretationBox[
      PolygonBox[
       NCache[{{4 + Sin[Rational[1, 9] Pi], 4 - Cos[Rational[1, 9] Pi]}, {
         4 + Rational[1, 2] 3^Rational[1, 2], Rational[7, 2]}, {
         4 + Cos[Rational[1, 18] Pi], 4 + Sin[Rational[1, 18] Pi]}, {
         4 + Sin[Rational[2, 9] Pi], 4 + Cos[Rational[2, 9] Pi]}, {4, 5}, {
         4 - Sin[Rational[2, 9] Pi], 4 + Cos[Rational[2, 9] Pi]}, {
         4 - Cos[Rational[1, 18] Pi], 4 + Sin[Rational[1, 18] Pi]}, {
         4 + Rational[-1, 2] 3^Rational[1, 2], Rational[7, 2]}, {
         4 - Sin[Rational[1, 9] Pi], 4 - Cos[Rational[1, 9] Pi]}}, {{
         4.342020143325668, 3.0603073792140916`}, {4.866025403784438, 3.5}, {
         4.984807753012208, 4.17364817766693}, {4.64278760968654, 
         4.766044443118978}, {4, 5}, {3.3572123903134607`, 
         4.766044443118978}, {3.015192246987792, 4.17364817766693}, {
         3.1339745962155616`, 3.5}, {3.657979856674331, 
         3.0603073792140916`}}]],
      RegularPolygon[{4, 4}, 1, 9]]}, 
    {RGBColor[0.4808390452311828, 0.00650583448524622, 0.0593755073743385], 
     InterpretationBox[
      PolygonBox[
       NCache[{{4 + Sin[Rational[1, 7] Pi], 6 - Cos[Rational[1, 7] Pi]}, {
         4 + Cos[Rational[1, 14] Pi], 6 - Sin[Rational[1, 14] Pi]}, {
         4 + Cos[Rational[3, 14] Pi], 6 + Sin[Rational[3, 14] Pi]}, {4, 7}, {
         4 - Cos[Rational[3, 14] Pi], 6 + Sin[Rational[3, 14] Pi]}, {
         4 - Cos[Rational[1, 14] Pi], 6 - Sin[Rational[1, 14] Pi]}, {
         4 - Sin[Rational[1, 7] Pi], 6 - Cos[Rational[1, 7] Pi]}}, {{
         4.433883739117558, 5.099031132097581}, {4.9749279121818235`, 
         5.777479066043686}, {4.7818314824680295`, 6.623489801858733}, {4, 
         7}, {3.21816851753197, 6.623489801858733}, {3.0250720878181765`, 
         5.777479066043686}, {3.566116260882442, 5.099031132097581}}]],
      RegularPolygon[{4, 6}, 1, 7]]}, 
    {RGBColor[0.675811187428466, 0.8330548639080124, 0.3458266089580022], 
     InterpretationBox[
      PolygonBox[
       NCache[{{
         4 + (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2], 8 + Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
         4 + (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2], 8 + Rational[1, 4] (-1 + 5^Rational[1, 2])}, {4, 
         9}, {4 - (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 8 + Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
         4 - (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 8 + Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{
         4.587785252292473, 7.1909830056250525`}, {4.951056516295154, 
         8.309016994374947}, {4, 9}, {3.0489434837048464`, 
         8.309016994374947}, {3.4122147477075266`, 7.1909830056250525`}}]],
      RegularPolygon[{4, 8}, 1, 5]]}, 
    {RGBColor[0.557403660135237, 0.39733910949011886`, 0.7919537823705778], 
     InterpretationBox[
      PolygonBox[
       NCache[{{4 + Rational[1, 2] 3^Rational[1, 2], Rational[19, 2]}, {4, 
         11}, {4 + Rational[-1, 2] 3^Rational[1, 2], Rational[19, 2]}}, {{
         4.866025403784438, 9.5}, {4, 11}, {3.1339745962155616`, 9.5}}]],
      RegularPolygon[{4, 10}, 1, 3]]}}, {
    {RGBColor[0.3178774727846869, 0.9682695764150193, 0.9264454878880191], 
     InterpretationBox[
      PolygonBox[
       NCache[{{6 + Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {6, 
         1}, {6 + Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {{
         6.866025403784438, -0.5}, {6, 1}, {5.133974596215562, -0.5}}]],
      RegularPolygon[{6, 0}, 1, 3]]}, 
    {RGBColor[0.08555544352571398, 0.5220082250174227, 0.4988919117608055], 
     InterpretationBox[
      PolygonBox[
       NCache[{{
         6 + (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2], 2 + Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
         6 + (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2], 2 + Rational[1, 4] (-1 + 5^Rational[1, 2])}, {6, 
         3}, {6 - (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 2 + Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
         6 - (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 2 + Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{
         6.587785252292473, 1.1909830056250525`}, {6.951056516295154, 
         2.3090169943749475`}, {6, 3}, {5.048943483704846, 
         2.3090169943749475`}, {5.412214747707527, 1.1909830056250525`}}]],
      RegularPolygon[{6, 2}, 1, 5]]}, 
    {RGBColor[0.62759732587956, 0.4699776204432293, 0.49933820230218173`], 
     InterpretationBox[
      PolygonBox[
       NCache[{{6 + Sin[Rational[1, 7] Pi], 4 - Cos[Rational[1, 7] Pi]}, {
         6 + Cos[Rational[1, 14] Pi], 4 - Sin[Rational[1, 14] Pi]}, {
         6 + Cos[Rational[3, 14] Pi], 4 + Sin[Rational[3, 14] Pi]}, {6, 5}, {
         6 - Cos[Rational[3, 14] Pi], 4 + Sin[Rational[3, 14] Pi]}, {
         6 - Cos[Rational[1, 14] Pi], 4 - Sin[Rational[1, 14] Pi]}, {
         6 - Sin[Rational[1, 7] Pi], 4 - Cos[Rational[1, 7] Pi]}}, {{
         6.433883739117558, 3.099031132097581}, {6.9749279121818235`, 
         3.7774790660436857`}, {6.7818314824680295`, 4.623489801858733}, {6, 
         5}, {5.2181685175319705`, 4.623489801858733}, {5.0250720878181765`, 
         3.7774790660436857`}, {5.566116260882442, 3.099031132097581}}]],
      RegularPolygon[{6, 4}, 1, 7]]}, 
    {RGBColor[0.3976058083378453, 0.5924732687386343, 0.5347041811354476], 
     InterpretationBox[
      PolygonBox[
       NCache[{{6 + Sin[Rational[1, 9] Pi], 6 - Cos[Rational[1, 9] Pi]}, {
         6 + Rational[1, 2] 3^Rational[1, 2], Rational[11, 2]}, {
         6 + Cos[Rational[1, 18] Pi], 6 + Sin[Rational[1, 18] Pi]}, {
         6 + Sin[Rational[2, 9] Pi], 6 + Cos[Rational[2, 9] Pi]}, {6, 7}, {
         6 - Sin[Rational[2, 9] Pi], 6 + Cos[Rational[2, 9] Pi]}, {
         6 - Cos[Rational[1, 18] Pi], 6 + Sin[Rational[1, 18] Pi]}, {
         6 + Rational[-1, 2] 3^Rational[1, 2], Rational[11, 2]}, {
         6 - Sin[Rational[1, 9] Pi], 6 - Cos[Rational[1, 9] Pi]}}, {{
         6.342020143325668, 5.060307379214091}, {6.866025403784438, 5.5}, {
         6.984807753012208, 6.17364817766693}, {6.64278760968654, 
         6.766044443118978}, {6, 7}, {5.35721239031346, 6.766044443118978}, {
         5.015192246987792, 6.17364817766693}, {5.133974596215562, 5.5}, {
         5.657979856674332, 5.060307379214091}}]],
      RegularPolygon[{6, 6}, 1, 9]]}, 
    {RGBColor[0.6683710849662066, 0.06705784905022383, 0.5203113528524588], 
     InterpretationBox[
      PolygonBox[
       NCache[{{6 + Sin[Rational[1, 11] Pi], 8 - Cos[Rational[1, 11] Pi]}, {
         6 + Cos[Rational[5, 22] Pi], 8 - Sin[Rational[5, 22] Pi]}, {
         6 + Cos[Rational[1, 22] Pi], 8 - Sin[Rational[1, 22] Pi]}, {
         6 + Cos[Rational[3, 22] Pi], 8 + Sin[Rational[3, 22] Pi]}, {
         6 + Sin[Rational[2, 11] Pi], 8 + Cos[Rational[2, 11] Pi]}, {6, 9}, {
         6 - Sin[Rational[2, 11] Pi], 8 + Cos[Rational[2, 11] Pi]}, {
         6 - Cos[Rational[3, 22] Pi], 8 + Sin[Rational[3, 22] Pi]}, {
         6 - Cos[Rational[1, 22] Pi], 8 - Sin[Rational[1, 22] Pi]}, {
         6 - Cos[Rational[5, 22] Pi], 8 - Sin[Rational[5, 22] Pi]}, {
         6 - Sin[Rational[1, 11] Pi], 8 - Cos[Rational[1, 11] Pi]}}, {{
         6.28173255684143, 7.0405070263855025`}, {6.755749574354258, 
         7.345139266054715}, {6.989821441880933, 7.857685161726715}, {
         6.909631995354518, 8.415415013001887}, {6.540640817455597, 
         8.841253532831182}, {6, 9}, {5.459359182544403, 8.841253532831182}, {
         5.090368004645482, 8.415415013001887}, {5.010178558119067, 
         7.857685161726715}, {5.244250425645742, 7.345139266054715}, {
         5.71826744315857, 7.0405070263855025`}}]],
      RegularPolygon[{6, 8}, 1, 11]]}, 
    {RGBColor[0.8867783781363427, 0.1416454593266121, 0.25463319716911204`], 
     InterpretationBox[
      PolygonBox[
       NCache[{{6 + Rational[1, 2] 3^Rational[1, 2], Rational[19, 2]}, {6, 
         11}, {6 + Rational[-1, 2] 3^Rational[1, 2], Rational[19, 2]}}, {{
         6.866025403784438, 9.5}, {6, 11}, {5.133974596215562, 9.5}}]],
      RegularPolygon[{6, 10}, 1, 3]]}}, {
    {RGBColor[0.13741419049948767`, 0.5531000642520667, 0.5912055546204609], 
     InterpretationBox[
      PolygonBox[
       NCache[{{8 + Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {8, 
         1}, {8 + Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {{
         8.86602540378444, -0.5}, {8, 1}, {7.133974596215562, -0.5}}]],
      RegularPolygon[{8, 0}, 1, 3]]}, 
    {RGBColor[0.05124705532840035, 0.2545919946418622, 0.6407695400789151], 
     InterpretationBox[
      PolygonBox[
       NCache[{{8 + Sin[Rational[1, 9] Pi], 2 - Cos[Rational[1, 9] Pi]}, {
         8 + Rational[1, 2] 3^Rational[1, 2], Rational[3, 2]}, {
         8 + Cos[Rational[1, 18] Pi], 2 + Sin[Rational[1, 18] Pi]}, {
         8 + Sin[Rational[2, 9] Pi], 2 + Cos[Rational[2, 9] Pi]}, {8, 3}, {
         8 - Sin[Rational[2, 9] Pi], 2 + Cos[Rational[2, 9] Pi]}, {
         8 - Cos[Rational[1, 18] Pi], 2 + Sin[Rational[1, 18] Pi]}, {
         8 + Rational[-1, 2] 3^Rational[1, 2], Rational[3, 2]}, {
         8 - Sin[Rational[1, 9] Pi], 2 - Cos[Rational[1, 9] Pi]}}, {{
         8.34202014332567, 1.0603073792140916`}, {8.86602540378444, 1.5}, {
         8.984807753012207, 2.1736481776669305`}, {8.64278760968654, 
         2.766044443118978}, {8, 3}, {7.35721239031346, 2.766044443118978}, {
         7.015192246987792, 2.1736481776669305`}, {7.133974596215562, 1.5}, {
         7.657979856674332, 1.0603073792140916`}}]],
      RegularPolygon[{8, 2}, 1, 9]]}, 
    {RGBColor[0.5672088215799247, 0.9176356191072905, 0.024465517435746875`], 
     
     InterpretationBox[
      PolygonBox[
       NCache[{{
         8 + (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2], 4 + Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
         8 + (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2], 4 + Rational[1, 4] (-1 + 5^Rational[1, 2])}, {8, 
         5}, {
         8 - (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 4 + Rational[1, 4] (-1 + 5^Rational[1, 2])}, {
         8 - (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 4 + Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{
         8.587785252292473, 3.1909830056250525`}, {8.951056516295154, 
         4.3090169943749475`}, {8, 5}, {7.048943483704846, 
         4.3090169943749475`}, {7.412214747707527, 3.1909830056250525`}}]],
      RegularPolygon[{8, 4}, 1, 5]]}, 
    {RGBColor[0.5844136253246606, 0.8339969316224618, 0.12360672709135034`], 
     InterpretationBox[
      PolygonBox[
       NCache[{{8 + Sin[Rational[1, 11] Pi], 6 - Cos[Rational[1, 11] Pi]}, {
         8 + Cos[Rational[5, 22] Pi], 6 - Sin[Rational[5, 22] Pi]}, {
         8 + Cos[Rational[1, 22] Pi], 6 - Sin[Rational[1, 22] Pi]}, {
         8 + Cos[Rational[3, 22] Pi], 6 + Sin[Rational[3, 22] Pi]}, {
         8 + Sin[Rational[2, 11] Pi], 6 + Cos[Rational[2, 11] Pi]}, {8, 7}, {
         8 - Sin[Rational[2, 11] Pi], 6 + Cos[Rational[2, 11] Pi]}, {
         8 - Cos[Rational[3, 22] Pi], 6 + Sin[Rational[3, 22] Pi]}, {
         8 - Cos[Rational[1, 22] Pi], 6 - Sin[Rational[1, 22] Pi]}, {
         8 - Cos[Rational[5, 22] Pi], 6 - Sin[Rational[5, 22] Pi]}, {
         8 - Sin[Rational[1, 11] Pi], 6 - Cos[Rational[1, 11] Pi]}}, {{
         8.28173255684143, 5.0405070263855025`}, {8.755749574354258, 
         5.345139266054715}, {8.989821441880933, 5.857685161726715}, {
         8.909631995354518, 6.415415013001886}, {8.540640817455598, 
         6.841253532831181}, {8, 7}, {7.459359182544403, 6.841253532831181}, {
         7.090368004645482, 6.415415013001886}, {7.010178558119067, 
         5.857685161726715}, {7.244250425645742, 5.345139266054715}, {
         7.71826744315857, 5.0405070263855025`}}]],
      RegularPolygon[{8, 6}, 1, 11]]}, 
    {RGBColor[0.2518071195701159, 0.14235254900467864`, 0.48848096584827627`], 
     InterpretationBox[
      PolygonBox[
       NCache[{{8 + Sin[Rational[1, 7] Pi], 8 - Cos[Rational[1, 7] Pi]}, {
         8 + Cos[Rational[1, 14] Pi], 8 - Sin[Rational[1, 14] Pi]}, {
         8 + Cos[Rational[3, 14] Pi], 8 + Sin[Rational[3, 14] Pi]}, {8, 9}, {
         8 - Cos[Rational[3, 14] Pi], 8 + Sin[Rational[3, 14] Pi]}, {
         8 - Cos[Rational[1, 14] Pi], 8 - Sin[Rational[1, 14] Pi]}, {
         8 - Sin[Rational[1, 7] Pi], 8 - Cos[Rational[1, 7] Pi]}}, {{
         8.433883739117558, 7.099031132097581}, {8.974927912181824, 
         7.777479066043686}, {8.78183148246803, 8.623489801858733}, {8, 9}, {
         7.2181685175319705`, 8.623489801858733}, {7.0250720878181765`, 
         7.777479066043686}, {7.566116260882442, 7.099031132097581}}]],
      RegularPolygon[{8, 8}, 1, 7]]}, 
    {RGBColor[0.02111746894229194, 0.6404394812262224, 0.7812500797772488], 
     InterpretationBox[
      PolygonBox[
       NCache[{{8 + Rational[1, 2] 3^Rational[1, 2], Rational[19, 2]}, {8, 
         11}, {8 + Rational[-1, 2] 3^Rational[1, 2], Rational[19, 2]}}, {{
         8.86602540378444, 9.5}, {8, 11}, {7.133974596215562, 9.5}}]],
      RegularPolygon[{8, 10}, 1, 3]]}}, {
    {RGBColor[0.18089264374130587`, 0.3822306001465059, 0.5516287911062581], 
     InterpretationBox[
      PolygonBox[
       NCache[{{10 + Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {10, 
         1}, {10 + Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {{
         10.86602540378444, -0.5}, {10, 1}, {9.13397459621556, -0.5}}]],
      RegularPolygon[{10, 0}, 1, 3]]}, 
    {RGBColor[
     0.10426312916819813`, 0.49397560289436204`, 0.08770045034431928], 
     InterpretationBox[
      PolygonBox[
       NCache[{{10 + Rational[1, 2] 3^Rational[1, 2], Rational[3, 2]}, {10, 
         3}, {10 + Rational[-1, 2] 3^Rational[1, 2], Rational[3, 2]}}, {{
         10.86602540378444, 1.5}, {10, 3}, {9.13397459621556, 1.5}}]],
      RegularPolygon[{10, 2}, 1, 3]]}, 
    {RGBColor[0.6349988941553288, 0.25278522471312237`, 0.8156048260263853], 
     InterpretationBox[
      PolygonBox[
       NCache[{{10 + Rational[1, 2] 3^Rational[1, 2], Rational[7, 2]}, {10, 
         5}, {10 + Rational[-1, 2] 3^Rational[1, 2], Rational[7, 2]}}, {{
         10.86602540378444, 3.5}, {10, 5}, {9.13397459621556, 3.5}}]],
      RegularPolygon[{10, 4}, 1, 3]]}, 
    {RGBColor[0.8997354900924608, 0.805331680773691, 0.9540915347439367], 
     InterpretationBox[
      PolygonBox[
       NCache[{{10 + Rational[1, 2] 3^Rational[1, 2], Rational[11, 2]}, {10, 
         7}, {10 + Rational[-1, 2] 3^Rational[1, 2], Rational[11, 2]}}, {{
         10.86602540378444, 5.5}, {10, 7}, {9.13397459621556, 5.5}}]],
      RegularPolygon[{10, 6}, 1, 3]]}, 
    {RGBColor[0.701297968136019, 0.09163538423302442, 0.4515454673828221], 
     InterpretationBox[
      PolygonBox[
       NCache[{{10 + Rational[1, 2] 3^Rational[1, 2], Rational[15, 2]}, {10, 
         9}, {10 + Rational[-1, 2] 3^Rational[1, 2], Rational[15, 2]}}, {{
         10.86602540378444, 7.5}, {10, 9}, {9.13397459621556, 7.5}}]],
      RegularPolygon[{10, 8}, 1, 3]]}, 
    {RGBColor[0.5380501279143346, 0.3128501419772971, 0.03622298605225627], 
     InterpretationBox[
      PolygonBox[
       NCache[{{10 + Rational[1, 2] 3^Rational[1, 2], Rational[19, 2]}, {10, 
         11}, {10 + Rational[-1, 2] 3^Rational[1, 2], Rational[19, 2]}}, {{
         10.86602540378444, 9.5}, {10, 11}, {9.13397459621556, 9.5}}]],
      RegularPolygon[{10, 10}, 1, 3]]}}},
  ImageSize->Small]], "Output",
 CellChangeTimes->{{3.826987323582312*^9, 3.8269873660753603`*^9}, {
   3.8269874115133877`*^9, 3.826987475331717*^9}, 3.826987510333166*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"6647231b-15f4-4f1d-9ea4-0af5cb05f601"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["15. Scope of the Wolfram Language", "Section",
 CellChangeTimes->{{3.826987640115046*^9, 
  3.8269876466188583`*^9}},ExpressionUUID->"0fc477bf-21b8-40fe-a260-\
3d0f63f9eae1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"WolframLanguageData", "[", "]"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.826987619093223*^9, 3.826987623142003*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"86492683-d2e7-49b9-9e81-dee3a22e5e4a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"$Aborted\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$Aborted\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"$Aborted\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$ActivationKey\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$ActivationKey\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$ActivationKey\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$AllowDataUpdates\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$AllowDataUpdates\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$AllowDataUpdates\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$AllowExternalChannelFunctions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"$AllowExternalChannelFunctions\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$AllowExternalChannelFunctions\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$AllowInternet\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$AllowInternet\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$AllowInternet\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$AssertFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$AssertFunction\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$AssertFunction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$Assumptions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$Assumptions\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"$Assumptions\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$AudioDecoders\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$AudioDecoders\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$AudioDecoders\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$AudioEncoders\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$AudioEncoders\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$AudioEncoders\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$AudioInputDevices\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$AudioInputDevices\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"$AudioInputDevices\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.826987625576749*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"d09bb86f-55f6-4fd8-b333-447e39dc984d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"WolframLanguageData", "[", "]"}], ",", "100"}], "]"}], ",", 
   RowBox[{
    RowBox[{"StringContainsQ", "[", 
     RowBox[{
      RowBox[{"EntityValue", "[", 
       RowBox[{"#", ",", "\"\<Name\>\""}], "]"}], ",", "\"\<Audio\>\""}], 
     "]"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8269878711239643`*^9, 3.826987985643675*^9}, {
  3.826988045852462*^9, 3.826988064933057*^9}, {3.826988127269343*^9, 
  3.826988171558035*^9}, {3.826988556776782*^9, 3.826988560857397*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"7720c9a8-cf3e-44e0-be89-638d6205e7b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"$AudioDecoders\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$AudioDecoders\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$AudioDecoders\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$AudioEncoders\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$AudioEncoders\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$AudioEncoders\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$AudioInputDevices\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$AudioInputDevices\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"$AudioInputDevices\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$AudioOutputDevices\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$AudioOutputDevices\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$AudioOutputDevices\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$DefaultAudioInputDevice\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"$DefaultAudioInputDevice\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$DefaultAudioInputDevice\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$DefaultAudioOutputDevice\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"$DefaultAudioOutputDevice\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$DefaultAudioOutputDevice\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.826987934415597*^9, {3.826987971560783*^9, 3.8269879893885736`*^9}, 
   3.826988050664028*^9, {3.8269881231473293`*^9, 3.8269881558882933`*^9}, {
   3.8269885502017603`*^9, 3.8269885612755003`*^9}},
 CellLabel->
  "Out[143]=",ExpressionUUID->"08080778-7b42-4b1b-8a2a-bff1e4824dd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$UserBaseDirectory"], "Input",
 CellChangeTimes->{{3.826988592981875*^9, 3.826988594838715*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"0d6d3d59-b43e-48ad-9851-11e522461f7c"],

Cell[BoxData["\<\"/home/ben/.Mathematica\"\>"], "Output",
 CellChangeTimes->{3.8269885960260057`*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"868e8c88-ee02-42d4-ad38-53231111f0b5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["16. Real-World Data", "Section",
 CellChangeTimes->{{3.827244736014557*^9, 
  3.827244741252746*^9}},ExpressionUUID->"c22ccd75-0804-4b4d-b333-\
54417d3b2e1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityProperties", "[", 
  TemplateBox[{"\"Christian McBride\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"MusicAct\"", ",", "\"ChristianMcBride::fq792\""}], "]"}], 
    "\"Entity[\\\"MusicAct\\\", \\\"ChristianMcBride::fq792\\\"]\"", 
    "\"music act\""},
   "Entity"], "]"}]], "Input",
 CellChangeTimes->{{3.8272448198032207`*^9, 3.8272448291939898`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"0359d1cf-a056-4978-a275-b4b46f0dd2f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"albums\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"MusicAct\"", ",", "\"Albums\""}], "]"}], 
     "\"EntityProperty[\\\"MusicAct\\\", \\\"Albums\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"country\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"MusicAct\"", ",", "\"Country\""}], "]"}], 
     "\"EntityProperty[\\\"MusicAct\\\", \\\"Country\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"end date\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"MusicAct\"", ",", "\"EndDate\""}], "]"}], 
     "\"EntityProperty[\\\"MusicAct\\\", \\\"EndDate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"image\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"MusicAct\"", ",", "\"Image\""}], "]"}], 
     "\"EntityProperty[\\\"MusicAct\\\", \\\"Image\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"members\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"MusicAct\"", ",", "\"Members\""}], "]"}], 
     "\"EntityProperty[\\\"MusicAct\\\", \\\"Members\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"members and dates\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"MusicAct\"", ",", "\"MembersAndDates\""}], "]"}], 
     "\"EntityProperty[\\\"MusicAct\\\", \\\"MembersAndDates\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"MusicAct\"", ",", "\"Name\""}], "]"}], 
     "\"EntityProperty[\\\"MusicAct\\\", \\\"Name\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"place of origin\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"MusicAct\"", ",", "\"PlaceOfOrigin\""}], "]"}], 
     "\"EntityProperty[\\\"MusicAct\\\", \\\"PlaceOfOrigin\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"start date\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"MusicAct\"", ",", "\"StartDate\""}], "]"}], 
     "\"EntityProperty[\\\"MusicAct\\\", \\\"StartDate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"works\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"MusicAct\"", ",", "\"Works\""}], "]"}], 
     "\"EntityProperty[\\\"MusicAct\\\", \\\"Works\\\"]\""},
    "EntityProperty"]}], "}"}]], "Output",
 CellChangeTimes->{3.827244830105298*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"d08df687-f2ef-47c3-9f92-11bafe6c68be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Christian McBride\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"MusicAct\"", ",", "\"ChristianMcBride::fq792\""}], "]"}], 
    "\"Entity[\\\"MusicAct\\\", \\\"ChristianMcBride::fq792\\\"]\"", 
    "\"music act\""},
   "Entity"], "[", "\"\<Albums\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.827244840161989*^9, 3.827244876515995*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f75eff41-9546-4a6a-922e-aff8ca540fad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Parker's Mood\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"ParkersMood::m95hw\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"ParkersMood::m95hw\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gettin' to It\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"GettintoIt::q6w3f\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"GettintoIt::q6w3f\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Number Two Express\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"NumberTwoExpress::4t25m\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"NumberTwoExpress::4t25m\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"SuperBass\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"SuperBass::ryt4k\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"SuperBass::ryt4k\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Fingerpainting: The Music of Herbie Hancock\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicAlbum\"", ",", 
         "\"FingerpaintingTheMusicofHerbieHancock::8v5tb\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \
\\\"FingerpaintingTheMusicofHerbieHancock::8v5tb\\\"]\"", "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"A Family Affair\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"AFamilyAffair::d59cc\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"AFamilyAffair::d59cc\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"SuperBass 2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"SuperBass2::vrn6s\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"SuperBass2::vrn6s\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Live at Tonic\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"LiveatTonic::yrg4t\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"LiveatTonic::yrg4t\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"New York Time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"NewYorkTime::h9534\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"NewYorkTime::h9534\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Super Trio\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"SuperTrio::s48h9\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"SuperTrio::s48h9\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Camp Meeting\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"CampMeeting::src44\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"CampMeeting::src44\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tokyo Day Trip Live\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicAlbum\"", ",", 
         "\"TokyoDayTripLiveFeatChristianMcBrideAndAntonioSanchez::946md\""}],
        "]"}], "\"Entity[\\\"MusicAlbum\\\", \
\\\"TokyoDayTripLiveFeatChristianMcBrideAndAntonioSanchez::946md\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Day Trip\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicAlbum\"", ",", 
         "\"DayTripFeat.ChristianMcBrideAndAntonioSanchez::2swhh\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \
\\\"DayTripFeat.ChristianMcBrideAndAntonioSanchez::2swhh\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Best of New York Sessions, Volume Two\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicAlbum\"", ",", "\"BestOfNewYorkSessionsvolumetwo::32h92\""}], 
       "]"}], "\"Entity[\\\"MusicAlbum\\\", \
\\\"BestOfNewYorkSessionsvolumetwo::32h92\\\"]\"", "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Conversations With Christian\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicAlbum\"", ",", "\"ConversationsWithChristian::3pc9p\""}], 
       "]"}], "\"Entity[\\\"MusicAlbum\\\", \
\\\"ConversationsWithChristian::3pc9p\\\"]\"", "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"My Witch's Blue\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"MyWitchsBlue::24kg6\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"MyWitchsBlue::24kg6\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Christian McBride\[CloseCurlyQuote]s New Jawn\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"ChristianMcBridesNewJawn::3825m\""}],
        "]"}], "\"Entity[\\\"MusicAlbum\\\", \
\\\"ChristianMcBridesNewJawn::3825m\\\"]\"", "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Trilogy 2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"Trilogy2::45z72\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"Trilogy2::45z72\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"The Movement Revisited: A Musical Portrait of Four Icons\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicAlbum\"", ",", 
         "\"TheMovementRevisited:AMusicalPortraitOfFourIcons::bwp42\""}], 
       "]"}], "\"Entity[\\\"MusicAlbum\\\", \
\\\"TheMovementRevisited:AMusicalPortraitOfFourIcons::bwp42\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"RoundAgain\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"RoundAgain::8y4c2\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"RoundAgain::8y4c2\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sci\[Hyphen]Fi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"SciFi::6j9w3\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"SciFi::6j9w3\\\"]\"", 
     "\"music album\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vertical Vision\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicAlbum\"", ",", "\"VerticalVision::4jb6q\""}], "]"}], 
     "\"Entity[\\\"MusicAlbum\\\", \\\"VerticalVision::4jb6q\\\"]\"", 
     "\"music album\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.827244842721435*^9, 3.827244876951025*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"63e00d29-c539-43d9-8072-af5ebc9e3db1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Trilogy 2\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"MusicAlbum\"", ",", "\"Trilogy2::45z72\""}], "]"}], 
    "\"Entity[\\\"MusicAlbum\\\", \\\"Trilogy2::45z72\\\"]\"", 
    "\"music album\""},
   "Entity"], "[", "\"\<CanonicalMusicWorkRecordings\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8272449291675653`*^9, 3.827244957410574*^9}, {
  3.827245002075179*^9, 3.8272450074443693`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9a96f41a-4c94-459f-a970-6e598ad73833"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"How Deep Is the Ocean (Trilogy 2, Live)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicWorkRecording\"", ",", 
         "\"HowDeepIstheOceanTrilogy2Live::j8d6g\""}], "]"}], 
     "\"Entity[\\\"MusicWorkRecording\\\", \
\\\"HowDeepIstheOceanTrilogy2Live::j8d6g\\\"]\"", "\"music work recording\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"500 Miles High (Trilogy 2, Live)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicWorkRecording\"", ",", 
         "\"500MilesHighTrilogy2Live::s5jcd\""}], "]"}], 
     "\"Entity[\\\"MusicWorkRecording\\\", \
\\\"500MilesHighTrilogy2Live::s5jcd\\\"]\"", "\"music work recording\""},
    "Entity"], ",", 
   TemplateBox[{"\"Crepuscule with Nellie (Trilogy 2, Live)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicWorkRecording\"", ",", 
         "\"CrepusculewithNellieTrilogy2Live::5693j\""}], "]"}], 
     "\"Entity[\\\"MusicWorkRecording\\\", \
\\\"CrepusculewithNellieTrilogy2Live::5693j\\\"]\"", 
     "\"music work recording\""},
    "Entity"], ",", 
   TemplateBox[{"\"Work (Trilogy 2, Live)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"MusicWorkRecording\"", ",", "\"WorkTrilogy2Live::y47fj\""}],
        "]"}], "\"Entity[\\\"MusicWorkRecording\\\", \
\\\"WorkTrilogy2Live::y47fj\\\"]\"", "\"music work recording\""},
    "Entity"], ",", 
   TemplateBox[{"\"But Beautiful (Trilogy 2, Live)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicWorkRecording\"", ",", 
         "\"ButBeautifulTrilogy2Live::7tydt\""}], "]"}], 
     "\"Entity[\\\"MusicWorkRecording\\\", \
\\\"ButBeautifulTrilogy2Live::7tydt\\\"]\"", "\"music work recording\""},
    "Entity"], ",", 
   TemplateBox[{"\"La Fiesta (Trilogy 2, Live)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicWorkRecording\"", ",", "\"LaFiestaTrilogy2Live::56y8p\""}], 
       "]"}], "\"Entity[\\\"MusicWorkRecording\\\", \
\\\"LaFiestaTrilogy2Live::56y8p\\\"]\"", "\"music work recording\""},
    "Entity"], ",", 
   TemplateBox[{"\"Eiderdown (Trilogy 2, Live)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicWorkRecording\"", ",", "\"EiderdownTrilogy2Live::77q63\""}], 
       "]"}], "\"Entity[\\\"MusicWorkRecording\\\", \
\\\"EiderdownTrilogy2Live::77q63\\\"]\"", "\"music work recording\""},
    "Entity"], ",", 
   TemplateBox[{"\"All Blues (Trilogy 2, Live)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicWorkRecording\"", ",", "\"AllBluesTrilogy2Live::4354c\""}], 
       "]"}], "\"Entity[\\\"MusicWorkRecording\\\", \
\\\"AllBluesTrilogy2Live::4354c\\\"]\"", "\"music work recording\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pastime Paradise (Trilogy 2, Live)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicWorkRecording\"", ",", 
         "\"PastimeParadiseTrilogy2Live::3t94c\""}], "]"}], 
     "\"Entity[\\\"MusicWorkRecording\\\", \
\\\"PastimeParadiseTrilogy2Live::3t94c\\\"]\"", "\"music work recording\""},
    "Entity"], ",", 
   TemplateBox[{"\"Now He Sings, Now He Sobs (Trilogy 2, Live)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicWorkRecording\"", ",", 
         "\"NowHeSingsNowHeSobsTrilogy2Live::ctrs3\""}], "]"}], 
     "\"Entity[\\\"MusicWorkRecording\\\", \
\\\"NowHeSingsNowHeSobsTrilogy2Live::ctrs3\\\"]\"", 
     "\"music work recording\""},
    "Entity"], ",", 
   TemplateBox[{"\"Serenity (Trilogy 2, Live)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicWorkRecording\"", ",", "\"SerenityTrilogy2Live::h3w42\""}], 
       "]"}], "\"Entity[\\\"MusicWorkRecording\\\", \
\\\"SerenityTrilogy2Live::h3w42\\\"]\"", "\"music work recording\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lotus Blossom (Trilogy 2, Live)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"MusicWorkRecording\"", ",", 
         "\"LotusBlossomTrilogy2Live::hs2qv\""}], "]"}], 
     "\"Entity[\\\"MusicWorkRecording\\\", \
\\\"LotusBlossomTrilogy2Live::hs2qv\\\"]\"", "\"music work recording\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8272449233066483`*^9, 3.827244957668186*^9}, 
   3.8272450080086718`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"37652c5a-b1d5-4f5d-9acb-086109e7aeaa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["17. Units", "Section",
 CellChangeTimes->{{3.827245060447194*^9, 
  3.8272450614510593`*^9}},ExpressionUUID->"e6d99635-0214-47a6-b219-\
9054516723f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{"EntityInstance", "[", 
   RowBox[{
    TemplateBox[{"\"carbon\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Element\"", ",", "\"Carbon\""}], "]"}], 
      "\"Entity[\\\"Element\\\", \\\"Carbon\\\"]\"", "\"element\""},
     "Entity"], ",", " ", 
    TemplateBox[{"1", "\"kg\"", "kilogram", "\"Kilograms\""},
     "Quantity"]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.827245594072229*^9, 3.827245608881089*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"3b9362fa-3b25-439c-bcfb-3d0fe2b1f9ce"],

Cell["\<\
EntityInstance[Entity[\"Element\", \"Carbon\"], Quantity[1, \"Kilograms\"]]\
\>", "Output",
 CellChangeTimes->{{3.8272455988996363`*^9, 3.827245609267652*^9}},
 CellLabel->
  "Out[28]//InputForm=",ExpressionUUID->"3e373393-5f0e-4a7d-85e7-\
c01a0fd114bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"EntityValue", "[", 
    RowBox[{
     RowBox[{"EntityList", "[", 
      TemplateBox[{"\"planets\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"Planet\"", ",", "All"}], "]"}], 
        "\"EntityClass[\\\"Planet\\\", All]\"", "\"planets\""},
       "EntityClass"], "]"}], ",", "\"\<DistanceFromEarth\>\""}], "]"}], ",", 
   
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"light minutes\"", 
     "light minutes", "\"LightMinutes\""},
    "Quantity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.827245663917096*^9, 3.827245759289506*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"4caafbd0-9302-4a33-9fa4-f49016ad9d18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "11.091014517529205`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "14.296111076230709`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "0.`", "\"light minutes\"", "light minutes", "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "15.526296472281642`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "45.967421776860455`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "85.2705881621232`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "172.304734797183`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "255.96629530419426`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.82724568481219*^9, 3.827245697808474*^9}, {
  3.827245739667325*^9, 3.8272457681325197`*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"290ffe90-d477-4249-a721-5c49d1a502ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["18. Geocomputation", "Section",
 CellChangeTimes->{{3.827245776002241*^9, 
  3.827245779382811*^9}},ExpressionUUID->"5e898882-38f9-44c4-a62c-\
f281a6be0928"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoDistance", "[", 
  RowBox[{
   TemplateBox[{"\"Maryland, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Maryland\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Maryland\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Seattle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Seattle\"", ",", "\"Washington\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Seattle\\\", \\\"Washington\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.827245860311129*^9, 3.827245895545454*^9}, {
  3.827245934664678*^9, 3.8272459923936377`*^9}, {3.827246069611783*^9, 
  3.827246082741456*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"134fa796-24e3-4581-a585-9a3ea7573fa7"],

Cell[BoxData[
 TemplateBox[{"2180.7690495823895`", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.827245869445773*^9, 3.8272458977523193`*^9}, {
   3.8272459381971483`*^9, 3.827246001958364*^9}, 3.8272460834905777`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"281c331e-4c31-4d36-90a0-3386db943167"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoGraphics", "[", 
  TemplateBox[{"\"Maryland, United States\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"AdministrativeDivision\"", ",", 
        RowBox[{"{", 
          RowBox[{"\"Maryland\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
    "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Maryland\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
   "Entity"], "]"}]], "Input",
 CellChangeTimes->{{3.827246008961602*^9, 3.8272460371698303`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"99f0e4e9-ca2d-46e0-bf4c-1ba38c1ac033"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJy8vft3FNed9jvnnF/Oj+dfOH9Fzlpea9Y6Kw6Jr5n4ltixc14bsGMBmcQG
bMAzXhMTYzskeXOxMb4kYwwCBHYmSAghJL+v0QUhtWTQFbUkViS1BBKgiSTw
C3JPcj7f/XRvbVVVV7ewZ1gbrerq6qpdVXs/+/ne/++n/vGBp//3v/u7v3v+
/+TPA0++8P8+99yT2x78v/jw8I+ef/aZH61fd9ePNq9/Zv1z/89T/wc7/53/
n/xvf/d3tt2crenNNfOXNjB1On9zira0OLZ0NXPj/M6bI+9pT6TNXuunXZsf
Oj3ykX6r1j5Wy0mmr50fzWWmJgYSf6t2Y2Hy2uwYbenzyZTDEtvNXMP0Rw/R
w5Qz87fUz+fnxjmA/tPDqcksd2HdHunirw5gQ/dC47AbI9U3el/TV9cXxzLj
JyN3TbuxmHC5lFvjq+FLrdq+ONuZPVE1XXNPyi0vXDo/N9EZ33n9Sj8bPPCR
y+2+h+o898VO3wc2ZrOf3MbTvjJ2errhmctH70u4i8XRbH9jYUi4k+v56Jnw
lAamPqUbNH3FHr5lw59hZnokpUu5ibYLmRMj2e6pbOvE4Gna1L47luZ6dc5K
Oj9+cZBf0U991A95XFyUt5/rO85X9GFVD4RnPj/VPX1ozULmtdU+zMSRcHmo
UT2cuNrN8+GtMSzpuQ6gt6cGT9R+luFhhj+s/G0ycugzBzPS4t/enBvmVOk9
vNKxa/rwN2hz539xc7rl+lgdJ8z1n6LNTI/ydm4uRN/j/KXzw5n6lqYjw4Md
2ewgf0/WvUcbantprn2je/6ZiZ7abMdhrj4/lWGP7ZzM5uo2Th34Oi3XvNP+
1m38tKf396eHj/VM7D87OZTLMddobND4CSefuDjIDyczh+34fXfwQ/Ywbjl5
rvd47uDdUx89zC3wFRtci+ZvLccwcHeh/vOs9C1TfrHzeY3kk0PHI3/VeFlC
CY7X9tjsWV4fU/tG/25gKuWp3lgYDWEkHM8GSrNjKx6mgyz266vbg00bM/VP
Tf5xLa8m3An+a4byEHSVxJODqPpKsM/Nnh9pGxjtGsh1MlZpfKU70tlujh9Z
7Hrhi/l+/ZzRG8FMPUBeJY8LmC1cZXFS8EuvGK6lblN4wpGXO98CE1KGbvrY
ZnLR8g4ZdF0BaYhReTflhbSVN2Y0yHO5+u+v9u6Nf2vPebgpX5zI6knk4fAw
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
v8tX/Ms27CvItRCRsb6ZXE+m8ffN2x+b6d050bzp4P4tg8dftZL1SUh7uXcT
uFrJpal/DUM3e3a/Bir+tAxmDpRK+i5EXGf/osDjSipmqL2XTUkXcK78FyuW
6KDSb2Y407dDXp4VGiprFl9vM++snZGo+0I0KTJSX79n8769244eaTx+dhDl
3RtzpKGIkQo25RAPj6N3cbgG1ofwuhR4gpai97xorMt5EFog1XgpP6LrRZ+i
7kW9PrmJIs+m6W/7Wqm+XSpKnC8WDIF5yiwgys0sEDwyuVRjyh6e7ucAMRWX
8xCnWSn0qw05JSFs+hQhNWEP+7upUFKogKs9dMrNtbIeqY8rGmtVqeuGnC5R
IrJ+jrfMXPfUnmvD+16DndPLKlo7rQeHQ3t1mddz+En7qzmnD175n+zKfTSy
cPI2CQueQyr496lf/wLA3HHgT3w+8vBD0M5bfnAzcPqjf7sdMGSZ9UJFVt52
6/d46tgMjgqisi94yyfEdXjIWvnw789+ejdfgaugLsD4wu+ffetPr+7e+fa1
116zYcPjZ7pab/jO9WzAofhMRE50dsWIlkpQUiS27z8er3PuJyaEiklX4QCW
1d8tAnn/3Va3J6ZqgZPygRbQo7fJ2uIsDMtRnlI06YuT0LCDagzmxMa50/vu
c2Ot8LHurua+oY4jJ/YfbNiFgKXv//VDGCmfgOrQZFt/367I64mHKlKdz3LJ
iy5vuYpkCFVAkV5VfmPLJijWRi4URTnf4hNUFcRuHnz30FqPjLf/5UTP64mw
yZnzmva3XguF42z72qLLjj833W4xacXknYmxToXZK9MHwimDpITl2oomCSSt
I2QAxfGH0CccRQikXmplM3nTrZ3AZlW4AXKi88ZZrpH/3h2RDKaaOecqgifD
m3eFUCzt11V75pLnPzljKsmhtas1ieCWPHs85KE/SLTzF08/Cire//Ofrd/4
EAgJmolnsjLT0QJsQjU/2Ft3xx0/ZCWfB+p3gZysAfTAUjYDOcFDkBNsZCUs
FFyNI6d0eTCW7bVvKeTMy3OkiPrs9khdJmN3TpFR+HSpSzbYXF4NuKyUtSGb
a/itryzEOlMr58UiW4qVEv0Uzis8vlzRuVWXiN1MTpl4w1+Np/DTBz6ZGW2i
hzcOci7bCvSpVxFYaoFMuXbF4ReOvBw2FZY/uesqK0/ES22ojh/lJSKElNso
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
t9sw7r/Nev4eXst6WB8bM0RDk22mqu+/u2u8GemfPMnnUC6jMddJhioGBFKj
4Z80XUJhNIpPSL5Ys+imm74r6OZHGYRcTwOQ6wJFnlZ4Ks9AopNdBwnd8R48
4Zze1KkY+KU0pWLEhRcFA5fqblPqCY+sAUtz3UsRXyqBWOHRbBjb1pTCbdcG
Yk06PtTMPGvYKzyTRVcqfL7tcW4T9253p/XTXEU7p/8V9YSKZ69rfVmZG2+X
Zabu3Tde3/zHqZnzCAuAp7WDyfWEEDo/N2o1/8drz3Os+TKBzXMuqTBNrkxD
0m75wc1iJmJHk+2vzJ7dzzQvBGnvugaxOmlz3d4E8fSTT/j4dhRD4yq33oLA
bfhX2ywzWRR/LiIc591NP+XnGLp4nGR1cmVaXV/VVpLrYpnj8/n65pc9lqpC
JkTR0zDQFcSQSfDQ5ntuuek6r7Gyu8qPHN5mx3nwgTU6IH8ov/KCvf/XD/mX
n9YVsQwK7d71DkSUZT6b9r+pQFl4IHROuz+8bu0TD/2IBc6EU/K/yBjyWmdA
tr+6wZ/h3Xd8t7urmdsBigJluor71tzjD2WsY7npo6PxiSXkLI6PTh6UjoRG
CFT5OavPfHitmRldm06LZ3NaNhDNrFRP9ogIDJWNHhEplZFgznyBv90ncz1Q
qSJRKxfmL8i5LNyrgmJrXgqO9dK+eHmu0yddDV1IavAT7esai/wulzm177bc
2/8y13a/uhivOnJKEgvNpavqMmEhCuTjbKGaYOb//b//i7DAv7mzLSauqAVK
+qLrBlVzruhKJNt7+GRrBa3qHcJYx8njz84cvh9u88Lvn317y4v79m4DFpho
v/vVfYeO7+Lxhg6BKkw6yIwU4bp339SshEQpooBdwBatBxA4FFOSZQ4oQst8
582ur7QZOMC3UDWwRQV+C323ywXyJV6LkIEjq7857wKdKjyTbwU1rIFPCihA
J3C7wEt3P879Qj9FFBIPNlr37Vc3gKhCTv4ee3QdqCg+xlVwOYId0NIjp3Re
RkxmQ30FgdcB777zh5yhxz12RzhVoTHwzvTkR6UsM/4CWE6y4917OUMPswwd
y8Ln+j2bQzBcmO8DY+PIye/KgMkL0XeC8+tBdV6ajI/SGeRYV9jn/lMZoDj3
1ldGdt0Ifnp88NMTdA1BMi7mah+2OnKFgLrAhlxzCnBEgE21kF6a5gvjlXuI
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
          
          "], {{0, 239.}, {446., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> False, MetaInformation -> 
          Association[
           "Exif" -> Association[
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com"], 
            "GeoMetaInformation" -> {
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com", 
              "TileSources" -> 
              "Wolfram Knowledgebase with data from \[Copyright] \
OpenStreetMap contributors: http://www.openstreetmap.org/copyright", 
              "Projection" -> "Mercator", 
              "PlotRange" -> {{-79.716796875, -74.81689453125}, {
               40.880126953125, 43.505859375}}, 
              "LonLatBox" -> {{-79.70958807125685, -74.82697250360665}, {
               37.80391482340621, 39.838337976593785`}}, "GeoModel" -> 
              "ITRF00"}]], Selectable -> False], DefaultBaseStyle -> 
        "ImageGraphics", ImageSizeRaw -> {446., 239.}, 
        PlotRange -> {{0, 446.}, {0, 239.}}]], 
      PolygonBox[{{-79.70958807125685, 
       40.889177935913374`}, {-79.70958807125685, 
       43.50071757421589}, {-74.82697250360665, 
       43.50071757421589}, {-74.82697250360665, 
       40.889177935913374`}, {-79.70958807125685, 40.889177935913374`}},
       VertexTextureCoordinates->{{0.001471213758446055, 
        0.0034470316598032014`}, {0.001471213758446055, 0.9980417651314077}, {
        0.9979432299565101, 0.9980417651314077}, {0.9979432299565101, 
        0.0034470316598032014`}, {0.001471213758446055, 
        0.0034470316598032014`}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{-75.80349561713669, 
         41.41148586357388}, {-74.82697250360665, 
         41.41148586357388}, {-74.82697250360665, 
         40.889177935913374`}, {-75.80349561713669, 
         40.889177935913374`}, {-75.80349561713669, 41.41148586357388}}]},
       "\"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Mercator", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Mercator", "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        Entity["AdministrativeDivision", {"Maryland", "UnitedStates"}]}]], 
    "BasicGeoRange" -> {{37.9193758, 
     39.722877}, {-79.48765100000001, -75.04890957486349}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> Automatic, GeoCenter -> 
      GeoPosition[{38.8211264, -77.26828028743175}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-79.70958807125685, -74.82697250360665}, {
       40.889177935913374`, 43.50071757421589}}, GeoGridRangePadding -> None, 
      GeoModel -> "ITRF00", GeoProjection -> "Mercator", 
      GeoRange -> {{37.80391482340621, 
       39.838337976593785`}, {-79.70958807125685, -74.82697250360665}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 7, 
      MetaInformation -> {
       "GeoModel" -> "ITRF00", 
        "LonLatBox" -> {{-79.70958807125685, -74.82697250360665}, {
         37.80391482340621, 39.838337976593785`}}, 
        "PlotRange" -> {{-79.716796875, -74.81689453125}, {40.880126953125, 
         43.505859375}}, "Projection" -> "Mercator", "Software" -> 
        "Created with the Wolfram Language: www.wolfram.com", "TileSources" -> 
        "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright"}}},
  PlotRange->{{-79.70958807125685, -74.82697250360665}, {40.889177935913374`, 
   43.50071757421589}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.827246044142042*^9, 3.827246113829783*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"c034155e-3a9c-42ac-9b01-e785ae65a626"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoGraphics", "[", 
  RowBox[{"GeoPath", "[", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Maryland, United States\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"AdministrativeDivision\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Maryland\"", ",", "\"UnitedStates\""}], "}"}]}], 
         "]"}], "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Maryland\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
      "Entity"], ",", 
     TemplateBox[{"\"Seattle\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"Seattle\"", ",", "\"Washington\"", ",", 
               "\"UnitedStates\""}], "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"Seattle\\\", \\\"Washington\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
      "Entity"]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8272460515942783`*^9, 3.827246055379496*^9}, {
  3.827246091680492*^9, 3.827246098179163*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"393343b9-4260-4796-9d7a-5d0d615840ae"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJzsvUuTHUeW59d6LLTUV9C30FZLbUemDzBjao1p0zLrkZlMCy1kM6bNLLSQ
jZnUra7urmJVEwTJEh5EkUgAVUAmAAKZAIF8gEQ+QOYDSRAPFpEAH9Ums6v7
87j/uOee6x7hETcibwKsxcmIjBtPDw/3X5z4+zn/xb/6H//Ff/8f/8Vf/MW/
+c+Gf/7Fv/yf/6u//ut/+b/8N//58J//9q/+zf/wr//qL/+7//qv/qe//Nd/
+df/5b/6T4YL/4//6C/+4vZw/f90OP8PN/cHfdrf33C2uFXOL6wvD65uXxhc
ebg0WNlbHPzj9Z2wPGw3Wq9qXxO/sf5oG/bzzq39wbvL+4PDF3uDD+/uD1Z3
DwYvX20OHr9YHR7zw+Exbw92nt4a3Pvy0eDFy8fB/vTTl4O953cGD79eGtzZ
uzi4vPnehF1/dDZsyzqvXu8Mvn35MMzr97Ori4MP792c2k62enB58P/99DjY
61ePB0dHxXGffntQLre/f/3d6tTyHNN+Nc+U6/7TDwfB2uxTxn6YPnpxOLh9
6OzxzuDodXrblVvnBre/uhDKFqM87LzKSWXPuir3W19eDGVvzZat9qN9ff/9
o3BvdD9ZpuPZ7fx+dDzNL+6cKefZz8bjq8G2vrkxca9++D5+H7i3j54clGVP
vZn1Hsj+9GN8Oefy6nXxu9aJrbt+55OpZXtPq4/J7zxj/+9nB4OFjf3Bjc3p
azl8nt7P1uHB4PGzg4lzs9djl3EdWkYZ67en346X22uNXWfsvsxqd4b1uOp3
zrXuflEnbm4flMv1/8Z+UT5dn7M/D8rFlo0tU7vuj0N7eVTcU21ny1rz/I7Z
60zVz7am/dvzbnKMve1bvZZrU7u8ebq1nV16b9h/3R48PVwbnPr97WGf92iq
Xzx9dWnw26sfhHXPX38nTPn/wvKvBhdXfhX2s3D3VDlluaaxY4bfrv99mGfa
Nztg71xbH/z64yuDx7t3GtdxO9+0LrL+q1FfRpuFXRy2d1ce7A8eHMSfT57h
5UeFLW0WU66B7eCP8/f3w3LWVb+MffuyeP6YptqOP9t87TjqumXcX1xZHfzi
0nLJs+/e3AzMCiefufvFkG+3C16Gea8+mOLhKv5mO34TJ7P8D5/vh+uknhYs
thAMRl5+tD3szw+G7e5uYGTLajETJ8NLRf0ec/Inn58PBif/7sGFwaXNs4MU
I8tgWdr8PjlZVsdm/J7zjH7//VY5DxvfHzHynSdPgt19chjdzjIyU8vLlpkt
O1tO5n8xq+dlTOtgeif49MuPJspf+2a5LPY+ZM1yMnZztI2/Vykes5z84Mmd
wf7zrbCu7n0fz7TY0e4/xl4xTi7rw6hfufvVQclQ/G85Wcfy22hZrG+CBT0r
y+gnPGOJy1KcDMNhdjt7fNbtunyryg0Tz3mjHlTdM1sWqfuR+r+JNeFkTGVs
GTl2/i+P2p9Truk8mpTDt08fhHt2kjl54eHZxqwsTl68vTQ4erE5uHN/aXDx
+uLg/asLweBksXLVfsTKTQxO/uXS5rFx8juXlweXFhdqn4tUfW/DyTAt7630
p7RZ+Ns+XjsYXH4w/RzrXRc2tlwCh3AdbPPZVwdl3WWfGO0p+xYnd1W3un5H
/bnZkWvLjouTZYGRjd8XRoZbmZaMfGPsH87hb9jb7vM3tzfCvvida7z35f5g
4cHa4OrWhZKT8QdSp8XJ+B/xa8O43qfo/Y+Wk7UcRtYUv3KVLxlmenm0N8FK
j5/tl7zM7/x/8CzOUlXMa9dvwmFiZPbdlN8OvzscrD09LDk5tj2cTDmIXcXJ
1m+scqrzN8fuCQbTcm90f7yv2DOvOFnMbDk+tY18103L1d476lyfnCwTt1wZ
vivOwsl2Ofxtudmuq+nHa/sT/8voBzCxjvyU2p/nZPGcXV/+Tfl75LemnHW9
6rPmxcltzfKrZ075a6tYFfO/x74tvBz1zxjz9p74e6ltczi5z7osa+pve/Tw
erhfr7/b6uV8ZjHPyZ98frERq+IPoN+i/4KT19eWAivP4qfO5uTlXw1OL1zq
3a9W8uaIk1Wfqbv4dfviQXEyzwZTGFmcHONZ/HHvrUyeM3yBf47t4WSm/C+e
5vw9j3V5/l3uT+2S5fy3lcW5xnlzcuknHvl/ZW05udznhOZiu+Rk6iPXCYPC
yeJy2hh+o94vDuvv0vZyyciwUcrPCE/RNoW6+NOX0XXgZIz9iZ/hvMWdxfA/
vmaOjyYENr/44FLJyXAU/SGMHOPkOr+w7Ufq+q5Z+jbOA+3F5vPDKU7eGV6X
X99zsi1fy6W+3MXIRfmdmbCYdoL1U5wc01jY/VhOtuysqdVf1JVN6l6Jk/Ez
zPIs27aa+xjzVVpOPr+6P9WuNeE9HQ/fh/eXWraCSz9Zj9dR6wP2nLz/fDwP
m3M9zLMedRo+lg+aZTy7dZzM/31oGN50TtZye+88I9vfdc9eVWiqml5nl+VW
146dVE7GijapHSfPasW30Pbb46fum5G17Je/vz849btPJupz3bPQlYmVaXN4
BmOcTPsFK6OtwH7/xUGp91S7BiuLk+dd73LNtg/yc2Dyhx8nK9e9U/SpWTlu
Tg7PwYiT9RzAtmgg8PmWnHyjWE9airr92e3E29iZzwr+1Lq3dlYDoy6O3hH5
bWNvL3DyR+uXSs1EipPhKsvJ6E2Zj60rJrY+T7tMBifLHj3ZL7SACR7mvPB1
o7Uu67JZV3Xl6R+3Si1xyppyMsfZfXqznIeRHz47DGwMI6O/ECejo9G5qiyt
j95zstdRiEsXdxYmfMuelTH2K961Pmq0NUxvjtg8h5vtOfK752WMc+H/mJam
rvw0H9Pa2HtYdW/UNqnNsj7X1H1u6k/2ZjmZ41NHaffFumJY+VBS5237t5dH
Rf+BxhnfijSwcDL7ExemOJn/+c33WyqPvnQAKzfODn44etTZ/rz+xHKqvSb4
IPfbrMq2zv+by8ldlt9xcfKrb7dCHX/81Uov9aALEydjhZ+mPyaO2az7PTZm
GPXt+M19He3TDkf8y7s/rPzZV9MaCdo72kJ0yOJk6ZTRbVjfQs55o2njOPPw
16bG2VhO1jX8mZN7ru9w8tDEyB/eezA4vTJmW/mIcxhZ60rLbE2cvPt0b4KT
HxzsFbr61f1SP7qwsT04er07oS2OjfmibfFlmNJoxLQBMTYTn8HIdXXh2XcP
pjg5Vpdg5DpOTtnDr5eDJevrsL/Gf3zbaZPtmD585ypDfMmMfbN65Nh7CMss
J4tTrU8Z9rXnYjkZk/4Cs5zMOswzHlD3K4eTY/dK+mrxsp3nXFN+5HFbtFvJ
yan2KrbOt06/EdXp/Di7XxW/rW0TOS7tvz1uDidrKv5lH/oGKU6mHxInc1wd
S200vzHP7zy7zFtfp9UX9NFmwl5oXu0yzgGf0izfguu2U1lUlWtsmWdhlZ3V
hfO73jnsNn30g3pHmmX7nN8e3L80+NPrL3upA12ZOLkNI1vGtoZuOcXFsf4r
tZ8c7QX64T652NsvFx8O3vvo/ODq9Wmtch8mfTGsLI0x7ZPapoNnB2Eqv7Hm
xcmx+qkx/LF6zPbi5CbPQxfPqWV4cbDVWug9XW2EZebjuBe8h9SNM9e5d33s
4+bkCVY2PAsnT8XFyNRdhH2O2Nszs36HxYmvIf6DkZlS/6nXMDIMSjsC7zz9
dr3kNukFxMn4k+23ExiIbVNcVWUci/F68Jn81CnjGOI3fNlT9dywWIyR0UTn
1AlxsuJEyGdujWcIv7HnZE31rsH04yu/CGUZY2Ubg8KyM/MaM2fH9XlO9teN
iZPFsLAx94/93fyqYGZxs+Zldf7mlF7EjkP0vmbFuqjSzLSJgZHz3THln5xV
O+A5mXkYUd8mq85FZjmZefnRrXEcaTA0/k9+0jpO7sveJE6285aT9X6le9GV
pqLtdTYZw5RTvuiSTzIny58hRuU7I9qLJuP52BYmXj24Emz98bXwv+XknHNp
y8noLlLj7LviZL9cnIwG4+xHp4NmuevxmWrbeJbxI8PK0j1h8g+L2exv8iEr
5kXMxylOZn0/3rqr56mNSVOitlcsbznZHs9r/2a9Bn8dfp+Uu95Dqt4j+mjL
5sLITqNsnwnL0E2fqbAvo+mw+6Cuw47iZDQXjO/D36x3QWIRwIbiZHGWOFkc
Ba/KH4hfFyZqw8hi8iZxLUrmcpycG/MtxtcpE/elOBketn5ly8nY9f3Hg+u7
K4GTYWSNxbNcnBq3d3Okb7AaDMZNxji5zmBmcTLMLI7WPU1xM+vGOFnvALZu
iKt1bczr+NSVEK8hcY/sct6V7DXWPfO5bWSdNlnc2aRcbR8Au/LumfIl6xiW
6dSv7H6zX7bRXC++RvYtvzEszHLPybaP2TfaD+mTu24rZTCY5+QffxozaNft
NNdo3ydUfjFthn6zWm3163qneGn8RCeFk3P72RzfmeJbHNf1zGKWUYuxLHEm
Ff9qnDJcTH9mObmLczgpnJwydMqM6bOcfGnhg5nvA88Gz4i+qfDMcDzGL31w
d6wBYx5Gg9fUXjJlGb8pRgbPat23YXHyvOugnit9Z+J/77OIabi69kfYMdfy
kdhjWX/9QcX30Vn0ICn/+HFz8oT/V+PvjFbZ/9+ElaXbsD5lO1aQdgV9xW/v
HYSxqTDy9692Ay+vHayF9oc2A1aB665unpnwKcvgZPzQ8KM4ORYXIWY2tq/n
pizOjfgmm8RFbsrJ4lTKJuXLnYqjLE4eMbK//phPNuZjtnoLcXLWNbqyiJUN
bOs1zp6TSx+04WnLyTJxsvzf4mTbTob389fT54IGg+tCTy79NXVPv6faUf9u
n/P826nniDb+ANuO5XCyNfoS4ptf+2I/zKvPiHEy5waH/phx3Yyf8TE6ujAb
ey7GyVqn6+PGjLKRhtveB8qRb0a0c89fbJfryw8txuReqU+yPN3HuebuNzUW
tU0dPamcnOIAy8kprYTl5K7Pqy0nY8Sfa9JHx2LJNe3riRUdfF9DXv6H313t
hJMx6p9iuUlvIU6Ge1kmTrY6MN1b9BL8zjz7quPkHL1cl89llX7XH0txOMWN
tu7a6+qDlbV//720ybHaxhGJcTLL5sLI1qc84uUQ262hH7mWwQ0r03+jb+F3
GJl+mf/RBDOFk4mHgUkjACf77+/8tn6wHHgbToaZP3+ylMXIlLk4OZR/R/km
mtrL15uBz6bqiDsfuJFr4zopjyrNw/2v9yYZef/x4Mb+1uCTq0W8D5hZnCzd
cCrOhdVcaP06TcrE823iTbAdcUXqNCeek8XGYmjLyUwZp6hl0sPcHGlzOOfw
jJuY1J6TY+824mT9b/19/nzlX435JHLaXMsROfxRNSasrFcN4kt4Tmb/lBX9
yw03tlxtl3R/Vf1H15zM+cCZNgYFnJy6/r6fXdXxWTlZ+1Gsvb7GwHTZj+bU
062Nq0Fv0eU4y67uWSpG4fPvNrJ0xH1aG0Ymd0kXMZTbcrK2RSN9fel8q3oI
T6GvIJYl4+9szGPm+e7McvgXbtB4PnGy9kO7JE7OLXO4w+bvYZnacvlE7VgO
G0O+D/OM6J+3o8g7tbbpShPsx0i2ud7DF92X0zw4eYJnrV+5K062GgzrZx7t
+9z9IrYGXCROXh8yHTEvxMnEWQjcPOQe/H2wMWMAeT5gZOV5s+O/bhptRoqT
J+pljV411ndxLjYX3NFRkRewrp7CupwffWiKk2MmTkaHAv/ZY1sj7kXMp7yw
tDDByfITw92ek20MYxsjo23dDnFNhvfxMBKnLscsJzPl+nWfxcviZOWqSd1D
G5e6/D6e0GCoPRRLxp75qm/lOW1WU3+b52TyhXgtsnSvufuT7pj/bc43lsuH
obLI5eRcf3auNeHkKusyhpW0KC/dOJvLDxcGZ1evDd7/bGWw/nilXNf3Y1av
fFI52Y9DzCk/6vSTvc96uY4uysHHoD1J1san3BUnz8LViq38Tx+8O7i88E4r
PTr8R7sBE8PI8LD2je8Yg6XhZX6TDmzWMkc7AHvof57B2PcycXKX99szt20T
/PG1XO/aNi6f/b2uXufqNqx/pE4PGNvHi5Fuxt+jWWJVz5OTZ3mnjG0/YQn9
M8/BudVCe8x3Yu7B0vZ2YGT4Bx6Gq0K8ha2C4+BhdBbiZOlWvR4jNhZMBme2
qct+GUysvIAaK1YZQ8ywmDg5xed1+o0UI2OWk4kXV+qWH+8MVvZWJvKKiJMx
OByzcYutFsP6V5sajMx+ZtmHL58YJ3NPMHjZb6M83rH39FhZHx09nuLk65v7
wX/o/ZVt22r4s+13afEK54XxPOi8PCM3+W6Y4mSNi5PPR3Fq9p+P225pNXxM
ji4s5iOOaS6Sdcb0P13m25o6p5dw8mKwg2fbQfOtGNP63X+fUB/UJ7e1+Xbc
9nvzSedkG0/E1o2TYG04mVx/J4EbxMlYm2unzVWcHsV0wzdM2yZOVu48vd93
wclVbULVe2FXzOzH99rYdbaOqu3wft7U+Ii64/lj+HuhvOD8vt9wzIysipN9
ruIq07rzrud9PDc+/rJ8ypaTyZHNu2GRY6Tg5NuPFotxqyNO/sODxZCXRJxs
2xRMWgSxa442Wftgu1m1Zk3j92Y9Ox1oQcTI5y++H2JCS4csTtZYFHGyjWeh
HC92GvPF1xm6ccoY6+obZtX7hefkwn+8a+bHy6vK2L/zKu/G6u7eFLNtHq4P
nkfYvPIaTPtH/pGm+U6U5y7Gyd4Hgs+ZZwy+tWNE6kz+CubpE+ifYGPeG9Se
pzi502ch0U+9LZx8HDqRujGCXWkwFd+i7+tpa/IJvk2cHHLyXVs5ln7dai2m
bHE7jOuznNymbOFhcbLi10gHoNwap5aLHCJd1Yk223Wd70fXZ2NF2nO0dTZ3
nynzbaD6O69/1r2gTW/DynovpX+yMUhznj10G35f8+baXpl5yMk2TzZaCxj5
8sO1kOsuMPLWengu7g85pMibU3xjufyg4IcrD7fLPLxoXTXWz8aogJGKmO15
nAw/sY9YHIkmVozviMd/OAnf9g72V0tOtmPeKAcYmXn5lRUPw3My7JyKFZ1j
XXJyleFr97GTiZ/SZB88y9RLaUil2/WcTHksbl8L39hvPVrJjvcnw+9mORmD
aeu2g5Exno+YXtnXOXGy+po6TrZttPYf42R8PezbPutcA1rnLrXJqbY01xfP
9tJG5Oi7uzAdS/GrlG8Ebsas/q9LTk59U6275i45ue+ynbV8xFo5dey47SRz
cuHnquDkm4VPmXhxyruYW67WN8s23J/95+M4j/qN54Z2iDYIVtZY2JNy/9rW
R+Y11bNo22CvgYjtp0kZ6Hup/texxcn0L5SxOJmybsMynNMLoznzubvqzlkx
qrTNvFm2b062/mSmxGkWJzOWlXsCI2P4jGFm8gqLkzHLyaGMhywU891XMTIM
ZdeTTzrmE86N61BlbepWrn4H9tx9sVd7DDj59xf+YXDl7rtTnGxjWkiHoeVW
ozwrJzd6thr40nnX4Z3JxqmOxbLIvQ8vXo7bELEOdVO/40PQ9z4Y+eZXF2fi
ZDiTuPkaq6JvXbl1y/oiUnWO/+Hb3BhtMU7WfvgmKmbmfNV/yhhfw3Kuq63f
Vvll6/gxxsnKi2L1wOJ8vff08e6qY8SW23m9p1iNbJd9vN0X90jfsWHznPvd
1vDt37l9snPu2WvtI27grOek/5uy8sLdU4MPL3507LHh/LMPQ4uTla8vx2hf
afdyYq9Tl1mfKffQxox5Uy31/KmdivmR/biBNpysNlLfV/ZHMRVoM9RXsE/a
ETi5bYxPjiGtctW99VaMuZ0cHzZvlj0uTg6MvLwSOJl4cJQd90acDDNQHuJk
fM2wsuKWos3gf3L5xRgZn2WV9sKyr+Kcyccsf6q0rnHd6k722LsmZutCLiej
ObacHNPlYo8eLgWmuHj+7yrfHyg7jesTG9uxfG3eG+z+2V9le2FiUBCfrWod
Gf5j66eO3bMm94s65X0bfh3aZcvJ5PD68N6nJavL/1x3v89duhj6B7FSkb+9
WfvT57dj2/7SjkqTDOctbLhY6x1xMvvGHy3Gq1o3xcmU/5vEybMcV9cnHY6O
I79bipPb9K119+Kkxbaosj45OfVM1uX90f9tYl7AysRRrvP3dsnF1sp1FrcH
71xcyuLkfZMPxPsHquol9bmPMRDzNOmirN5Yz3YsDnHq2vWdKkc7bb+t6Puk
dHQ2dxVxRTi3UysHE+1ME+MYdp9NtrM8NG+W7ZOR7fMEI79za3vwm9sbIS8f
jMz9oW9lfJ7ePVgORzMvTobTQozcESfjv4tpi+GiWD5msZ5lqSrfc4o7+7Dc
/hJfungTTlaOEXhR2g/GrDGGDzv87nDw0ZWztZxs4yhbH7L+b5N7m21455DP
2sbVmGVcH37t3ac3g15GnFzlg27zXpNqZ8Q2+Dq/+ePG4JMHFweXvlgpWZ3f
LCf79367L8/JbesOz04qvkSOjiPcq2cHExpna56TOV9xsjXl1pzFmnDyyo2z
U+Pq0XuwvXzSKneVMdcxa+5wXx/03qRj/Gh+E7NyLW36iZixP2k2dXz/TiKd
UIonuuZkcrG9KZysetDl9fv9Wx28jpM7LiDKwRn5AWHl0x+/fyx8XLUeufpO
L1wabG0ttyo/jXtI1X3aV9hN4/mU13ne9aoLox2xOoOmfhC1BWpzcvwuijOC
z1gxhViu9ktlzXd//JhtnpvnLz8fPH66Pezvij7i22/btRXz5tneONnkK7Gc
zBROZvwYfGc5GX3Fxt5eyckqI7TIcDJaZuZhpBgnxxjZ6i2swTfSJ8+Lk+ue
cY2FI26EOPnukyLnHuWjmA/iZJhRsS7EyecunBpcWjrdiJPlYy7OsT7Os7cY
JyuX9CyxLywn87+N1RyzHB0H18d7V926dmwbTClOjrUbPheqX6eLHAxV7SjL
4GSeJx9n1K5jfQh1WgfF+qUN1jMtn1AX10J7rfeQun1aH6b8uYpjbcfLaXyh
+Eh82ZaTbMwoytfG1dP+8N9yDKZXHx50xsni7jpO5rgcjxgt2q6JLjDX0KFy
H7rOWdynqSy6yFXsTXysqeWUqu8r9jza5hop41/0xMq5HA0nf/y7DxppL/z9
ScV/oTzhNqu5mCXO2Ekyq+G1ZdHkWdVYQHTFlA3jRXJjdLKe/96m4yv3IftD
r6yxhnX7hI9lcPLi5meD9f3PAye3aYPmzbO9PTuGkRU/GUbmWzV5jy4+WAyM
DO/hW1Mcw8InN76/cLFiW7Ce/Kcplg36gcPDkv/gNXv/bV0Ub3EMjVvripFj
ef6a+jd3vlkLjEz+OcqM3BrkY2F8mjjZxryznHztwWoR7+LTK61zeudcW2yZ
7pl/X5HGhd8xztvH67Maj9z8iE2WT7dR9Zwci1OQ0mjwm4/BCU/BLowFvPRg
e3B+oTomf1b9quBkfStjDB/P3wd3plnNcnLTYytv1iycLD63XBGe78N6v8XP
jZPFdzYv+KHLE656V8fJXRn34NW3zcbJ9mFN7qPn5K78yqpfqodNxpfZe8N5
xfhXY2liv9l98c5y3PGU5WOWRjmXk/V82mtXGabqq1jwbdJd+DogUy70qliw
vmxUrvAsXJvb7qCZU9vIfbA5VlS3xclV+yFfj+Vj6ie8t7L7ceBk/r/E95GH
V8J+WSe3jObNtL1y8iiPiTgZzcWH924OPlq/FDiZdYn7Bj/ZeN/TdaCIZ0E/
ina5qjzFyWLl0B5m5JW2cR66qPux3M25nMx6MLLPz3x5c6HkZNbTddptH704
DLGUMXGyzz2Sw8niWXy4Nhcf7xaxOCFcHz5+sbDPN2790/wvThYXx/L9xe5Z
buzF2Lax81be6ur7Ud02e07WVG2PxkvQ1sDJVWOrujC+kdVxss67LSe3jaup
soEz23Ay2xJ/jHx3KmON/VM/qr7W8rLVB7Mf6ZZfmrGbdd869U3B5w7RcSkT
cRJT9v0yojFsarpPlA/aEuJi3dgca7E5FnVKYxn1nV91Uf1fV+OeGLN3Uji5
bXlq2vTexNoC7UfjXPXOpvpxdJSniWYdvrst7ZwLRvupqTi5bh/nr10/lj4+
poe24/luX5/MTxWLM2J5TM9o1f2gXOX7TOl3+86Z13edFB/LuOcvXjb3z/N+
Tj+Qw8pi61hfIJ8y2gt4WlqXWBlznrCyf5e7trUwuP7o3JiTh1P0AbmczLHm
zbS987LRKcPK4uTTd9YmOLmqnMRY3HP0yVXrigUXdxYDj6Xith37czDithyd
vXga3/YkKy8My2tpint3Xoz9oegtxMkwJdoLjPzVrHtjby3k5ru6XeQ6rBr7
6BlZFsvZwvGlrbAaDjQYmBhVnCzNctMY1E1ilOu8ZvWnKT919T0bc5TVxXpO
PnXhk6Af5Tfl88g9j9xxx7SPtJMcD+0Fzx7b4t8k5jJ6YjFW1zGPc0ycDOvx
TUl+WfleY1oBqwshvgIxihXzTeVox8PwnslYS8Zc2nukcfNaV35ZcXaqjxUf
a+yR/DfiV8pR8fpmKZvU8ZtwspZRLjbPGfH8eHdCY06f10avjR//pMeAqzLl
lGy7vWcE1VNp1fU+ZnVaTe695eQ25zdPTtZy9Be/OvvRxHl5prWca9vNqmdA
z6vi2qTGufWV27K3OhlhY2ttOdnHgKuqd3Cy2kV/j8TJNjdr7B7FvnfwHRxO
/jTkSj439TvL686N6bxZtm9GJn5y8fzsBDaGk8+uLoZlaJTFVeLZOp9rHSfD
1OJkGPNm5D7kjqvo2qwmOsfgZDHrjf2twfX9x8Fi+anlV4aT974t/MosI04I
jIxf+ZPlG+X28LI4Wf4Kn8/w5ii+sj8vz8kaP+k5WQwsTiavtPhZ+U08J8e4
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
ycRVhpOvrt0J2mUY2WqUvWbZxonT/nI01viWYevccsZgZHKY2/jZfEOQv1mc
vPnNbqHVNJxbl3PEGnXs+1cVGp4IJ9vv2TFO1r2D5fSbzdfmtQTWJ2mPV6fJ
iC2v00Zq/BrM9PnB3iim2t7g+9ePpjjZ+j4VGyF2TJVH6pzqOHl8L8Y6auvf
ExfyG/o4Ytup3J4cPhxcuXE1jEdExwE3Lu1cKnmYXOJXt84M1h9fmzBYGn8H
9enw+e7EPVQ51cWDtvde7yzjOj/WKb88GuvOu24jUpys6+CewQqxeBZ6Xyrb
laNJzo8+y0NOfpv8yE2M8pKGvkpbcZJiLMDJp6+t9MYAaJRzOBmNMqx85/5S
p5zsff20U7QrR6M8SGLl4yhr2hPaFtoU4lI0uUbWJa5JFUvG8qnNw3JZGT11
LiuLk/XtD05+b6XwM8DJ82bdWRhZnGw1FbWs7PKNiJPP3P0i+JHFyWIhTJxc
jNs+mOBk28/CyXsj5hAn4yvCjwlPeS1CUy1yipNTv+eYjUGc2t6z6IMnd0L+
EGm86/zKxL3QvkP7sb9e5rvGxMlnP/p1MT/k4xQnp+KGzGKKsVxX5uJk7iv+
7ODLf71Z9OuGk3PH9qoO1I4PdLpFP+7Nx8XVvOdkuw0+0Fh8z7b9h2XSmK7S
Hkt6Zc/J8CLj25hnavep59g+b7q2Ok7m2um/UvGDbZwAX44+Twv7+DMnT9Y9
q/G0ZUzZ1XGy1peeRfvTtdjcXMSAC5r6CCd3ocU56WY52etabBnMg5OTvu3h
vcrhZPIVM66zKQdIl1ynv2A9xVR++vUXM12rjbVgr1tsLE6mPWh7jNxYNT5O
BW3LLNfGWLYqnpz3M6CyidV/b1Wc7LVw6C3QX9zZuxbs/rAsf/npsN58ejB3
1p2JkeUfVk5qk3OvnB9Of3FlNcSDs+sXz81OWOcPn++HGAwHz2Dj7cHm4VoZ
z1c+Qxt7jLgYaFThYVgxPB+vH0f9p9K2WkbG2E58FPrmDL6t06/bPHtWW9DE
LOvFcpPw7FNG4mTFS7bMm2JktAdM8e1SfiFmm9NhkIsEVhYn827ifcniZLZv
mlMwZmJkxYWz+bJtmWA6d8qAemM5OVaOuWVddc+trsG3y9JXeN9SbJ51rfbZ
c7Jtd6SpS557xffeH007VsXJTGnTvVaXKZreaztnJq45xcmxc419uxZvWSa2
68e2i3EyHHx3lI8V7lzf3xys3DgbzoHl8DLx37gu8okzrzEwuhbFxVB8EX9M
DA1Hm5jCvhy60lq0tbpjV3Gy6iRx9+ryUv8cONnWjxxOOCn3G51yjGPh4hDH
fbl4x2TKcua7YgXxscb6KffIwX57DUEq/ymmGBdcQ1NOlrbs6Kiakz0XM6Vf
ggtn/dZSxcnz9idT31U2ud8E8Gelrod+xnIz4/nEydTFN56T7Zg8y8nyF5v8
e+JkpjbmBZz8zq3twemV7ZKT6bPgOXFyKjdaiPs24uQUH4bxe0N+hJO5V6wL
X4mTU/pkz6gxvUCVwfSzcLI32zaIk/nf5hVJcXJsjJ/lZHz2tx8tBo04Ghjr
T7b5R8TI5ISxzDwrJ7O9YiwrzrLNSyJu1rpMLSdjaDP8PfRlWvU/+0uNwUzx
n/yIdrze1HHdMs/EVpus79/WXx3jZLtPcaH/3eprtS/pKcVCYkXaeLGx5eQQ
D95wMvn86E+r+g7LSbHysJpurWe39dvgF+K4ihFs4yxPHm83xCdjXjE91I/a
+Bhej5Li8fZ1udgHZWzPm+ks++3SVF9t3kFb/r5MVMfrOBk9qHKj2XiJuTav
uIRvs/n7GevHxcl+W56XrlhZnCz/GvqLtpxc5R9QLD9xssb01m3P+tLwi5Nj
x0jFOGZKXGNxchf3zsYRJiaG2meO1YVvatY6pZySqXdFX/dWhn14ipM1zlqG
H5ltbu7sl+9tb6pZv/CED9n6mG/sT8yX25kYi+Lkc/e3BwsP1kLf+OJloa2A
bTcPJ2NzKoYCFmPA9WfPBk9evx58+d13gR3xPROTjHx0sBV6C3GyfNGyItbc
48b6Vm9w8vrBcqNtyv5qdG1cP+XAs66xVpyT1RLqmqviwtlysb507YPyESPz
G1rl8+f/ZnDxwaXB0vZyyclMfd5sxbjgPs0SS0/jLS0nK0eJ4sIVZTTdPhQa
9rRuAm23f8/x70Ro3hmrmNNG2DbAj3uPmd3e5vPgf3Ey6/nviHV5LmSek8d1
cPK8xclMf/wpzcm2/bo2ytnOuXHuMQ2Czbldx8kxE7tXlbf/32s8LCdz7JPI
ybnlwfowp33Oc8zGmq47R8/JTNFmcEzM+9D1TlcVJ1mcbDXlTc7fx92wz9S8
/fFvuvF8XLh0YfDLpc2SjfFH5WjT6I874QUTX/mda+sh9kXVt4kqE6fZeqEp
yxnrJe2F1lX+eq135YEdBzX2UfhjoTGuy/+xOuK6vkycvBL8Rv0eq0n5M2/f
tW3uAduXaZn8yrH+5pJZBifT38ybcWe14Bc2PmHpJ7zV7Yc8I7d3VkbPcvFM
EvMi5NN6sRcYWXpUvs3DU9IPBEZ2PtTX//zPwSwn49cN2o1nk9woThYzKi+J
+lJpFHLbodZ1rtRqxPer2KgwCkxoxy7yP78TC1l+8jacPOGD31ub4uRUPGXF
voBlu+BkbzC45eSYaYxfSmNsOTm2DsdoysmxZSlOxvDFsY6N5WX9ycpj7X1q
uWwQ4wjPg+Jk6tKPP419zGh01T6h5aUNY8r7qzgZq+Jkz5tN77/l5BTH2jJW
jAnFj2R66erHExztmZHyxT8GzymWht93LD5VzvVobCGsyb45DrHX6HuV9454
cKl9sr366racrD5f8eFSehHFNFE5iZc1FtBzMrp14r9hOeeQy8lqZ2VFHNDJ
39UH+zGzf+bmZnb7+tnBPyyO8+aJk3PHYh08m52VPRvAyviV4fcm18J9JyZy
jMd83flspM0SJ6sNhDPEyTy3ipNYxcl1Y9D65FdxcttcfLOa/Dj2f/+7TH2Z
XaZ2FU5OaZXFyRuPFwfL2w/eGk7GxMjiZMvLOfuR7kJ1m/r81eFeyDELJ8Ot
8JJ0yvAU/uSSeYccDNfJhyxO5n/5msXJVr+hcXw+ZlqVNrjKmnKyzcWcOo72
Ca+jvQ6x7EacDBsyL62xOLkuj7XnZI159Jz8uz+cHpz57X8YfLT0qxBLGX91
HSen8o3UPoPDayDOHxbGXJoYdDBseU8qYvNVxXcI+bEr7iXHwE8OK+vepO5n
Didr+Y9uHdvfe04+fD5ux9swZ2y91LcwGAn/phgEf7LVh6U4GR9NbH99jEtL
mXyO1pevPKrkNdR6Nr8f9xLW450bYyyhYsfpvsCxxEuGH/ZHWpam+aY5H8qC
to99wZ1Yrp7gcBS37d3RWCquK/bduOr4mqY4Wfdc9czHKxSry8dfcHSck6u+
T+eYfO+Us+Lm2d84F8/JGhMpPTzb53xz+bmb5WS+Y7cZY3j+/uycTP5qm2dM
nPze5cUQLyPnPFKM5ut4KlcUv/F8iVPEycrD7J/7Km2tNXy9fdZD4sGtJMa5
921cl/8+6fs9tbd6Jq2ei/+liSm+TcdZGUZ+/WonTOfNuJ28F470FfrfsjL9
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
xxeaM36QeqhnDz2v52R8y2h8Q/zjiF9Z+botJ4f4Iq6s4OSF9eUoJ3u/tRj5
pvEFY7tPb1Zyso1zgfaBPNUhDt3mWJssTlaZ5/Y3Vb5m+1tOzu2pfWT4Kap0
t0HvEOHkWL8Q6o7Ry+X4wnLiNnBcfCFVnGxzp6Q4uWnZ5ZZvFSfb2CBi5e2t
2xPxmdWmUx9D3EKjZ1DfqDJlHjambGE9cS1sqfvI/vCT5pw/+0UDyfqUkY8J
0pcpfoXKj7JRO8t5UB70YdJCc306P8/JfO8ono9pLbI43Ndxjuc5Wedlz/Hx
s8nvt34/npNT5nUisbqeKve691j/DM5y/04KJ8s2N6415uQcLs4Zv+/X1Ty+
59sba1Nl5XWu4zoav4dN/fVV40CPRu+GKU7G4Npi3NDk8y+Nc+ze7zzhW/tO
MHQX/A8rWz/1vOtIVXnoGu09Ufxafb/Scns/7LuP/d/e37eVkyfqv/Epw8kw
clW5Uz7iZO1DnIzvg/rHtx6WiQ+IGxfbl+VkmK+Sk4fGWEHloyNPB/5ixv3R
R8DIxD9W/WbaRHNrzeoGmmwTe95jba3N/6HcecRvSHEyZR4rD19W6JLRXcTW
jcWtlq6Z44qV4WR4N8WilpOZh49jnFxXBjJynse2sfXN/8740Eb3s8a3S/2p
i5chTmbej52yyywnM4Vr/LjjWDy5lP/L6jg1Jb8T+grf/rPMc7LfV1+5Ify7
A8eB5aT18OO4WA9/so1xZjUh0iOoz2M75vFj6ls8bQ9tDvHbWAbn2ndz2O7e
l7sT9/Dd0bdqxUpmW+WIVuyId5cLTu2Ck5QHO/V7FSdzLsyLj5nX+Dn2qfeK
r768F8bukQtcx8zl5FR99+coTj40ficfE85r3FMmnbJ97+njnWTWfR7He1IT
O3qxOdjZvJ4dmyrFxbnb1+0vLF/criw/z8mzaiv8fqfKyOiULSfbnBjiZLUz
YuYUr8PDXKs4GTt9985ETOGlnXPhePPMJ5IqD9oNTO8BatfE0Gov/HPKOn7c
TOxdh9wi82bZvjlZeffEyeQPkTa9iLky9uVRPviMz3y2X8ZpYTv8VPgiLm4U
eijlHcE8I6d4SLHUUoxsOZlxZ/AcHCtO5lst8YO1fxtLu/FzOIrL7PNNpvYn
fUVubLpPR/pe2NjmmIb7uYaqMojpTaTlFifjX2dMH5oZz8mewy0n4+uGfav8
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
ztb6pGjLpSvWu7iM5bRZLPc6ZfouvcPDUMSxaMvJbNtFXMHW92XIIl+sXiny
ph9FfAYzcLLVEac4Wb/ZOM/SWPB7FSdbbaNy/cl3ZjlZ47/1XZ3l9p5aTmZ9
8ohpfLli4cLHbTjZl4f93zLcSTfLyXBsLNd1ExMnWz6Wse/G9di8V9n//Trc
P6vBULs0S1tEfibxsUz+YOknMFixOO6Yk8m/R/9HTDg4uTifIt5kG06uug7p
/vuqI74ui5P1viBOln4ppZWy2qZ6Ht0b/FNNbsh5cnIuL2scn7ZVHhE4Wf5E
2Cn2XeDRk0LDpN/IBwcnw8OKQ0KZk2dZsZjhI8VVRr+sOGF+32zLfvxy8pGI
74Lut4F2l2vCV1wVz6KOk6Vjtn5lHzsZTrZj+8hdN3ENw+3DNj99WRmHzXMy
fmTLyfZaY+8KIR/21nojTr7y8HY43zujsQriZM61KicH1iS3SypfozfPyV1a
Ttubq7nQvnybrlzENodabFv/TdJunzrfGCf79s2aeCYea+54ORn2Q2Obe08o
P+IbXX14cKycjP3us83wPFQZY901f3VzPB6W/7eeXG9dltS/WDn5MovFS4kZ
PC1Oza3XnpNVT9gPvGzj1cd0GGLio5G+XJpivjXy/ddzsvyJrKvYBcxLrypO
ts9cU91qjunYfT0DnZ7r8J2THNf4ecXJFy5d6EyPAR9rDN/lT5eyzyvlq7d2
dDR+3zoycRBTcelzjLgTMnGy1Vt4TmaZOBke5pphZHGyPY8+84kot2idvq2L
tpl97HyzGq5dcZOY5/r9mHLfxzRj0pM9xi+HmcvYcDfGnKzcNWdDnMD3ovEh
0K2SA0/tSahf366HOiRO5hspvmT88jZniQxOTvGSfNB+eUqLkGt1nEy/xrX5
5bYNtoxsOU7+9jCe1MSKhjs9D4uTq+qxcoiUmmTz7HgehpP9u4E4mXn6IWLG
XXuwOqW9WN5fH7YXi6Nc1EsTnAw/69xfhfzuidx1DVlW30obPddz9CVXtUsx
NvB+kCpOrttf3XGq9hNj4dS5dlFeue33LJwMVxGTAl6GtcRs8lkyJYYV+4Kj
aYuOg5Prxgqx3vevm+UJJR9LHSdjcAXtLblIquJww8mxXA0599V+B1eZH5oY
J2JpW5dsrEJxsr4BK2e28h0cOu2xOFl11Pqu7bNlv8vncFmu2bw9J11/4Y3x
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
A/GMLMvhZNniKPas9y0T82JhaSH+LuFiy1mfMufMeM4c3cjMbUSP4/Vy/Mrj
NuJhiF+mdW3f2eQ7bJWPLXZuMhtX1P9e971ay+y3O/U9fd8/fx4xXkJXwFg+
fkcjQb9tdXb4jqWr4D0aDuyak1NxMFLc/OG9TzvRKKfKKpeTxRFcD1xs64eN
A9GlWX2xlsEw0i3bc4lxsn1umhwz9TyJk/uos15bzbw4+TifnT4th5NDDLiL
S1FOxiwn57Bx1bu8rTO8C6mtqvtOUMXJ0lZULWd7q8MQJyu3897Tvblwco4R
B1G6M42D1XMBW+08ISfxtBY217h+jkFbm8vJlvvum7HN8+bark1x4uRPtr5l
cXJxPw5KToa5xJ/iZJgrVf7i5CKe8qPgpxYnp96D7JhNeDemQa4zcTL7OHpd
XIPlZHgYFsTXazUXnpN9vOSY+Zzx1iwjYzyTMZ88x9j4ZpJd63JZY3B0+Cb5
3WGpY9Z7BTGrxcnEiiNvXypnH753y8qzMHIT9q3SYnQZh72OJ2L60K44uUoj
gW/O+q5jnNxGj1nFyX3yc1ecDBfLryx2/eBO4dOEYfw1eM6izNDuXnqwHfYz
D06u6m/xr+fmbhAnF3rCsWa36NuLZV1+W1DdsWW8/3xSFyROj9WpnG8gdffv
uMy+W6q9afqsnXRDf1EXM+70x+8Pri2fHazcPh/dB/x89fpCo7KJxdpWnBrm
6efxySmHBf77WVkZ3zGaKf8tSGzMcsvT4Xvz671yzDnng1Z51vtPLLqVivfk
HNM3JJ49ykgxwylDsbLKl2WwssYqouNW/a6Ld6NcJJR/zjsV7TRt8M+Fk0Mf
4cb2wchFjr1CF4H2BMaEO+GwRy8OG/GLOAjdoDiZ/WIs03r4RAuf8/4EJ1u9
bhNOFi+Ki7kGH3dTnFwV19heQ/y5XQycnNJvH72e7APEyX6fMU7m3HM4+cXo
mZFew3IybEyMOHg5ldva6i6sTrmqn//+VTpmnHKW55Zhqrznzcn+/jRhkTrN
nsxycso/k3sNued13Azw6tutoL1gXrHcxCfUW6sphoXlO+R9Gv+G2mZpM1gG
+4qnaS/wIdtjzpKXr2D27V45OXfcnt7RpHNIcXIX95Qy9XnLY8yrqedku560
qH47xbHIPV99J2l6fVXxyzWNxdDyMefeFoNxqxjol7+/X8vKZz863fi4Pn8L
z7/GHYiTqXe8P+d8N8BnGovLKPYVJ/M/U2kuxMhenyFOVh/N+dzZWyo5s40F
rdIoZvMs+1EcGPhV38dUZ/WMqp4Hner+ZsnJ0l6Lk2Folnk/jKYlD2ZqdPy5
orl4mzlZZSNOtj5lcbJyU4uTU7EOPAtR9+Ap+kH0usQhg9Pw7bCMfaJvUY4R
jmXjF84aP9n6WGWqV/iOvQbCm36Pxb+QoWGu+r6qctA81whT22Pb/et8OXfG
teW8J6C75p5YXTPzVrMBJ8PLse09J1tr+g0qt27E+jEts+XFfJe+plT/B7f4
c/I+sNjvTfUVKcthavub9cs17dfnwcn4k/U/z57acc6FvhHepV249+XuBCfj
Xz5OTi7bw6GdW7td5rq1fSv9LX3w2dVrlZz8zxW6rSY5bdQn2phsbeMQVlkV
J+v4VfzpNUv2d5+b2v5e9z7s/dFt2oMUH/gyfBPyV7exK9dOlePxopy8tDm4
cPHDQsOb4OTrty4FVlYsv5xy8vdKnMw8flLio4uTY+t7Eycz9ZzMc/nb+zcG
Z1YXS05mXtwcG28gTiaOMG3S5uHtmTk51OnXO2XbkRv3xpt87+Jk+w4RK/vv
XxWxK3Rt9jc4WTlGYtvnsqLV7B8Z/yKcTFmu7H48d57tjZNHY/tgY/4XJ394
70Hw8SpvMjHdmPf6XgxW9DmHaXPgZLYlRhw8LE7mWWEZ//tcfNp/JSc7fW3M
YHqv71V8IX/+6FNjufmUtydlu09vVnKyGJh6rjagir/tNeNjl7Y4h5NLdhrt
0693YZTXOlV2xL+QL7ktJzc1lUkqv1/XnJwyzy0+t4G0mLH+tc5iTOO3b6Jp
tr5quz/bB9XtZ9bv9E22b8rJWo/4Zsopcn1zkmel2YLrrG7XGuzcBSdjMU5W
PxjTR17bOdOovlXdK+s7ko6zKvf0yxY+UcV5YBuxsj++9VvH8n8oplqdTsk/
z749libbajA/Xiu+y++b2Ajyq+eUoS/P1HPsxwm8LUY8FXEyMS0Y3/fO4hdl
nYeTn+x/FtZdq6ib5AIUJ8d07L7cda+ks2IZz67VKEtPYOviZJ6G+P5TrMw8
z6fsTMihNn5G9b/NbQ17w8r6jRzPs5S3jV+X4mTKYm1/vVJXrHJjWtXm8hyI
k2F9259yXWrHFLMAxsU4B/iMtrfOl4qvgmcQPx/Xp33c2bs2+GH0fRlemDfP
9mliYzvPODvlTUa3EL6lKWf7SFML890JmqGCqzSuT7EuizFuOyUnn17ZDr7k
WzurJSeTP9k+JxxDuuRZONmvA3M2Ya66eMIwcl3+ZsoNvzB1y3KyjUljr9tf
QzKeh9FdrD+ZjOFmc6HgX7ax53I5GT95LN5Hb+04casj/jfbD748KnwQfRw/
xsn2f46dk2ev6nfLFjFOrtpviok0tZxsfc0xjvD8HzteXTzPppzMGMmyrIdt
OW133XY8L/KhStcss5qt1PmyDJ/0LPqLK6N3eHzDxEqhj9E41+PgZI1LlBYx
xcnys2pcj75t594nG1e16h7HODnFnjltbeydzXOyYimznOtS3u42nJw6pq0z
tu/KreNvisHC+IUV/41Yy6cXLgWGZsrvxCnM2Zc42cYItPfD5yXXctrwg2eK
N1twsq+LVfVWz8DLVzvl82b1FeJkO9VvisFMGyRG1u+WqWf1D1lOrtIpcy2s
y7k9frY3VQ623KrqdBmnaeQTF5eEbyRDlqW9teVAO6Z95HAyNvkusxsYH42A
5eS32Z8sNv7FpeXgV9b/cLLqK2Px5Nux91G+UTS6ipUg36bGAqJ1hpHZ7wd3
DwIjEzMOfzW5AJWfQ7FzrU815ke9sR+POcx26A1gbPmRWQYrYjaHXnp8dXG/
qWd1nEw8izrd7e6LvZKTY7/DycRnI3+2j29RFRvZ28Q+nZ7EcrJixXmd8o29
tVCuV7cvhPtIzu86PUmXZjmZ+SJvti+r5pyc6xeK5eKz87RDnpOlncyN55pq
/2fVb4hXfjTnylR5nrW9H0OV4mR4kPaWtrVKO9DEKF/r56Qfwoej35WL2W5z
EjiZNiuHlxSnTfyWW9+a1uMfE9ea4uQmfuUqTvYaJF9323xn8ftRzEAfE85y
sr/mtsfydd9qvt5mTvYGJzOelCm+Yi3PZeXYvVBdFCfbHHCYbcNjHKj3ILvM
5l+Xnxr+U9w3cbI4ULwL+8by+KGt8BoMq8vo4juqZWV4PLYO1yFO9n7noC1+
sT6V68E+c6rH7CfWD8Fl/jqlX2a7nJx7rEP8TsvJMAac7M+H/+fNsn1zshhZ
Y/sWNrYHG3vFOw6cDNvGYrnBeOJk8iHjJy7jkf9Q+Onp18TJ6JHQGv7ui9th
TBucrDyAnpNjnAg7+xwkLBNjWk6Wz9VycpWJMeHkUh/hWEHLeZbqNM5wcuo3
rpdY0nAy/+fEgKvynXM+eo+0eULwC+vdgnzWcHJsH7AyWmXLyehOmPLOwHPc
l49ZsaRDHONRbMtYG6r8CV0fv0qfrHY6xRCpMfxVyzxbVF2TPw/bxsaOYTnZ
7iPFBnYfTK9uXgh9ht57Nc51lnIXJ0u7kuLkGPtwPdSF0DaV4+yKa3s8iitl
Y+f481TeiD45GbPXl1MeTcqvbp+6t3oXSfl621qKk7sy7d/qHrwGP3bNsbLJ
udZcvcDPwcTJdllTTo6ZWLlOOxeNkRO5P3ZZmbfk9c7E95wy396TrZBfDxMb
+2PcerQ4wY8wNfujD8VmfWasVjjFyTL6Vpm/ZranLVYuImnV9I0ppqnnemlf
Y5yMoclmG8Wbq+PkJtc9b5bt22zcC0ycjN93YX15PNbyhyI2CX5ZGBm+Emuh
oYjpz8TJKnem4mTWUR4Sr61N+VNjufrEmXvfjuPA2eUc60XNt0i418dEs5zM
fjcPt8p16zT6vAPYfNYTbdHBXrhucXIqDlytBsWwsteBcH4hR/XoHomTmXr9
xZiTLwROHn+Xem+Ck1O5+qJtcMa7ifW1W05O7rMHTq7SEKvvtow669i+HB+c
35ePw5/iZC2rypXiGdlyUFecrPUpN3K42Fh1fl88+7QL1gfOsnFc5N3Bb5Y3
wtg5tSEaVybNifYVvsk6zevLo8dTufpOrzwanLu/XcvK8HvOtffJyU3L3bJy
jvb9uC1nvFyMnavWy/ntpJXDSbUuOFnlXffOoefd3uc6Tla9FieLi+V/5f+U
jxXjN3Ey+mA0HOTiEyfPet3sB062rKxjxZ5HluPn9Tl8pZeQvlixnm3sxqoY
LfTZiqUnnRh9uji5jgnRYzSNOzVvju2dkyNxL8TO4mQ0BLAi/Zbij1mWhZN3
nm6HMXRoIEKdOXpc5p2Vj4Y4F/hT2cfS9nI5XnAibttwv5e3CmvtZzUMWad7
SvmGg697yG3wAoyM3fjqUqh3Vf5V5bPGKDOukWvGQls04uRxe7EbGN/rKXK1
2OQalN9ccZtfhXZkxMmj/aBR/mT5RnQ/QXcxZOXFncUiNrYZ0yfrm5Nh8ibH
mNVSsZP9vG1zbbtkY3Z15W+L+QEtJ3Msz4KynFyCVZzsl8XKJHauTcvY7+O4
ORm7uHEty6/MOMK+61xX5jmZmCF9HavpeUlbEeNklmlMF/M+jmfMp9323a3J
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
IVZdt7kbVbcVI1l8rKkve1sW9r0RBlWOjSZmv59bbfSp5Wm/oHyDYb3XRSws
+6zbsqGdtJp3roe2lPMUJytmAFP46NajxeDntpoLfA5VdZR9KuYyy9B4EO/i
yf5nJ4KTFTftJNlEnLgRL4uTT99ZG3x472ZYL+TqG8WMi7XJUeZ8mr5ecTIG
izPOr+Tk4b2Hi+E5cbI40uot8Cm3iX9Vec6Gk30+Z3FyalvFhMs57ni8ysOR
X/fCFCfrmClORtM8fl53A/P647MenAwjMw8ny3/M+viQee4tJ/dhsZgQfVhf
nFzcq3Fb4znZ+sbajpeK1pVj7Gfh0Zz7xDvirWEdskzIspPMyfa+8+6O1iP4
Vo7GfTDL+M3GJuO5kJavSoPdhpPHZTc+XtB01eS5sb4o+eS974J9Ua7+23iT
Oif20TlaBkptJ7Oc7J8Pz8GxOAos17fyVFkd9/MUG4c4b/O+Ws+Juazcxbu3
30fOvRIni+31riTuVa4R/11E/4uTY9eg/y2rx8rn+s5C7XMNS8LU9JV+LI+t
w+hOpuJODpeV3PDjZPyWUM+HbSccLE4uznM3aDdoS4ldh7EOMd0sK4uTLVtV
cTImXUgomxfb4drqtBc/Z0aWyY88cX9H3CxOpo9SzukUJ1tjGZzMdvilNWZm
skz2S0ZGl357Z2U4XS5jNyysL5fxzWK6ZDS9ixU6nNo2JsK68hOHGMjueaA/
0jZ2W/gYls/NcVLov4vt0TZzvZ6THzy5E/q4FCNTDuO2ZjfZfouTQy7roX10
5ezg0rVfhXdRy8m8o/j4dl1aKnZa18exnNwlr9pzrhoX1NU1df0Nvu6amM7K
ydTjm18VsQZDLMStM5W6C2vSfcO8NrYq54T2WDGQaUPQYvAbnBzLE1LXLzfh
ZK5LfaPiwvXFyTq/HyvWs9xZxclt9bP6DiwdLuWjWAH8nordFtuf/ID+uYm9
Y4qt/TJ7L23s3uN8fzwOa+vz13ZiwdiYvdS2s/qU/XmkODl5/B/H3wvEyYr/
orp+8GxSvyNO5n+m1E3/fULnYcf82bKx72jiZPo+6XWtXqzUmI04ua4cdE7o
LTQ+GE621ytNiXLv+PjIdn/yPYiT7Tmgx0ADggbDc5UvM/s/ug1xMqZvZ7Ay
Oapj1/VnTjacbGNgDI1zxs+T65NQDjfPn/B1FSfr+wm+Y3Fy0AQM35Wubp4p
NcmsAxtLZwEjp8aoY0U87sUQl6LJM//M6BoxnteqMmjCyEHnPXx/0HF0rYFb
JzQVu9mcjPGuETseuovdEItke3B17U7hUx5xsvQXsDLX0Gd8uOPKh9U3J1f1
Z2oHD55tT4xFbmtoBI6DB7xPKveYsRhovl2mna/aBxzmvwnZ42tfMOznB3vF
eAZT15vyhXiYstXxmcLb8hHYZ91y8ivTnyXt2qmSYcPY9Yr3jpdm7L3V63hO
1vhGrRfTLLw8muRIXy4a28T2lHcqLleMk9nWalRyOLnqXTL2m9jC1j87z+9o
Zew3+Zw6ME+ebjJOM2e92LXk7j+qCRlxchfX6tsNr5eJrWtNTGzjJMbqSspn
bhk4dnx9n4jtA52iONnm18P8O772H/MpV9VlzOfEDjqw4X4Uz5n2Axa2+xWn
wwmek9kHrMyYzH+8/qjkKvtsp3zsGOuRF5D5ldvng8HJTF9/N9l/zZtRT5JZ
P7LVK3tG9Ex4NPI5TGl1R//DyTCxtMr23WF9v7gf4mT1gWwrTta4Pe1XnEzO
Oxs3whv9WltOZkpsi1s7q4MrD7drOZl6XLVPxYVgKk625QWj+phvIV94IvcK
7xP47Hi2WTfFyboOy8l3VxcCKysvpji5i/ayC5ulb/O6i7YMmLLcfgm2mfXd
IBYD9yQYY/noW2Ial5POyTFjXF8RH26cU3Rxazn67psaq9iGk20+Dr3v61sy
TMq2lE2Kk/ld/nB9h5YfztfzFCdbrvh2FMuHfIbXvih0ldI4W07OKdOmsdjE
FrFz17d5y8labnWp82LimB+3q7qZei7q1otx69R6HXJy6jzsuLlYHbFaNntv
Y+9KseWpNt1ycex/uy9/TFi56v7pW7Ny48GqqXtjl8O5sLK+5cIMbK+2Az2k
OPno9V7p51V8KrZRXEqW6zyrODnXxMbkrcb4/2//9t+GeX6fN5ueFJvSXChf
35CTz9z9IozlO3o9rie2zomTp+rhSF+gWKX2OPRH51bXy/1p/Jvi9bKtcgHy
eyz+GLHZ6jiZPrXpOD/OhWNzTeJk6adDLhv3PoCuKBUbzpYRU38dOjfPyUej
MePJHIWPd0qN8fgYO1OaaizkMByuT74R1t/auDo4f/5vSkbmucspl760eeH7
t9GwVrV/dQa7VY2hr2tffdvWxOx341k5WfGU+ijvWa2Kk5sarEf7cPer+LXq
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
qvoGgJI+rOju6rpkZWVmPbXqzbUOSoerduicrBhgMa6yyuXPBH3O+aCfARZ9
vNL+294zpO0WPJ8vVx7aE/nnIif7+ONjga67M3BWR2KcjA+Z/N18ipMVQzE+
S3i9xOfNnE9Z/8mnXOJk2BgWkt9vElaGkcXJ8ik/fd58v8W7NXFbya8CO2Gv
v/aTNFahORYroz0WJ8ft1N/4fthMepRNnOwGI6MrRkuxdb8c+0qczPcqd0AV
R1mcfHx9u8qXff5Gzcl3Hozi/omTo8HI/B8ZGV8pxyOWxNreRs2iWN933uJk
96miZ+jb/xX32TkZzUVkWi8beVXSesSHGXIysZM1xxsf881HeVbO5c1uM/nG
H92/tn/65K8GzPHneh6fOLnLn9zG5zlOjgwVOVnL5jH+zoOTPVZXLHef7e9n
3mFjyus2KWvcs3lLB2GT6KB1b32RORneYuw5vXlhMK5da8xnFp/SLzByWmN8
fzw4hliNeY3VPPRuTlZ9JW3g1yPOlaaR9sP9ri22k1+r0nmpn8lf3fc6sI3K
7XndDpqTdW3Ex8zfi5wcWcbjXvRh5YPqV66DWORxXiRO7mq7KrPm34l/9Ul7
0Dq+L9oGXCytBZzMd/12TvY8sj5mu7+2TZ+BMc7Q971eFVOOeXZwMXb5i/cm
9iW7RgNejrGVMcXarWLs5u/N+MRgYXHy2aVjiYvFyVx7jPVUh4xDP3JyP0vx
LoYcy/WIzNzGyam9DdiAdggXw8jMjWnswzgZ+8NaOa+WOPmXv/ynZPicxYuw
Jb4gfG9JxzDkZGkgPCbEJDYJI1exVV9v6LbbYsm5Lz7lMJBWeVB26kyajywj
36tiy+QYucS5cWxyTsb33BWvw22S2Ki5d+jz4KqczYOTVcZJ1meMZTyXxnSe
cZtfBE6+/3jHtt9JHMm7DD7Fq4zPioPk+e2w0nupaMQFg5OpE/j4tfWNxLZR
Q4x/mHtLn7wAfTg5Z7D42ZtL6Twov/zKxJSmD9wb3scVj8K3beNkvzeLseXX
5bveveT26yatx6RtR2VwXccsua8neT+RuzbwkJ8n/Ytx1fWjarfuBz+o/tLH
FsnJvs9c3DM9V5Ry1qX1DpiTVSdt7+58HIrcyljrnOz75FzxU+v9DIZPxlmZ
//At85/n0PH6jH2x7drhh6vjVJgpLymf4mQ4JeYr7eJkPhlb4nssnZNY2ds9
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
HrWH9c64I32tFL9jHvaicXLpmsKB2g9jELyFH4Dn+D71IEbW+9IuTlY56ne2
gfcU20Mx96S7KHGy6zTFhXr3rDnrfdqA1hPHYxxL2qIuTha/iWtifX80rGfF
I5Dl/K45/2q8dorJ4X3QdQaRk9v8u5OytFhLnDxp34lsPImpnktammmfC0qs
7HnvYh1MdRwrn8/hESdL6xPZ1q+tyqW2pvcdaqv8Vi5416I4J7e964jxVHLn
Lj6nf0s7hg8XY8wRL9/+smJW9il/c5sfOX4nF7aXgzFAbMbn+JzWnTquuziZ
35sPlzs5ufT8ddhMehRNuat17xAn+7w2cfInO7tJY1zP+8swM/vk+cfXESdL
kwwbipMjB3qcB+zS3q12Rh5+X769XMVqGnJyNGdl12k4J8O7uVx/OYOTr6bn
x9frdyV9ORltMNteTnmklxucPCszxXtk5ORZ9x3jQx+G9eXkvjbJ+orhN8k+
nW/G28P8OHmRVtJdtJ03eUD0PLZx93qKMxG1Ga69KO0Hho2szP0jq7sY9Es9
407LyW3tIWqyT559ZZi3Z3Xs2TrmSstxsu7nLJceXjpnYrZRLsp8aahJzHEy
+yVnIefRV9vunKx3G84fPu+w1A9cMyGeE2M5J5/8pIoPCifzGXNh+HE4Ntu4
D1CM7JwsPtK+PKaY6inGsu5zfXO2qBgWqsO252g3n2MZ9zPpsefJyeKtNp+2
ODM33919wB4PJtdeXYuuPhDndeb8wxqDtZ/YN9vOV3FVVMa9R7dqpoUd0AWL
k7U/cbJ8zNFyDA1H5DgZ85hwzrfi5Ad7H1W+5BM/q3VwlKur/eWWHzaTHjWL
jKw4F+9+tppyYYgVuTfoXX3NyUO9RoqF4drlwM6548LJxM34+PN2TaA4uaS5
yHFyjpGjcR6e38TNOTnpmwftMH3P5CKjLeJXck3RJP5fcXLlZ7mZtp00tp3O
Hx9y7tjos/9y6jeHppFYhBagjZNzMSpyNu09T5zs9wTlBG67T8wjftw8eDpq
Kfv6H79+eGN//dKJiY6lfVfPV9t1/GP4Gd8r94ZcPLd4bUpxKtBK+P1Mx/I6
j+0Pv5Pvwznd89yVzmls7uKF10a5rDL8EmMaO586E0RO/sd3I580ZZY223Uc
elfB/+LkXL69rusbOVmxFNr4LcfJrimBdZVLkWsnVsZKvj31pcjJ0qTwW8wS
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
6DE4IhtNy5ax3n2dNl91brmeE/R/l994Ur9Bzvpoukr7gxfFyTEnMpbznzsn
65zF157PMW6ndxT85zlN0Tvgw0pzzobH5zfHSLG8h5wMV7JO8st2aG3i8cXK
8Cn59MTJnIP2I06uYz6aP1i5QsTJYmDyVGv7e492a383Rll1fHFyXa/Pdxuc
HNtQ32tf73/15P4vfvZfkj8stz+1Nemz4nX2ORCHzbnz4uQYQ3QWU35p7Z/f
eq6Eu8TJinXBtRYnt2ku4EPmaYrlmEdAnGXnZHKI+PUUJ8Oa+HLXd9drFi7F
g6Ms7ufJsbL8wG3tDDYWk2muqDg5PgukWHiDMq5sryVGZXvpoC8P9cvKTa05
js7J8mtzzMjJiieCvXuhYurIytHv7Jzs7Cw/dOpH4uTTLye/sq6n+nKub7a9
Y5SWcJpxfVKLnMx3/Sct/LyPuYjzadMsLsJmfX/r95rvAyfXvqTBM5XHae5r
52+91biHKi5cH04WW4iV5Wt01n1SyCHn18O1oBwDv7XmEKJ3dt7W/EFpeZ2T
PR6HfNTSfojbc2WR3zwud12xOBk+ZtxXfAvlGclxsrZX3cjX7Wyl3/G9ca69
xmvettxjfZTYt7T/3Lpt867m2Y5Vb7PMfUh1aHGU/ZmOc9kL2pHcdz0jJd3C
ME9M6Vr49cMSVw852WNCiJO9v4mTYd7cM0yuLegdLCZO/nDnRq0B8RjkrI/2
WMeDeSmHz8FDP6HvlHfk+66ODyvDzmyruBRVfI72d6Cf3t2t5zvOwsn3dvJ5
G/RuiPaiea+lvnHYnHsUmVn6ZDEzlp6xBn0HPyy6XNomTIy1+Y9ltC1x8unN
ioeZk6eYF18V3icopi/Hc07uMo6ZY2T4ybUSfbQKzsnOzT4fsHp/sp50yb5d
PD4s7ZxM3Ak+N+6uVX3S1qWufR9i5FIdd/mdnZNlPEMTq/nEO6+OcXLO+mrx
4hg1Ng73fE/ZZSVt8iI4eRGW8xG+KPbZtXML1V1g6Ci+/KbcHr0ep61/Pqfl
5NQ/B/fR+A5Y7Kh8yhzHYyF3cbIzK5oI10vq2NJNwMVaFjlZyzU3UH4j9197
XGX3TecsV9clTvY6ho/lR3ZOZhm/pRPxY0dOjvG4tF7kZP0vPs+Vp8uvS1ly
8wa9PhVLu6uNxP3Ms/3Gc9LvSvu7O9U7Eudk17KoTj0GRsnv7vtqi7nN/+Sh
qf2vw3ss/Oux0+hXV+4s13HVMFhTcYPZHlbOzdmDh0caqJ2aky/eXqrbO/uG
lT3vY+pDg2PEnHn+TCw+rlhjlEdPc+pUR3Cy2kI13txOtnV/daxO1LbEydO0
D3zIMLLMjy1TnJOnT7vnvR422x5FZhYne1y4+HxKO4CRxVaYa5el1xXXwckr
29spnjzPbOJkfjNOZuP3fVf5Qp1Pi3lF7t1Ox5H2Q5wcWRl+UszjXHuI/uyc
RVYWQ0dOVk4/TH5icbKekSMnSw+CKbaxc3LX8wi2tLGWtuPe3+ZzZpkYmW2q
7ZfSeXBtph2vVR/6He81bf2Rvsuckr7HK3HypPPcDsPmwcjTnuc8fONw8p2b
Fw+83uDZks+ozWDuabZrsxIno70Qq8pX61wc4xjrWio/dBsnK+ad8nMpBlyb
Pyhyslg61w5LjKz1nPso1yTz2OTrxF9CuSMnqz6ePm36tlU3Xmat5+cYma50
nXPjkvah55US34r9IieXeHFR74va9osWXO1kmuNzDuLkXAxCz+eSy1Wj73Xc
iK9H7cV1e6zD3LXoi5L/2PPTiUHhUvhYnHx3qLH3nCMy1hEnw8UY822v3Dnd
2C+c7M+n8n+Lk1lf27uOQv85J6d3wxm/dvzNeTonq45Kz3d9xiz/X6ycay+u
ddZ8Su87cb+HzbNHkZk93oWMmBfu84WTpSEQE0t/i85gddDuWAbrwceKxyhO
3n14t46hjOaijZOxK5+fTppj4rx5DLgYt5ll/jtyMv1sEbmZxcnNPrrV4GSO
7c8TzslXbldc6flUxMnaB3n0uhiZ83VOVkwLj11HnZV8zrIuTs7OfRzqPDRe
8L68y28TTZzcd5scJ0trOe9rPA/ze+m0sS7iuU5yXP/dNuaKidrW+ZGTK1Me
AlmKmzrk5PS/5ayOnAxnKV+eWJpP5bAWY5+/WeUr8djQkZPFbLm5eJrnpnnz
JU72e2XkPufkSfu1yhWZWvdoz/3nnOzHzvm5c6wWr23be622dUp9hGORx871
tH2PM8+215ZDzTm5ZG1lkCZgfe1MQ+eituV179fIy+S6Gy0Tf6IHxqpcV1Wc
B+9DYmJxseev09w7aQbEyblzQrcprk05F4asqzjIOhb3V5j7qfVFYtbwvpXv
HBMepswxzpvKpP0ln+DgO+cW8+S11b3qmT7NPK3Su5A+1/TpV1sNX3LrukNd
mK5nTpt32Ax7VJnZ48KlvNXr23WdcV/AaHfOyfouTobziJW89eVOHYuRPvPJ
zm4dFw5GxvDjcg9x/lI/0Rw3cbLm6en/NmZUvKYq5neTkzkWx52H7xFdsv+m
fjR/Tz5kmTiZ84KTKefb1yrdknMyvmW9J0r5wXtysupMfO45E8XJOX13m+9Z
VvexQd0pzl5zDvROg5Onrc/vKycfFevDyV1j8qP71/Z3t/vFE5yWC6q8m9V9
lHdBvh+Pc4Q2Y9pYF7Ma5fJ7p+byMdahD+beB7NoHj05PGDeLk6WXiNxxeMR
Yyi+nPMwzNbFyazDfnRMj7fhefuquq2+U375oOWT7vMMVbKY/yOyln/P/aey
xbgLzmPieH9n3YdVY8wFcUqOwZSvbto2NK+2V7K7j8YZOZcPPFpTU7GTfMqa
YxfbXI6T/bqoPilLfD5iPbQV9dzXwMjRfyw/LutKixznw8Z3CfwWJzN+KNa5
OLm6147m4WGs8zRpM8/VnKz2lp4zjZMjz8MoivUmTmZ/fa4XbUlzaOdx/eHk
X/7yv46xclu72xs+r+bGj8Pm1qPKzJrLl+NkTHmjYaWYV7qag7Y2aG/3ak6G
+cSn+KXFyczdu/voXs3I4mT8oNIRi5Ob/utxTlYMiTZjfco7iss/PSdTVu1n
9XbTl0zdUH7342LSG3M+MDLlESPr/JQXnPpyTj6zcrz13Dh/rwPl1XZtjNdD
jHtNbL2Le/dqwzfPOeZ0zx7v2flZcUCUu2Raa58TPtLcdcVOnnXe2jyM4x+1
vIDzMDi5zZ+MT0TsVnonjbU9T9F2L6R2e7zO7Vnaz7TXZtZ9lDiZmMWKu6Yc
fPDxH69WuR3QU4iFpUl8Yn7UEidrTp0zQi5ng59j5GTXTsfz8TlykZOVi8R9
0JPWt+7D/u6+jWOjT7IUE0LrR07uuvalOoucrLrh0/O+zLM9tW3/tGNOZ9u+
9D3Gx455ObS+zk+crO2cdyP7qt3Ea0OZxcq+jTjZ40iMvZcZfnfNhPLe+bnp
uCqD2gtjhmITK3ac1mU77pGKiaz++9T6c1xfx6x8hMcb8/nEyVGD1UeXtIg8
M5NyMv8xTnG9vMyMGYfNqkfFIi+/dO5a4zesXJrzJk6G7eBhnuFgZPQWtx9W
hq5Auo2vnlR8ikaN94jiZJalfjs4jpiRvNPOx9FcEx050e363euJXWnflM/n
IczDnxw5WeacrGcK6bXFydRPNZ7cTuWDBTCfb9ilTda5R04Wl2u/ylUtTvbc
hY0Y1MbJScMxeK7255jIybX9YmS/+dV/bdQFfMs7c495Po1NwsldY8NBWI6T
2/h9Hu3xIM75+8DJizCu35nz7/XiZMUvFRPDJxe39uqYqTkNbRsnsx94WFpe
xZwTY0uX2MbJsR35tStxsrNKWxt0n6Nzl2uL4/aRiXL7zcXZ6dOPIiNGJo+x
BjxHn+t228656/htv9vaWJeP3L8735fONdYn8wDRXfizTYmF3aJeGUYWd+s6
SaeQdILGye5b9vfBb11brn/Dydw/3a9ca5S+2hjjefl6GT/Yh2K4oaOo4lWM
jhnzgWi+nXTr7BstBcfxuBc+z0+5quVb5vPp03xda4wczT+YTx4A9I8+j0/5
T0rXSddcY4PHwviRk8vMnDh5OI+Pz745LMTJsDBt4KsnVTxGMXKKzXi3MnEy
+77/VRUz8NtvbzU5OegqFIe4z3w2N1gUHhcnz3ue19b969nlzrocO8fJ9FuW
OycnLdXQD8yndMx9fcnKeSI+d0Z2TpZP2Rk5zo/Us0vMZVJqE87JLw04WuYM
3WcsYEzyfPQyz1k0KSdPch+L7xGntXrutI3dijUQv1dj5ezHPAqcLP/lLMfQ
vFveg6otHDVGzpXng0vvp/dl5JeDK+FL5T2TwcxtnMyyFE++cL60Gfapdqq4
bZGTnaejP7HPueViCJTWc8sxqDNW5Jm2mAj+Pe43+r9K/T3Xr6QpSO8z/zHO
js7vfkx/5ihpY/tYnNMWnwP68HDcR+44uff57neNdS/fL+O0cvNp3Vy+kFg2
8ZU4mfaMZsH9rzClcr7DlnzXJ1z8p08uNTgZ4z9MnMx9UnMuNe8ShoWBNS9Q
nCx9M/cPcTJlcC521pXWuMqRvZH2DSOLk0taEWlE4OOqn+6OtSu/Tp5bZ56c
7Kz8ym//ueZkXVvKszLUf8li+9D8gcNm0qNqno+P79Vzz2QxGWFjcTI8zDxn
tMgwMmPTH9ZG8eDEXHAyXIfPEXYUJ8OA6Gpz+f5KJi4kXrI4meNMyiEqm8ey
kDF3L+anHp3LnWRifvosdSE/OXGTpcV4NPSp+TOfYic7J9NvS7HhGE+clZ2T
1f/cNx+1F7By9CmLkbvqpq2/phg5g08xsrMzBk87U2scyXGR4r2xDEZuy6NS
uq8cBctx8jzfvR3E+X798Mb+1StvZ//TvatXXQz6es6nXPInHva161PX4mSe
I859WuUb9TjE8sdqfrM4es/8wl2cLD+yx56Tz1fx3lS+EieX9h3ZNv4Xfbbu
646cHGMNx3LI1P6l5c7Vb44l9b2kdW7z2YqT/bevE/3c0ty6f75vv436YO8r
Xv54jWP5da31O7J87lr26Td+HqNnmp1GDmsxchcn67wUixij/bvvVXph7lt8
dw4WF2sdLRNL+zw6xVZCL6Ec0uJk8ariyXG/E1+n2LbDnHry//r8PmJgsExx
j6mPczdXalvZXm2UQ5/cd8kVwnEoF/f83Hsb6vsji2WDweB972lt44/qI8aG
i+2MY8PKse3F59HD5tGjaMmPPORkfvOJjnhaTmbennMycS5eX698yZGT4SBx
Y5PpTjViwqW4zVvjvOg6B+fkSfM6V8+O91LcBzQbqU0ZJ8PGLM9xsswZWXpd
1mU/YmTxc83Wz0bPks9SHsvTtZZZWooSJ5++cWZMd1LPLxjUC/ur5tmN/qvr
asjFjbyGe/fGYniM9dFCndbjtnFyNMVw5rtzsvud3cTU2r84uWTfPt1JFseS
ecUrXgSzzWsexyLLWJf1B8DJ08TGefb1rf0//fEX+1vb1zo5mfsnsSyIJax4
FKynmGPKP+Yc7IwqTta+xDf+jlxxpnwfqssuX2Vc/o/vxsvQVhf+vtk5udT2
nz5tcjL1AkuUNCj+3f2dpXOMjCy9ty+LjJDjbMV0lu/U9Qx+nJFfdlynEeuh
pGPtavNRY1xa3+Pc9elHqb0MxtHIyfIzxvXj8w12//FIn8y2kZNhZGmU4eDj
H16tNRfiZGn+8S+z7Pdrmw2Nht4vwoXwMevDt/IXw6wYMYz5DxYVw3JvIg+e
ONnnDoqT5f9O/Du4p8PIzPEjphvrRn21ODlXn/676/nq6Yw5ALjGrlF++NfP
Gs+tXA+YzHXjekfi/YDlh82kR9HEydIlw8j6D7ZV7Ir2a1z1G+4PbMO8PQyt
RZaTv6tymIiTYbtLX5wZcVyImyyf7MgvWumKYGJtA2MmrbT8DD04mfJQPv0W
J2NokMkNyDJxcklvUfeFARNzXsqXLU4mF16avz8sk/Ll0W45vp/7mQuvNDiZ
fsi5EXPZ85DAyTl/uvQqkZOlzyhxsuzp8+li1bf+Hzg5Z1o3cnL0R7vlODm3
z0ns8TebQ63P8VTvs4xd1dhcnis/b05edK6/PrqXLnPN8VHzF0/Dyfe+WB9r
r8d+/7Pap6Y20MXJyju993jkI1Yd4QNlHPYcIfqe42TaG/oPz02t46stird1
LXLt1r939vGC77fEyfyHDx5NCjmt+YycjH+devRcLfp0PQD3LtZTfOY23XSJ
hUvsmavvUk5A1XWXfrqtrrquBaY5kdHPHNeZpH+1cXI8PhysGIW5/fA/92LX
OIh/xbtiYrGyWNg5WX7lqGUW44qTYVzmCcLJSWv5jHfYVeyc5nPeTu2DRi+R
01GIk5U/5PreRuJk+aJj7AvlFIlc7HWvubR9xvtJnmWjiZP5FCdre3EybXRl
K58z50dObuFk5Rm5NMrHB9f28SfjG4Lj0OWKk8XHYuQHf91KJnaBw8TJ+JHR
CYz09KP4FpGT4zJYFHOfcoq7MYH/8N6jvQYn1+1lyLMeVxhOTsfM6DF8LHNO
1n5qX6hxcjW/cSPtl/p2TqYuiCENpxHTjdzcYuQYyyLHyXCedAycg+KTaLt3
Ns4UcxtOw8mzWB+mVT8vaTjEJ3xGv3RuX21+bzF9Fycrd2TX+bVx8jytTx6w
rnJ2rTMPTnZre48tljsoluZ6Xvr85MTbOSfDd7849rP9X/7q/6kZkPuS3kkr
l7VixrFMPuI2TvYcdSW/u+8jx8lc3398N+5jzPkcc2wnbm2ri0mffViXuiD+
r8pJ2ZVPmOXOyvD0a2uje5d+OyfzfWXrbrFMbeXL8XI09WfNU/P4dM7JfY+j
uvX937W4fb7ct3e9sY7v68Q8LH37eY6VXRPNuXGexJRuy5cdObkRH8ZiXHic
i4qHKx+06y+cqz2ntPhZnKzywsriZC8TfmXM5/GVWNnz7Om+wDE1H1A6RnFy
27VWbsD+Y1HzN/2+LW+uTJwc76eUQfMrxcltffmwmfSomjiZ74p10cXJ4jVx
Mr5Xab/Eycp3J0aEwZLuYMDJ9CP+y3EyjOiai8R+IQYwx8Vnqrk/MPKk2lo4
uW1dGBMfsuJblBg5tm2dm8w5WX5e6uHEYAwQJ/MZ5/A5J3O+HwznNca4ecr5
4vP8WF+MzLqyy8O8R3xnvzlW7tufD8o01nStl+Pkkk665JcWJ6MNSLkqBr8Z
b/W9ft57difNxf7ym83OcvXVfsR70jT1NE1svL58/X3jZNd/cJy2exH+F2Ja
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
o+/cA8TJ7gPGb4tvV8yJD9cZNMejfJfvlfwkmHJPM0+OfZQ0G/hYpbf1mG9J
dxiuiTh5VPc7NSfn2BiuUZ49cXJ8blnUuy5/TpYOXowRj+m6ZFh50mON2lhT
F3XYfHpULOUWMV8yMeGk7ZrnO3YfPyMnpxhlwzloMR+fOJn+6M9QzslsK5Zs
jYfeM7+c/hMn930GyK1H7DdpOp2T43k6JyvWMvx6eZhnxDmZcsHI7JvnA7Tc
2jfl5ZnikesuAydLv5xiXgx1Lml+oHGytBuPCjmGf+Tke9W8vkPQA/Tl5Lhe
1zql9bpi80V/ufvNSzGxo5XW6TpuyVffRysTz63PnM8+nExcMsZQll36pP3Z
ABNrwcBtnCwd89dP7hXzHuZyQjgni6f5LR28+wjly/bflGHvcbe2ucTJcBd+
Pv7Hh6y5jQfByVif96JYZNfIQ/qey4fnvjv/T8xammMnP33UWPi7BfnzczoO
33fkNl3r6FP1cvj6rlEVJz/75oux8+E77Irh2yz5hfVd8dfiHD5nY/J6EHuN
735OcK84OeaYxuBGnafmmY6eOfLPbLEN884rnge/ObY4GWYnT1/jfd4Bjv25
vCDeTpgbAyP/4Xf/0lgv5t2T76wrn2XuefOHbG2cPK9rzHwej69FPLQ4dyy9
+7+znGVHDPZrtO0BM3PNfV6aGLItJkXdHiw+W46XWQaD9o2n6pyc9vldNW8x
znuibNV4Uc4r+O6Fl1LMC+dkj31Xx4o2TnbNlHTMKkut0x98l6Zcz/7OyTre
1WHMGx1r2uuue4D8ZLPEcZinzTq+Kc/h6s6pid43zMvI99GWP3oW+6Fwsp/z
l99cS/P5MK4t8zKJD8c1pv/rnpi71rAe2gTmK4ozJuVk7y+a18d8P4zvYoYS
JztbiePkI3a9hPudnZNhAu3Lc5OI3XW8Eif36V+wMgwDkzD/hfsLn4rptmjr
GnvaYok6f0buiCwtXUuM9+wa9HjNYz4YmThZ+go9w/j1jAzsZcldE2dqxdn2
+BC1H/urrcTKzsnaj2KUwa/iSmmIxcbEHN66fyvpefEvi5OJSYGJjcXJqiN/
JpDmQH1PnFzFSz5d6y7cx6r9+PnmfDrMrdPyIifbcyXjAqzc0DIego8k96y0
+3B3/40TP6s5WXkK9P/fnt9Ivjl8a17+3DO1zkl8WHpH80OynOYCTn7rw8/q
fCCz2pPnWzUn0655n1+K29uWnzpyMhZ9stIq9OHkvjZN3oH0vBk4me87g/Ys
jXAfTj734R/qe7XHfPOcKvRfMW7Vj0acXMW3OZt8OeQMZ36e8rKIky8H/o4+
fc3pnaUOnZPxkc17btk05ZltrDpcTn745eb+rc3zC9n3pDFjuuqz9M54mmsw
63WjL+bidczCyaUysY+7j7YTk/fVdIuTNf8O9v5wmOf2/uOmvkHruX8wcrIY
69MHq/srt88kS3G6BnZ680IdR4CcTZGV5WdGlyFN9KQxWOjr72+M/MWRk9N9
98KtI8vJOX+wODFe+8jJWuaa7sjJ2ibGGtB/ag/OyR77xP3AXX1Y6yhvpo7r
XComdL/2w/vX9//j8vlGudgHvlbFavNYx4mXB+1LnKzzYr/SUyh+W6zr6BMX
J6c4dIP7pnzJ4mQxufzGJR9vzl8KJ/txxMkcQ/EsvF3IJ9eHk+89mj6+RZ8x
gs918zvCyWiTfR6fOBkTJ8uqWHflMaykT/6h8nKcv4fGRzmb52VwMoyn2G9t
nCwdRZzbVuJk2JM+Qh+SZhndb1t55h2vIeuLHuoZKZvuyzx3iJM9LkVJe+Ex
lCMna3sYmOM7J1fj6c1KfzF4PqFe4OPIydJenL81Xhb55jkmHE3dz1Jv7nPh
MzcX6ShZF4+ht6BuuvS2i7IXiZMXUf/TGvmll95+Kfuf8iWJjXu/R2opK/t4
5+1fJj/3H37/r/vHX/9f+6//4f9Nn34fy5Y1w8ronfFRr1x8fzhHcpy7on8x
sjLPxsxPiPOm0I/7fiIny485Sfvweyp6FPyPPLM7O4uTf/n67xfKzLB5W57o
UpwL5hd6zrmojYjtgDrSNRAnR/br287dH+3+1rheV9499xvW/uIhf6KD8fjP
UScNJ69dXanbE5/iZFiyGeN4FJuCHM9+zuxb70ZKmr1SHYmTuc8pD5/P88tt
P+Lh0XfKJP9zLpYI/7PvpK8I5fDnkjZL+YGezZZ/umuMwQ+v+YunTv4yxYLD
4OR7O1eTad21O5vJeD7h2UWsDDuXjtdnHt8PiZmdk/l8+exasnlcW/gYVsNg
ZHEyuafLnJznR1iPflI6ljj5g8R048+qsQ3Mpe0OubErHp5zMn2I2BXwfNRR
5FhZPnLqUOOEM7Y4WfrleGznZNryuZvbNR93cbK+z4OT3bjnvuicjPXJLbIo
Q3fxIydPbm2crOP+/bvP9//Pd9PlOx+7Ti2c7PqQl3/7z2m5z4XEB93QkRz7
7704uTruiEuWty802DjHyfxeuX0m61fyuL5tnBy1oHBI5GTY+N9PvJtigfz8
pX8ZnMv/nSz5wgIn//binbmzMsfHcnHzOUfF7YCN8RkRn9k5Wdyaa6vxE6Pu
IudO0radk31Z7jpN078UM0Ms75ys9WAycfLTYa5IrYfBynCX2pNzsvyW2r84
OZfHxn3vborvoJjGcDL3T9c6Kw+fl9t97XxnP+JkvVNBEyJ/urZhHedkfx/W
5oOVLYKTx/ra0zu1DgRO9jl8kZN5fwMnV37ytfp6oXWJ+6Uu1Md7M+T3nJcT
I5ODz/JVi5NXP15LuS+OLW9MdR313E4uPsVhIH6EYlV8+GCckS99cSbLyfh5
2hgZY9/icGLIFdvXt/fq/IDTGufC/U/xNeh/it+cM8W64Ll97/6tFOtOnKxn
O2mESz5l6VXk52WZ+JxjywdW6rfMY+Eak5/bOdn1KspdEvP86fiUc5F9/yjZ
j5zcvx6mWfcwbXnpd0Vt97w5WbZx+8L+maVXkq0u/zFxcRsn8x0tNWz92bVz
+xvXV/YvfvB+MhhbvMw67puOnMxv8YvyA8t8rlUbJ7vWoI3HnJMZ/9ELePyP
HCe/+h8fJR5mmbj53176Sfq9CE4WK/OJTxsdiHL5StciTtb6x9dv1bHNIid3
+YhzfSI3325SE8+4bqJv//Tyi5M9t17Uczz/2639iysnk6FZfmrzSaXbFSeT
60PxkuFZf7/vOg89P3ibUhuLWm1xssfTkE5ZMSoUg8I52TXYum6NOM4DTq64
cW1sPmOdq9rsu+/6xfRy3c2iTJzsfIzxvPn6az9prAv36z095/rXv32crhdc
FVnZ/fxTMeX3kJk5j5fOXdt/6cxanYPv7U+2k/3h8lbNye+vXdo//cG5/YtX
zkx8PWFS90OKkcmnARMT8yLFcBhycs6vyvXs0z6xLk6mPLO0Yc2Fc05uM/mS
6YdiZHy8mNdL5OSkedj88/6Jt39at3Fxsvt8eTZgLCpxsu5zYmTl7WP9lM/E
fNptnKy5fYvs+0fFNu6tH1nmE4sskpOP6rnPy+BULC5XLvkU3+b5+HhDvkV0
zNMcM6fPgYnxb2tOJrwMH8tKnIxvEz6BuTU38dVX/zXlGXadq3x2OU4WI9d6
0hTn9szYO/fIyW1tw/8TJxO/OOXMu3Ar+YtrDeWAk3/xpxNjnJxb71dnry2E
l8XJXevBydLF6v0ofkidc+SznJ80+phz2oCuevXYduJk318uP1FbuVyXLE5W
u1EOE9dIwGawsnLgcH2pPz4pPwwmTnZNBKb6gtnoC+iT3XepcS3HydW57IzN
syP+hThZ+8/NY9QzozhZbZ97n3NyrHf5hFUvcLK4u62vz8oXXeu4Bln2yuA5
m7wi4uSoJZFPjVwn4uR4vHjsWdny+8TMkZPhY+zszeuJl1dubSSblpOx6L9l
nFG+EHGyfJo5Tv5g+N6/z7Ho223zD/nvk53pNfbi5MY41qJHcE6+96gZj9rn
A2iuHOeJ75x7tnOy6gI2l4bSObmk39Y4yHx8dIGPhvOU+MzpneMcvh8qJ9/8
6/qhlyNnXLuknZ0DJ7dpBA/ufA6+DkucLKN+8SdT1/qkb7Jcc91YDktrfqti
RGO814xc3EfHjs4CjQbG93tfrDeuB3UlDUCOk/ErX7x4so7vgWbj7IXXRrka
bpxusEvkZPxrS2fe2j959pWk54Cd3Bc3if9T+acjJ8PDJz65uf/+5sXBmHQt
Hw/OWPk3757f//mv/2fyM8PRsPWi/Mwle+PDjQYney64vv2my99cijMXWVex
syN35/TSOU6O27E/7RPmdY2NdBjOybduraU8fdU41ORkzQEkthttyWMdE68Y
HhUn6/2wctuJkxX7wn3B3oeck3nek09ZefIUl0/PaWqLfEp7rDKh1aVcyjni
YxHfc9qJrj7A88Os8VLbtsefH+friZNLsf/QzYiT4a4qvt34vPyRfr3SRM7T
H/uiM3Ocxwcjp7riPvDtncTI1O2p8yf3L3/4QbK1T8Y1EKX7nfy3GHynOWTi
5FIMYeWpxuQD7dvOxMl1XgFjU3HyNDEsimNgD05W3/W2TN9Unj/FauNZgWXU
1Vt/+mnSXfh8PudkaTekZymdUzVn+m46Pts6J18d5lBq00nr/p/TP/9oizeu
F+Mc/CWtxyI5eVbry1KlOFmLtnOnfpvqr/R/H07mWtx6cDH9Vn/1eFLOxW15
N9wiJ/dpF6yHwcYlTv7ta/99f+nqqw3GkH+5wc0ZTr7/eKfByIqjsdfybpl2
hcYMBm5w7uATc1buipvs2yd2/s2/jvzM71+emn3RVkhvgf+gdD8/duV2Mq87
6WL7jIc5TYazMd/jfUHrsFxzOevYaA+b/n5/hvJtU9zhp+VyeJ9T3JSPvqie
wRR7Tpzs5+OcrHmAsLLiCyZWHsZ8U+4RcTK+ZrU952Qtg3fZL9vC1B6/kHXp
U5o36KxcxzW28koLLe0Ry8TJMvosrOz16fUzSXwe/adjTjNGsox5rm3xCTHn
Y3TZxP24ePGNUezX8EykWHDyTypebLls8+XkNmY+bP7tVebzNxIbi5Fliv0L
J4vl4KW1jXcSI+NXxu7uXUumdlXiRa6L4rXJX1niY7GiGBnr0iZHi3lyVS7O
Bz5EvzDtnDTXWrSds6zEyYrnJj+yczL8enr9WPIlY6V6om4oTxcnV2PhiJPh
Ykw5D9sY2Y81TX1Na+k+8exOGgMfF/Kc/FBM5++a2UXqLhZhOSY/LE5mHl+p
7lTH9KWUf5f5swMeTs8pd6/vX91Zre/XXZycdEzDuIFcw1ljK+ZM93j0GB4r
GjaWrznHyW5vvPezsRjTMHflJ2xysjM4Oo+26y1WhnHh2tdXriUfMnwMF528
vt4/v4h8zMbJfMrHPGmcjL6cLFbO5YBT3DBvz/HatGmXxck5jqb+xMmUU/Gr
oy5G2z592lyWm2NQ2k46YXGy2DI3p072YO+j/fXVk3UZtW84T5wsLbGex+Bk
zDnXOdlz4omTNefPz0XvaxTvwTnZGR9mhYMx7UPvA7DquW83y8ml69nWD/mE
PZyTnz4vz+djG/dZi5Or8accg1GMvHbjncTJGPUAK3tfvfuoisE4ytt7Y3Ct
2mMcuC2cP18QZhYnU0bFhBP3EasixT1+eKV+Pw8ni4vx1ep7yYhhrDl6zskl
q+JsXak5Wcsn8SVT/qi7gIs9r96snNzXF52L06oyVv1wxMmUL9ZH5OQY51jM
rv10lUfzHFW38+Lkeb6np27hY9mPnJznZHStLxon5+5F7v86qLL04WSVLfdd
mgu0yrpnw8ww8Wj+/emZOblPv3JOFsMeO/7/VRy6/tpYjpd3114ucvI7f/lV
0mbE/I2l/INi5aiV/O1L/y3xLCyreBbOybPmFcGPHDl5Gi0zceLIC4i1cTL6
5MjJUUczbRvO5e+TP1EaYedk7zN81zGfDmPTi5dznPzts916/962dBw4mXcI
zsm5GG7iUHIj725faXAy3Ou597AqT3TFtPhnnJMVu0L+eTgZrsb/TNw5TBoI
lZljiJOjrkScrBgbnIt8xlj17nTEybmcluLTruuZ036Lu9tirmkbzsM5ucoX
vVO3rdz7GuZUNvJTD/Mhjji50plf391LpmvHfbWLk7/9tjk+HRiHHnFdRiMm
3ICZ4eRRnd1JLKz4uZeDRpj/8C2nWA7Px+eGP316u5mTeu9eyreXi2eR8ucN
mE/6CsWASHmZv70zESePxpgq/qk0BYqt1nc+YMlcK9FlzslsI91xtt8M44HE
ukkxL07+oo4RF9mVuqnydnbPKeTcnZOjLrmNkdu0yYviZO0b1uh7DPn/Diuu
8UHZi8bJ0XyemK5zaZ15G5xcinfRl5PVj2mv/l2MTBukLYqNpdmYR7sUk0QW
KnEyZXr70ssN1mWdV17/lyrWnDFxZOXE1SvHkn4jaUIG/1+6/l7SZvB/ZORk
MOzrv096CRj2Tx9/MmSm03PhZBk65cTIrsUYcnLi9DlqmWHlWsed4eRJrl3p
t/t4/ROT/lfr5fqLONnnwnkbgZNhsxibTpys7/Jni5N9Xp3P62R9npM++3Q1
vXvw/2j3l784mZhZnMx9hPux6+MVEwNW5jsmH3Q1t/TtYWyG22N67Vh/Oget
Jy2I5zqJz4jKA+j1GP24pXFo9KyyY9eg39yntvuZ2L2ka4qcfO+rTxJDnb/w
u2SwMs9Wml/QXo4R87GNn+uhMOkRY+aYhw9OZt4evIa/VZxMG22LCdaXk5WX
OnLy1QcPak6O+5iGaekrbEeZ0SLQX31+4Ky65L6MjK1febvOfVPiZPm2WS6L
7OqcLJ+8a4r7cDJ1Ih1LnCPZ5efX+Fbat96fz1Kv1fPuVvYecPmLcsw7355n
OvkmPLfY983EyD9y8nRGXLirg745yTY8t32Z4l1sjrFxGyev3Lq+v7K1tb92
ZzvNb5rHuxHnhdx7e+UVZOxRjIDIye4bhpdhas/dcP7WW4mJc5xcH2sw7p95
5+WUJ/eNN/5Xypub2DhwMnyM1gJNcm+dxYx+ZufkecTMgJP5hPEV92zSPJzR
j1tq95g0yXG9Us5APqXjcE72ddDnipM1ZkffqTQYYjTxsvtO4/FhZTQY+Doj
JzuT6j7ivmSMNkpdNmK2DQ1O5pkE/UKu3bsuw+vGOVlzETHNBeRY3I9Lzxwy
4hDn+EZWPUs05x94bO4+/p2SPt3XoX8RxwKDj3/+83/a//uAsaQ7dlZmfY+N
Eo811n6+/TzxMgZba51D9+MeAWZOegubv/fmxzfSeA+3pXx5gzYNZ4o9nJP5
n89H96/tf/zRfyTLXRN8nV05qeFk/TfPPHnOyew3nkPSYM85L18052TNmVP8
N2nppQlp8+uiVVYeaz4jJytHddf5pGf24bsBzQFsY2RpMmbl5CqORyYuVsvY
K+vDyBhc8kPj5MMux7Tm9zi/JzTfX1bzxZRHY57vLKbhZJ5F/RmX7yyjXfOJ
DoNltDusmmu7PFdOZr5U9OnlOHnr/kY1z3fAuue3TqXYLfA9ZX3z8h8rP7Jp
K5yT41w/cpRU48t4fxInE89C/PvKiXcaWmG48qA4ubaW2HLMIZxmn15uzinN
7bu5lOqlrz4mx8n+f25ZjJGmuXOeq8P7jLYr9RnFSmYfzsm+rnMypljHXq7G
u4xBOxAn84lmIral9eG8c43PMufmyMnUrXRNun9IWxH1WrlzVV35XEj0us7J
uWtx/er7+1cuL+1/+MnpmpOJuRbXQ9eOSc9SXYPdOs5GqVy5cuq7xx8hfwhz
+TFx8sq51/eXTv4qWWLlFOe58gmLk58/223EGEv35+H87+az18iXzDVmG7UN
fh82J7cx84FysuUXESeLNfiUSQOhOoXt9D7xyqX3RzHu/3630Y/FyWgu0ufO
etNPafw8b25l//68fxh5MqS7oO5ow8pXLU5W3AlxtMdpy5kY2ec6uq881h/X
iPP+z+G7ZNZ1Tr7y+emiPlkxLi4P82ErJ/Y016jEyX0MRmZbtBfwiDShvg6M
jPkYe+nzk2kbxtq+8QamMfoMjHT30Xaa4zXPOCrFY76AnNzlG44aAsZpzzXn
89anNW2/fulEesafZNscJ5fWpaxoX31cf239blYLOY3pXqqcljEvco6TFTeA
uYjkryZ+O+t53IscJ2vuQ3zfrvrEd9bGyYdidvwYb6PByVOWM3Jy33Y36Xr8
9nava/DUnh01104sWNqPvsOY5HvhukUtxyz9GUaGL8XJp9Ze2V/68LVkzsHn
iFO4cizZ6fVXak5GW5uW2/poNYhpFv3ZsT7ayunPAeLkSgc87lslPzfnIE7m
nLY2L6RzEidTX+i46X/X97YSJzMnlFjcVQyYJif3GfvcxMR8ipPPLr1Sayrk
L755/VyKbemcjF2+cibZ8ye3Gsd/2JETS/5sn7t52Gx8mMyc9r18K8VM1nEU
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
D9vaepcuN3KyGDm3Hcukt1DeD3Gq6tg5uahTHnKy2FgsHTk5xb4ZHBPOdb2F
OJnluRwwMaeJnm3iHLpZDQaVjti1xLG9wbJ95mGKk6XNUGysxMFD3Xr13uR4
vb/IyWg0maNDHFmM78ROlcHFLC9x8qJjN7dxch/TfZDvi+DktvfEJR93n30+
eTrqwyn3wII4eZLz8++UTe9h94x/ujjZc5Usaq5xH85yTqP8aF968+b7l0da
4CkN3zEs5rHK+D5PLi6ZYjGLk+u5f4Pf+J4xj8UMJ8u/2lfTrlwgzsmla9Dm
q+5zrT0/n3hW8ZDb2oX7k/eGTOzxrvWsomuk8/F9pPznwzzU4l/FssjNF40W
x0/YVJxM3uz0PmjAyfTfXB8WJ6NvVgw/cTLra74hvD0pJ2P/cfn8/slP9mpO
zq3rWmM4+Z2l4wPGrww+7sPGfUysfP7Wm8nEybc/+8v+tVtnkknD3MZZPq9R
TH3YjHuYzBw5GT2d6lD+s8jJX//9wzEfHn5lWEacjNbI/xcnY0lvPpzDp/lq
jyw+0mFxsnQTXfnU+5j7mUt5+FK9DTlZfltpXXjmcDZsy5OnnNYxPoWul7TF
0ndwTfkdOVkcrWPquQZGVrl8TqR8s4u4Ns7Is7xbp62JjV1DgeU4Ga0mXMy5
wb7E8mL+Ej5jxlvlq4mMzP9XhzFU3TfHPYJ9LLIdo6GbFyfTB3ifNGv860Vb
rk1Ev9kkRrwL4sPNqyz+X+49sMrr69K+iMvSxcnxeHE/Ol7f54a+7+YnYeVZ
OVk6ER2b8XT3cTVfDjsIVo7nI1ZG06y8gpr/x9wt5+T3rt/t5Vsu1Xspf0bu
s80vLCbO6Tuck0vza1K9D56dmZeG/8w5WXnIpetiferAmZ97jjhZ3IsWXjla
2jhZ/5Xmw6BdxmDl9O53MA4y9y+uRxlu3D5fczJMrfis4uRp+7s4Obce8Sk8
lpvHqXjt9Z8mVsYfOc2Yk7P7e9f3z576bZqzByNzP3r6fCtZyus3YOV3VyuG
Vs62nE85l9cGO2yuPSxuzmku4GTivCnugvsOFcusjZOZw8dcPvQXUYPBdfnw
2lLNyeS95jdz9T3m8qLjGMvQTdx91Bw/ut6Z9LW+nIz/Fn/x+u56MudkX68r
n7RrlEsG7zonK7ei9BieL6waY4fPNIO2UMV/HcW8FCPDnpE/j6LlONnncWrs
Y1w+89l6YttKV5HnZOqK5TBNyafO/2LtRZ7brJyM6X0290TeqzM3a1F5PeZh
8+ZkDJ8y84xa67qgwWjjlRwnw7AaY2k/er7yGLGae0ouJviZ9XPnHjm5bZ5W
37qU0UfYP5zUlyl/s7w9sy45cjJlIN7cQfPxmA3n/4mT/+2ln6RPlsOM+MDx
LTsn92kj8XfkZJjW33N2tfP4f46T43q+TL5752R9x+BicXK8Z+o3Y6ny6DkP
e/69HBfH38n/m/Gdeb49cTLcim4YfvZ1YWPyBF68cqbmZPmkJ9HF+TVcXl1J
durMqf27exu1jgJ/seK44d9lDp4MVv76yxv77559d3/tzt5EnNw1HouTYd/N
wRiyOYwDVcWAejMxsji5GYN6r/E5Pn+0Wn7YHHtozBwYGVva3K7ncvBJ7AV9
Vs8gFb91xTeGkfEtX109neKTnrnwSs3JZ1aO7588cyzllFtZe7vmZBh79/aV
A+fkjb32+XyzWpc/WZxMfLb1AVPl9LZ9OBntxTsrrzSWS1csRtZ4w/VFP4PW
pMTJXsbIyWig+Y1GeB45xY6KRU7WmIhWdNJYGeLkSXI2TmOz6i7cFsnJ897f
PObwuZU4mfsoGuUUH2rwnVx8ipOde0YsnafnSOniZGJvr9w+M/i+noz2yH0t
x1Bj7eHZOJfz6VqaqFMplnkwHpR8LW2cfOzCxsQMynH+8tndZHvh/f2R4WQz
tBfOyToHz9fRp53mfMTiYq3j2l/XCU/aH5QzpE0jojYmv5HakzhZyzyndTy+
5k+Lk9uYGN9yiZ2518DJmI4nrs299605+f71pKPgN31anJy2+2pr//zFpZqT
ZxkzyDmpGHbi5Jd//c+Dz/+RTDlAiFcsv644Ga3G9d3K+h6v1E8/WTtVx7xA
q8xYobk34uTTa8cGfPCrZJtD304zbuFe9rvssNn10JhZ/uRLFScvD+6NHrtX
c8nEyY2+NGTZ/yz4V8RjKSfPkJNhOJhw5YuLycTJD3Y/Sm33zs2VZNr3Qekv
yM9NXu1F7b+Lk2/+dS3NgXR9i6/jGvE2I/YF+gvXYCjOm+dVgY3FyFiunuFg
L6Pi2CluRhXL7tz+hcH+p+Vkxjz0mCnWyfM7w/vDYpmyy1I8l+0LcykHY9Ui
z4f6gt/wo8w7zwjvlSbhWr3DzcWLLZV9Hpw70k/OPlcSDs5pL3Kc7Kzctr9Y
Vs134vNK0j0t189k9CfaXsrV2cLJbVrVNn6aRnNOLL4cJ//21PmsvfL+yv7L
b/55Kk52Vt57PNJIwnSTsvqiDT+qDD2G4svpHGD6mF+i1H5LGmR/F6G8IXy/
/3g0xyqXy1ptLDfPRrGzfd+xTbkWQzws038e5yn3zuThV9tZRkZzIYucHNcl
HrXuTdSlOPnDnRupH3KOpfe/4uTUhoIG1H+35aAuGX7ilJd9mJsdRn7nzf9d
szGcjKV3jl8uJxMnsz3zELA3Tr2dWLk0n250Xbs5mnOClfVbnBzrFFZmruBo
3s9If0yOC48D58byw+bVQ2Fkcu8NLOXhM07GZwyn4UeAkeFg7MnzcT/j2PXM
MDOcrJweYjcYmWtIW/HrLE6Gqz+9dnb/g+U3GvvhP/zTpbzYufgLa59c2l86
N65ZqseN7dWZOJm+QD1dHea9VA5vnRPn0ndfzslqx/iW2+LplTgZzfK5D/+Q
nkUubv05Ma5zMsdo84/Cye7XhospB+cYOdnjlROPte1+DFfIJ827ZPVf52SO
677cgzTOK+dTP4rWh5Mrjfnx1D776GO4B997dDfxEfHE+NTce7EwfkjiT8jv
zHfWUz44L19b2Q+Dk7uOubJ8PJvDuoqn1K4LHfvdwsnoN8h/h9GPUtyUW2v7
b1+7lvKCJL3P3d069zW6+eXtC428yF3nMov/nvvs0maGDy9s5hn53CeVwcpT
ai7QK7gf1jn5sLk4srxzMr8154/v6Pudk1NbKfCYM6Zi7sZ3AeJVjxsXGbnZ
VpvPRKwnzhUnx5zZ3qY8D7RM18W3i5wc2ySs3MbJmuMhX7Ls4u2lZM7Jsq37
t2pO7urjqrvIydMY3I3/GS4WJ5MzWnpj9BSwcsqp+2QzzZUTJ58ZnNOVO03f
19rm9eRTfuujbk7uMviYuYCKvYGvWPP4MMVChwHEyc+e79aWcsANysCcv1K9
fh/n8fXj5E8HfX63ZmQMvyZ8JE6etW2NxrudxGjiuUt7t+qcIukaDP3HigXH
fV+cLN0GbIzfWZzMvBsYd2NjOVlqywP+c230++dP1py8fqXSgCQ9yKX36rKx
D37j85X1u49cacRfy3Fy2v/N/vPVuRd7OxUz9uVk52ViYGDOyXqOgHOlg4bx
+5TNOVnzAmHkqBFxTs5xGesrj3TuHZt/So95kPYicbLilZGPr013MUlcs3ly
8lG0aTm5qx77Mj8slJing5N5b007ZAygT+FfJnde9Cl3WWTlvvMzIyfDwC8P
+Pflk6cTK//6wlayxM1i5Bk52Y8Pj/GcQN5fj69wmPaXz7b2bz+4lYwcGGmO
9J2rDU4mfhzs7DF0nZNV/9GXoGvqvl4tFyfLR6y+WGoDUa/ONsq/qHkIkZNz
+5D/2NcraT68D+iTeHA5vQVs7HP5fE6fOFllaPO5eG693Hssj/0ro0zT9F9x
Mjys+XkYrNzsbxUnJ/2e+cj5fvmLt2smFifTx7pylLUZvCJO5jd8jm0OdS9V
vvpRPmXFvCB/nzi5apd3EyfzKW7WMfB5//HqD9CfTDybmpN391++uLV/f1C3
cB8M9ajlPXqMMdzHqngD1TxAdLien3rry506LjPHhZFhSz49/7U4me8wMmyM
lplPdNB8slzri5Oj71mcnNh4Y7nR3krm23PfatMKpxxWVj/ykU/TBzyO3iQm
RlZeaz6j/9g5mesOQ3Nfzl1b2J//ZDp/5hlFTkZHkZh6GKNYMXlGY9vNrF4t
x8uL4OTSHKc0Vj6v3q235fM8ijZPTo4xEpSrgvGcWAfKKyeNYy7Xh+sbD/Kd
wDx81OguSnEvJuXk+E5YuWDln8M3xrusSuN2KuV3whcJL7dxsmucJ42x24eT
KRvlcEYc4+QCS6Z1BuYx0/oY7cjLAI+Ru0PlIMZF8u8cAA9zTAw+l8G+lEGs
zH0w6WS2toe+pjsp/7VzsuKA/fal/5b+S3mYv85fC+mOPd+e4grKz+ycnPP1
xuvufmhxsmuOZV6eqLXQsTiujl/SauRyQkunHOfwRd0FY77Ge8/3yPfbX15L
lutfo/dJzW30W6zs7D5Jf8FOnPhp0lEQowKDlbm/waJPw3t29BWl+5pz8ukL
p5PuAlvazPuUu+IbYzEPCX4sfNg6JvdgjovJl/f48VbKZc29WJxMG8M+/rzy
L4/GgruJk1+9snv43HrAjCxO1m9xsscwLtk0nKy4GYmHjZFlivnbxufRxMnS
dUxSnur6l3NT1McIvIx/G+4scXJk5NSmB9zl+pG+phh6XUyMXzfmAFE8iuRP
vvBSreePnOw5sbVOri7T84viQgz+FyOXys54d2UYc06cLN8y+h3Nicvpp9y6
cuZNY22cnMr3gviSG22lg5MP2nTfmpe2YpLjzno8/MklVo7vJOmf9G+1mXjs
Nk7mN/nuiJnFuxVidcPC6C3wK9BneOYk34hzjtctnNzGyv6uP6chLVmDR5dW
K+5FW7Gy3cmYab0zV3v6Z+8mn7GzTBXH6nZ63x45+d6j3RQbTjGpeY/BPXye
jKz7pFiZsZR4v1wPxkquDXrByMkYeUjwKZPXj3hjzskw8iu//ec6ZzNtIz6z
wHge51ic7DqJqJWInOzPpmo34l9nSLGwb+e5TRRDVGUVJ7fpqbGcJtvn6Lm+
IsZ+83gu8q2zP5W9q3/FOsjpQTgPWDnycl5HtZf8rhiszPw72md6xzvkZNaD
jWX81vyuMf/PrTcbcUPf3Ty1/9tB37p4/frU2gviLsPKtEeOHznZGb3yPX1S
c3I8Vzh5Zas5LwVOJh7gq6s/LH/yr5cH/frCzQYzH1/dTn3i1oNLY9chao5h
phKXxuWsy3wxsVjSpO5eH2Nk/TdtfrfxPHfd2/Th5Gji5GjwqDiZ89X6SQc8
2GZaTm5jY4+L7L9Vl3y+Oejb4mRpOhTzIualFieXyuOcTF8Ux+Z8r+Jk76eM
K6yrbUqczDL0HKzPvemgNcovKifPMo/vMHTgs9gi49XByWLlaesy+uRLfNrG
yStpDt+FWqcvJta2fWIjd81Ryr0HuLazm+Vk/cZXit8bYz0+8YnPg5PRMoiV
yANBTGJYFV8zBiM7K6stsI9ZYypzLPS0MDD1wPjEM37kZMroeS/YzjkZzYDi
HuBDhpPPLh2rOZlP94H6NVCexMivYtinQ70T5w5Dk4OFetH6lAXb3Kve+cA9
4mSWsx11LR+zb8d+2U7s7pzs5chpHHL8qmOIZUtx4aImOe5XGpGumI/Vurv1
ceO67mPum9vo6urb9dw84q2Jk/9zwNhPnt3Y95x2el+u+BI5TnZehlvFye9e
HueuvkZsC3GyH0O6C+mTZanM336eLL4rZzyCk32ZONmfIX8I5pz865U7g+fh
Ub20cXLynQy/9+HkiqVeb7CYmzgZbua382WXoRNoy1O1iPuo8tmNxWIbcjL6
56jVECdPc7wcJytuheo0W6/DdcTJOQ2yGFmMLX90n/cJMngS3o2c/ORp1d/i
WOGczBiMryzHyax3mJz85dAn8KIYjDyrP3mWOl50Tu6SoUVY1L6JI3Vm6ZW5
1GVuLBJrwAArAx5e2draP725kXhPudBXAifnWLnrunXpbXx7tOV1LuoLW4l3
Ex8PODkypVgZPv7D2ih3NHoMdBldTEosFY8bC8//9W8fj3Eyn/Cbx0Qb+UpH
8/XF2tPmsOZeGDlZZSPXMfeylAMYDYxxMmMgPm/mmy1vbdYmVk7vXm1f8ivr
PMSnGPE9PJ8433mOgHcVq1jr85trhR4Efzoxm/l0Toah9S6d/52TOV/Yh3mT
zDfUfqmLczcqi75a98u6H1wMq3mF2i5uT505J7vuwv3KD4f9WqzrucDadNHi
5C6tl8rbpy+Lk3Wt1e7SdU2svLV/8/7KMJ7j2WFcqnZNobPr+zdO7r/8/sVk
3DOnGW/QdMLJ0iXrGJTLj6X/q/nIFfPl5mJFv/adB4Nn3w9+WJycGLmFkzvv
AS3jLm3GdRPi5DaDkdHlTcLJ1ZhVcfJBxVnGpOeN+gbPBa2250ZM40nn29IP
qc82Bi6Z1lGOPuVBbPR/042wvvIB+jpso9gWpest7s3Fhcs9T3PNVJZ03x/s
g3eXkZM1z499wwq1L7wQr6Ge/zm0g2oTR8Hmrbl4UXzLi+bkc6d+O/F2OZ9X
Gyev3dneP3Nje+ifreZF/vXJ9frdDn0AU4yLJ0G/2uda+Tpi89x2zsmwLnrk
yMb4dtGow8d8j5ycuJr5fRNwshhZ76MffrWRTOVyTtay9aGey/v6tJxMObhu
+E4Zn6ocZaNjwckcT3GtGRNZxn+arwErKyczxvrKYaR9PXl2O+WfwKesfTsn
k7uQuNOqa7jXOTlyfeRkxZ1mufJ9c27aF6b6ESeX6gROZntvZ/5dcTakI3L2
1P+x3aXnAqsjuLjSYzbvEeJkbe8a6i7+Lc2LmGZMQ4eMJjmXT1p+5Ooe3c3F
XfbG+yd6cXJJmwEr4+uWFlmc7L4qfmt96Y/7xCyAk2k7SXtwBBj2oH3J03By
+z3iZkPLoNhjkePObJ1IPgNMnLyciZtQMsYp2udBxFaGfTmPUXsb6ZAbzBd4
XTnvYFDnZMUhbo1pM8zfAp/mNMdtjOw5pRUfLnJy9PM7J/OdZ5DI4rGMilX1
+JvNui6iZoOxinlKXGflJ2FdH7vEybCx9NL89lgYbZzMMrEE+78S4k6X7PvE
0rNqLsba3wvCyW3vk/xcpnm3VOLkan+jtgPjyWf7xO7TbX4vrfv0+W6Rk8XK
jI169+/Pl5XOtCpHX58xn8QxiXoNGKSOazFgXBhZ5qy8c/92fV6UGUaGx/5g
sShynLyyvZq0Jdf3Nup34nBxo4zGyvT/rfur6ZNluXoUJ3v+C+qD8SYXG4Nc
cq5jPvHJzVp/HDkZluPYfCq2iHMy4xm/67zHA2NdZ0D+g6VZN82b+ttmg5PR
YTz75otk5HNTjm9x8jT+cLEy56TnNTjcOVnr9tlnjpPdnj4d11/EPuc66VpT
P6gH6kbaFtWX5m6TW7o0DkX2jv+rTD4HpRQvI8V3KGiXuF+Lk3M+LtpKKT7x
NPbWyVfGOJl7HmzbR7d8/t1Xak52nQX+Y+6rfJa29ZjLsU7/8d0XKQfKD46T
B4wMK4uRV2/PzsiMceg1lMuX+YB6zs5xMkys8YPr2hVfY3QNdybSZsxqlE+a
aeVcofzKzaF5dqxL+YkJQf/ReuJkYhijy3CtYBunUY+qk8i+fQ0+Jh6c/FJe
v8pZIkZOOT4G5WYdPmNOE805cF+txrfIyeLYpNEZvp9DP5fj5JJFTnbjP+Uk
0fqRk/lPuQXb2tJBtaNF27w5+SCtj8a2ZOhjuuJBTxtvg7g5777572PLJ+Fk
rd/UCox8Y8SFSznP715PhvYCu/3l9UF/qvKKtHFyYorhXNmrQ/9l2zmVOJl7
gWK6JTY+db5mXf4jHhT+3xwnO3ORXyRqNJIWIHAyY0UV/+hc4seKIbeSD5nz
jJyc6nbw//NvRzlTqRPGqsjJ+t/zkvAZOfn63laaf5f02IPjYIz3zsmaSymf
jsrsnCx+FiMznrKNczKf0muQ9wJDfyFWRsMsI68fvFxiVzTYrsPG18z4Kn+u
9NyjvHX30vr4oyf1tbO+NA/ehnm+8/Yc25gvjz5dcTL79XyLzslJK7D9ZucY
rXcjvkycrLh5aXx8Pl7Wag5lk5OdR5m3p/gW4mT55VhPnKzYyG3aCllpPXEy
puPDp+Lkr77uZiP3C8MhHJttq3cje0O9xd3a/1/aNhrl4L2D5rEdNr8eBidz
3td323PqsRxukq/3yfPx/M7OyVyXv/7t+tBPmM8hBydPe2+cNG9wX8vlGBEn
Oy+m94LGyVpXWgfnZLE1+gcszqkpjQPUYxsX5+JbuElvcXHzz2MxLjBdF/dN
6/xznOx+O/Gn93Gdp3SF+Ib57ZzsYyH3la7rUcXaPl7fUzFpOyInUyblqocb
5Od/EefjTWM/cnJ5nWk5mW2iP7kYf59Ygv8Y8avnLOvk5CEjJ4OZyb03+I6m
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
iD3Y+7BRz/Kp/mB8yZaj2jn5yvB5mLEhpz2eVOMpTr66e2HImBdqLrpy/16y
ed9L+xjjqNjXlz8axiqFCcVuSdszGHvli4VlIyeLURnb244b9b4Xt/6cNBhs
y7FzOoc4b0+sGlm4xMnwsUyczLF8Xa6T4ku4JoZll43zdQ6qq9Fxjjeed6U3
dE7O5R/hfHOcrHum5kAvog0cNfaWrnrW/bzI+uRF2qzXu4uTFes25lUT++Xe
6dYayQHPupahjZPRGshPJA2hjkF+6yqu5vHsO4PIybQT4kKv3l5Ky/VspnU8
1lrfua48227cvpDqi9wsOU6mT2tOHPfqlNd+qHmQrso5uYrBcy7lKn46nBM8
qsMmJytWm/w0aCNYB9Z1TuY7+/F5hDlO5vh81nq1QZ2zT3EyFmNNwI8XPr3d
4GRnYXzwbXHYZM7J5PX79xPvNrQsXfPuxMkwNL5b2Fq+5ZoFpvQp+1xC9DSR
kxU3BE7GcrEk3N+p3ClRv+8MrLyH3ndS/7F95+JZ+LquSyYPHQwtTq6YeTvZ
xl51v/r33/yPwT630zO6OJlP+X2Im+xxinN+5EkZWZx8e2t0P4CTyQWi94KR
k/V+g/ohZoWeC9r6quswIlPDyegvyFui+qKe5E8+bIY9aE7+3ZXNmsXELDlO
VsyKtvhr6T1U0MRdGfolxclrexs1I8/KySlGdkscpDgfD80AnCnmxXT/1Dxm
52Q+qzH07LBvNPUWMQ4F43PbO2320WDgrbcanOz8K+6VzuJyh1Y5zsVzTsaf
LK00xnn4/pyTrw7vC/L7s1285tQ5xn7SO9EHF8c4WfFCSzGMnw3n79A+sNJ9
fVGcfNTs+87J08Rji3FyD9Pgvjs3Lxb/n4aT9X/bmLH3eKTl/Md37ZysMYy2
ND5ncKexLlbiZK2nWGeT1BNjnGKdX7tzpsHKmLTFzsni1PUU7/VkigWmsery
F++NcTL7IfaF+ozuS4y/kZPlE5bfWPEnIicrp6jrLsTpzsm+j5Xt5VZefWNt
d3/1TnWuzsl9GZV8fr849rPEyuLkNM/v9d8nI25cnzzd4mRnaDiW8s3Kydq/
uNj9v2JytB85TuZ5xe8N3G9u3V9N7KoxQ7rwdJ2NkycdVzQPSvd7ygN7Kt6z
rM7TvXM1xbcQJ8e5c4k9Btyq/B1t/mRxch/NhezUpVcSJ19dG83fck5O3Oz6
42He7Z1bl2pOrsaBcQZ2Pi6N08xdFCezP/qXOPmH4E9OfDzkZM4XThbniZP1
nr2r7UVGFSerndOWroT396t3txucjN5H3DXpvauNkyMjSyMgTlaZ5FNmzJYP
QRoEGNE5OR4jxjR2n29uXedYMXLi5MF3GN735/5hytEWK5nysk7UKrNvGJk4
dM6/Oeb2/Ws/4mTdI/RcoPjQYmTM84jwW5rjyg82zsnck1N7GPB1ydcn7Z/m
8R91nc5RsB85eTEGJ8f8LfiAxZbpfv7w3jB+RP+yd3Gy9htjZuh/fNGV9vNm
g5OdlXP7ZX24/94X6+k8Yh/NcXLi0cH5ykr7jZxM3e1uX0lzluEdaY4Vh9I5
WfPgxLeVLux4HUPiuyEPOCcr7gSMrXU9T6n2BQvLv8x2uifIx6Hxi/2gpYDL
la/Z5wqKe/swJEyquMWKXUxsY+fmLoOHxcZ13Ljhdzj61xduTcS10lvMg5HF
yZjmC6qeUhySZ7uJ0T/+fC/pbHJtBp2E2ANOHrXBPdM+ribOhFfFF5OMK+Lk
6l3lXtIuw5qbKR5/pVF2HyycjN7i4cMbiVEwZ2Xle85x8jsbSw1Ozn1v0zPz
H3Zq7fUGJ1f9/Xa9nsdoFSeTBwW9xt8D//SJu+z1WcW13Ur1ACd/9umV/Vev
7I44+fvMyvjMYeSB6ffx1e2aYaW7mNWHJ/+jYpq5OSfjW4ZBp2FkjsE7vtwc
L5Z5bvWRjrapZZCPOLWjAfsx7sqvKj6MFo8Vc0XDyDlOpt25rgF2RaP8wdCX
6r7pyMmKVRHZVscWz4pvxcPkNOEY2j6neZYPOXKy/OrcJyi74rg5J/P5OJW5
OY8vcnLpGlLfbZzs915iM//Iyd0273x88zSP9z+paT7btMeelbdLnKx9c3/B
94te0+fx+7vnaY4bOdk1ytInsQyNaBu/RhMnn11/rYo3fquaC0i/VSxnvrvW
rn6n2HIc9FXVu7hz1f1k69QYJzNnDVtaOba/duOdOk7cehqHVsY4WXGK5QNG
J8z4n/Rzg/N2TmYfmoPBsZSvJMfJio8cOcU5GZ0w+l/ul8oHLZ+wOJHlJeYV
H6NHvrZTrYv+QbnxpuFS/Mr4l52T+USf0XcfKv+8eZlzk7YYf7FzMnPFcm3m
yp1Km/fB9qWxtp/a9pfX6zlwsKr8vn3Zj/lprh/SdvinpV+Gk2Fn5tARA465
e9Imyyfr71XRWtCePMddl7X5k6M+Q5y8ee1M9pw4fonTcjkDq3Fq3LfcrO+d
On6hOBn9yaXlE2OcrLbzvbQhJzsjY3Ad48g8OVnzAYmdoZhqy7eXGiwmTub7
IvSi4mTszlBjAZOLkf2YrrcQJ39QxyZ9vcjJOa1w0jYM+rb3K8W+0By+d1Ze
aXCyz83z+BjOw87kV4e6Peda12pgzsm+f2JgoMeInIyJ8xUbOXIy2/Bd8bEV
21iMzLnAvhjnDd+WGKWP3l3X6UdO7mcH5U9+kpk/08fEfZNuE7WLB23kGSnp
k9s42Vm5bf8e48o1mOyL99aaC1jiZLGyYv7l/MOx7kqcHMfGaDByKQaN5jVV
c0BW0z65r6xeezvlNVy9eKLmZLHyhbUTaTnfsbT8w9caMYmdkzWuokdWXhLN
75POWZxcrbdVx7tQvWGRk9F7oPPAOBba48jJOQ4ucTLL/uPTvcSIzsn4XJlP
B1Myt29aLk265V//z6TLECdrWVt+EjHOsSu37T0zjLuZfL7T8jv7cU5+am1W
BiurXae5Mk82a07O5YlzTmYdrlsfTvb/FMchjY8WE1G6Jc3nEyf//Of/lD61
XY4vKSvm8doiE3t8iz6aC8XE4Pu7m6dqTr66+naal9fMd7jXiL3hy1nflymm
h6/j59PUie8knz7tn3h3cDLG8lcvbn3/fcn0hZU7ozzVg3N955PtOneIOJmx
Yxr/rpv8Ds7J/i5f38VzrJO75vMwmK+K9X5jTKdxf9jO+S5OjppdL2tOi5Lj
5KTnGHIyx2S7y1+8k8w5WVzKfpgbWN1jXq99v87FUVdR0mHUjDzUdBBTo7q2
o/XFyc7PHFt9RYwsPzzjGd8pK+umaztY5pwsPbK2b7s//2iLs6Oqu5C9qJwM
Uy69/VL92+Pyyp48HcWAvW/M3KfczsnaL3OjYGTNTXImVpxcxdka5RvLc7Lv
Q8toJ0tXX23cq52Tc6zcFaMrx8n4h5VHcKQTXksceuP2+Swnf/jJ6f2LKyf/
f/berDtuI9vW/efn5Y5xH/Z5PmePvWu7arurRnJVHVuyXGptsVFDUrItkpJN
ipIliizJtqpsWS773Je8+QUwkQsrI4AAEplJyX5YIxv0QAD4sDBjrvDJON//
MKk/aDmZ2N/fDDlmOFlaY+kxivEmnKznEMbFu4LrrK0zDStTK5BcqNX0pvKn
9JWj317MM4LfIWf53X5Nn2s5md9ty2ni5Op7qWUmx5zDyQpqrcizQpwcq/Wd
G2/eOAweu+jObU0LsdkLo0tSG+O+JqaEPX1fPHEy/Abv0f+OKN5PHdZ0GJN2
HmfoWD8/5on29qPLHwVNsji5aT608wkzNOeQc/3g7HhwMnFx9e2Kk+vnYTw3
jJ7Yc/L0OTw9Xaj7+33xzClOJj92/N1W+OScCXnWtddbdxHqilB/z3Dy6rg9
i5NhWuUIPCfTDh8+S9er8RHepxvO9L7J8lOAu2BV6X+63ruYVv01msYTJ8em
l1+01/Zq/S2reh2h+pi29bELvhElI6O3IMS6QXfyrycVJ4tNbT8UMbLyxm2e
yQQ1+FSHD0YWJ8PoGgZHa/0sJ+v9gq2RouNlOblY1rSf4y+l9t1JjJPOyQTv
nFP92ggNi3kOLytyOFm5Xvm9wUPUhubT9u1rihxOPv72UQjmC2upxiWhfj5o
n2rtooGT5fMQdHEHF0Mod6vjkaopmOJlXa9Ud6/OypuBR/EVJtRfD+ZF6wD3
ek6+9OFbo5VLf6jloqljx3DPyegmvnt5tzwmj4IHHd89J1/5ci0E0+DXhl8x
zNuFk8XKeLX54eiSLSfjB8fy5R9vQ/WXCLz2eusfSg0GuoxcTsZ7g9p37Bfe
iczKydQwp34FvCxvYrGZnhcKvq0/j/ka02q3tBvYTWE9kOWPHD+XmnUZ4njP
yVbr0MTJYsu+Wou26eDkWzsXAiPfuHKqtnz1W/XrBScT9MPrcn3Ttoi/+S5O
fvbs9ridHLzWfFzjZFOjWpxMG4F/uKal3qV15WTlRZvynXq/f1y+a2ny0WgK
8WTfHDjb7Fne639jnAzbErSlNmYV18Kol1beDr/hX9XZYT6x2tPiZGmt25aT
4mSCvDI6DNXNDvplw8naf6yL13co5Pchrwo9Sw/h0/BrDBOvAicffps33rw4
uW9OGu3FN8d3ot4RhK2J0JeT7bz0jtgyqeqPpDiZ+51yXW3Pq4H9DSdbVm7T
OX//4ii6D2xU9eMfbAXPOun6Ypwsf+SCPyb7gH5E8DGcbFkZ72c0z9u3zodc
NP/vlB6zlpMJ5TNi7dByMvdG9il1rHN8JJQzZh94ToZ14WPpqQlxsmVlW3fJ
cjI5Xo6r+vx14WRyy+SV3zQ1IZpCnCw+RStCdGVkNBXMS5yssBwrTq7qXr+o
t3n9X7Stw6q9q84yn1rPptqbedeBIr/NsV5fPR00yZ6To22/7D8qxi/eKcf5
mDp8RBd2ZvgHd1bDd3Hy/bsrIcTtWqb0jbV2PR6/jZNj+Wjtz8oP4+cHgZfh
5N3t1dHbK7uvPyejSzb19z57+Ljw+hizjzg5x+Oite2NeYvcdIzr1r9ar3Ey
y8zlZKuJIPiP+oBMn7oO5rC33vt4To7lbO38LCen6nvouUCf5JEtJ0snHWNk
P4+unBzyOWM+ZpnSX0hzwSc+GAQsbfsdwgCek+13PSvYWprWG1l913P9Vn+N
YeNXTm6PvpyMNwT+DezjpvHEtqw/+WCbi+2yfnZ81VzQf8xXfAJLTfZZN06G
+wnO2fD+bHzfxSs2xcm+XlpbwBMbD1eDDoM+BkXdoKPAyufvlfzw5cUpTlZN
iKl9++JB9SlODu+2Lr4z2tud5Ky3Hk98AnR/8PcDnjFgYvoOUr/DcnIuG5J7
lZ9FjJPpu2iXid5Z9fBse/HbKU4WV/OchVYjRzssTiZy+/bBt2LS4jgX3Evt
mIu7efuCcbcfH1Z53hgnE7CueHjSrovaH/pffetUD0ScHDvXuvTpIzRfto/8
tzj5wsqFat0sr6fP0zqzpjQUfXLJcLL6o+JLx3LgZC3b6j3w3LDrhT+Fb3c5
5+uUf9yYk5kXzG05Wcd72Uw7KB/LB67kZPnB0Q7EyfJly83J8mzs/9N1CHa1
OUjrCwcn43Nx7bAYh2UfO+1+bB3U79nyKO1E65/yVfJ1tqVR1v3DvveR91iM
k6WhTt5vSg12jI1tWI8LqwsempO9f4XlZAW8DCP7PDn3MU3r8+mWk4ln4/ue
1TBO8sy/cvKy4lXgZBigSXfh46To27twctVX6bieS05dq2zfvZSmQZysPLP6
gHGdt5pvzeun8nesxg8BJxNfP9sNHhehbkJEe8yybP44h5Olb0CfHONkNBbU
4CCfLI8L9ZO2fSA9K8fagudk8sswatvxhJMtd8K71MzokkMVJ/v/0W/g9UCI
WaRdj+3ftn0pzXtunpvowsl2veWRBkeyznByTl0Uy8mpbaGeHjk6aSfEycVx
f1ILy8fqa5c618R4qWVLJ60+bXAyjMx6/+fb/x6CfDKsjF6Ebbd935q8iGN+
FylOzuFnfOWIoMk22gpq9+o7z7PylotxMvGPZ3dr+6ntfPB9+1ievJPRLv31
s/1Ki6D6kK9LiJOVR1aIk5X7neX+ofoZ4uRvjb+ZOJljbn2TxclTxyrB6t7X
zfIr9x7P7qyH52R5XhT9oyd+xqp1YdlSjGj7Gqa233p6iGntb3LIVu9AdOFk
ux6eXX1Y/+emXDPL9JysZx35ZvicOr/T17+DWu1X7omztKmhguMd67vxOgb8
9qpw8izvS5cZ1MzAt6FpnDZOjj1Dik/lj9F4nFs4GVbEs65NQ0zs3Dqf5GQ/
nXw8bL20+PZPalCvhGtbcf+Hl3m/z/sEz8noMNAmowsmWE7svLXrJG848tBo
mK+s/CnoL+DkFCuzXOYvDbDlZL5TXy6HJyf31+n4/bX7IT74/MsiV/n57dHX
f/8iyck5AUt25WT68+Gz3IWTCevfZjkZfsyZnvGJeNstOJnx3v/Ucln9/FE+
N5VHrreJSc3lybubgnOlZREnE+zDP20+DpxMvHFuZfQfb/zP0ZuXb1X9EGMe
duqXI727liO/4yF0yQrORfo02mvF59vnQshPivG4JyvfXLtObZypcbLWtanG
SPj/x4fVOUweGa2zuIDt3zs6CM9Srx0nl/33wve1B6N3rxdMZHOOfTk56IW+
3ZuqM+fDM3LByStT+cm2gG2lfbY1BC1Laly0BH7eIXf+8uHU+ko35/3VNE8t
g/9TWg74nhqGX/9zp+Jk4tpXZ0cXzr2R9D+mPap/XA4r53Cy93pr4mT5XsgT
2TJyF062/nCKk1BL75fkt/EqMDLxKnMy+9fWl1OgU1CuVfrkcEyidXRn42Sr
4+AdPjoJO882TpbHNj53ai+x4xHjZPTWdx49rq2jxuP6/KzMGcc4mWuL97Fb
P7gY9BeEZWWN17QfLCfLg5kI/psX3wmaDH+9Ro9Bv7sY38mzIoeVmzhZrCxO
pp9hTttquk6FnD793cftKte3DU4mT9qHk6UD1rMev8XJ8CfjtOWlY9sBJ1vW
x5PXaxwsJ6uvnT2PpNGwTDy9Lw9rfmiwCrlusbJdV3EyzwJ/2Cr4nW0l1M7g
4+B3UHJy8M4yvspNdUP6cnJs/93YrC9HuWw+7TWAfn+5vnk2ePeBlwjXBjiZ
ef7081chxMk8AwUv5RPAt4PwsTTJpS4ZTqbv3jfjfSEOFA/1uWeIk3MYz3Py
9Sd7vTlZHm1TdaBL72dCumVNC7/CydJjxxhULOxrE8KAeNM0cTKMLE4mR6+8
+FdfXZviZObJ+klzovUpWLNd59ykh7bjp3LK/E/739z5MLCy5WT1i+TT76e2
dsK5nWLk3PoHQ8cvhZGJV4GT4UjYbtnr0TdSnEyIdaVLOPy23teo7ZktVbvS
h+VHrp+wqPwtcp4/YpwMhzTVclGdNXGyZ2W4PGgsXN0ge0+3nFz4ehS+brAr
bKx8toa3bQvTbD2e9JGynExumZwyHO3Ht5yMLuGdC2tFXN4cvbP6RRYjx7yU
xdr4lOCvdni0H/LnXTg51UbEyepjl9O/7zenft+Lk5VnFSurNgfcuPmgzslo
LQg/j1sHkxynvWcqn6vlxDi5fT8VnJwaLk86vlvthH5bTn/j4maoTf3G+fXA
yQT71eaTxcm0azQOhPwu6J8EQyq/m6M9tvVEUozsNR767jnZ8nI17o8PAyd7
jwy/DzXP5zybjuM7ag+WnAwj8ylOLq4Rj8OzBrFsvh2EkV1taj7fWt8LgW+F
5WSbg+0acN61UCs0Lxe69mhjhDZZjKxaJF2XK02D5WTLjpaT0V5YLQfsxzIJ
sSDj2ucGMSbfGQ4jE9YXoilsnxE4eePmhFlVC1aMzDYUufWV0d7xQdLzjXWK
1dNLjZviZO13y8nKbYuVC4/xvRona7qm7bacrOdh6uqehLzyLyH+Mb7OwT/0
cVJ/p5MWsJj1Z8iJGDfM8vzTpsNp4hXeRw3Byf9f4jqS67s22ZZ8ToaPWfeb
N/4yevr406AB0PhNnGxrM6SOQ4yTGYbuWO+aCs+cjdBvjxAri5OtX0jbsdI1
1tYKUQ1QPi0nMz/8k7nG4REcGIlaz3hDlLU54OR3P/l09PbZi6O3P/gw/Jfr
FxHjZHjj6JvHNZ1FTpttO/boa8TJOesD/1GHpA8rT/zXCk5W30PpHAi4GU6G
TQuvjmJay8mqySHfCnEq08JcfhuVQ47tH6ZXrZJUm/ScbFmZ5Ul3YTmZZwr7
HFRos4ttgIu//uduiImH3aPwvzg56OJLPUSf3LKtMUL4fJyYduXG70N49vY5
LPRUVs/sAx8ZeciJk2Hj0GfvzqXKL6PIl090Jp/ce03yyDCy4WSx8sWdg8DI
qgHCNUu52T73Gq5PhDg5J88pTrbjxxiqrTafOJlli3PJE/vlsX7qp5ial/K6
jGPzuZaTpaUmV0y07Ztw/d4u8jWE5U1xsrjT9kmPaR20LjdL3fGs+gzPulvj
+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
Jo+KHBZOja8aieJkz0yHB+P7yKXftLYFpmviZO5X4ildQ7hX6j9pmMVhQetd
3u8sJ0/qnZ+uaiWmODm8C1uSN3PXsJzcpBvqM98mTu4S7E97HIt+A5MaDhy7
Iff3q8DJsKW8a8gl5y7X93sTJzexodc0p+Zn/9PxSE1jORm9uTwDrQY4Nf82
P7hY0A5zOXmooG3G1vXr4+2gu/CcbNtftG6HODnBX7x7FiejkYWvVIdu5/Bg
9NnOZo2T23QJ5B93y9rd+I1V/v2RWm961/+nzQ7eFytfFhoDlzv1gZajLzf4
aPJsSLf/CZPBbn242IfVVoT+jJaRzbTygs5ZN7Gy3c4Y88b83azGoW05sd8E
Ggr5U4iTCZ+/R++s9iKPvNRzS4yLQ38+s852/GWzbydOtvX25Ak3ZuQPPx++
7564y2smvA5DjKy+e5zvf/+uqNMhD6MU4+VwcnH8ptskz1FidnGy9ZCAQz0n
x8JqIdB4ZF0TxpxMTpbPnPE9J6tvYRv3SrfclGP206h+t44by5VfHowsTsbr
+ZvjO2He7CO42B4LeYt4XQVR+I1M+EoezerPYP3+Y5zM8sS+Xpdsfwc/wMPb
o5Wv1sL4wXNlPM0ydBg5ofcE4gZ/rxsi4KTQP+rBpSxO5pik/G7mzcniRbgB
DedRosbAkF4WaqvKn34f0YKiAVGtZM80qgc+CydLn2y9lLtMn5om1tctNW98
Ay0nh/++r4+fm09OLaOolxqvf5AzH46V9xnK2tcvH06tq/pZoMs4tXYncDJ9
9wj1t4v5rKHJeBNGTjDlXz/bH1354nqogwgvWE4mr0x4HYXXoxf7/suqtpvl
5DYvMaZl/l368omT//2N/xlyy6nxYvWa+4bVuuYGy1ffytzti+kpxMN81tg4
MQ/4KVVrW8dKNfhgacZVfZQuzwOx/WF1yfKqbhqf5YmTGU6OeHKf+bzG4OLk
MN6Lx+EdhOap4+OXEes7w3xeaU42/faUS+Z5sCsnq3539NiOeaqpXrLtY6bv
MLI84+T7xbji5Kb5May1vTlO1vxiuW39p/mKg1PbIr2Eauzl7D9p51P94O0z
urTWVjfN/vd54Ng+spwsDzy/nbZmtWUheeRZTub/0CdkzMnEJxt/CJ+Wk3O0
J7H9ybJ/Gp9znpPFXB9tvhVi486Z0eWtP4V+Rk11ja7uv1/w8Ti2Ht8fX1Of
THHyrLnO0MeuY3+kWHCt0bYo1yvOV42cWZcxtcyEPtmHOLlp3eVh4scj3892
fPvP3d7rGfoVPnpS0ya31WruOv/p8y89XPpXPsXQfn1Uo8MyZq6GgmBbbV2P
HF+LpuF+PjFO1v2OcYOP75gl6QMPLxO5WmQ9XzDsJ7cOXjdtOS9H7+OXJ0//
v3+X/zyS2p+ek8VE1CXW+se8wgIjc19NMBWc7NlCdZ3FyUTbsVMfjS4h3aI8
hjvnWzM4eUhWtvupqe9yeJ9Y1vMSK7fljL2ewuaJKz7O3C+ek/0zF9uhZyFx
ctd9EWNgnpMI34evKYK3xpiRLeeila7y2jHvipKTaadtHO5DGgw/z2Wzb1dG
tloLcbKuEbnPOoELe3JyjJnFbeSXJ+/OJzlnr3WQjkIM2LSuMJmvl6H1i3Gj
95aAUcWn8mvTZ9AglZwsf/yc/WfrihDkaOvXgQknc0xsX8IUJ1vPC7sdev7w
9URsDT7LN8oni5Mth4uBLSMT5LlZLzF1aruL+2K8LUw4eVL3UTqd9y/87ygn
ExdvvVsLhhGMJ0YWJxP6LT/AtnfC0jIS4tUv/741+vb5cO9ggo4mwcmw/Dy0
IrmczLNAX92HcuK/NE4mAitvNOfr/bxjffPkd5HDye196HZrz6B2HVKc/ODL
9Wocz7k5nDyZ//S4nFM8z157eLaTLl4xJCfzjjnmqytOTul7K05OsPKZz+83
vhvP8Wvgs3i/N2Fg9fPy/9dzBYUOg/HwKevKyW39+WDAvn527dvd7PGD9jX2
3JLsf2f1EwktRVvQLpr8mie1JQ878VTX/dbF/0ic/Pn2ucC+1AkUJ1udRDX/
4O/2qPLRq8YpPe1Sy8E/Dk85cTJBXlmcuGz+zeZkuJiaIut1Tl4dXxs413Rc
1Qclpbdt6m/G/TS3r1hMAwATW66z7CwWVK0J+RvL4zh1/Bjf3ufFajAS26vl
i735j+s13y0ni//Yds/JOXX3om34xUHg5G+eNk8vZpUvvuVNabbFyT5fLz62
zKw6JJqHzmdpk7W/VIvRc7K8oS/e+uPowoXfVTn3Jk7WfmyK4Hl9XGhgdP31
nHxh6+0Q+m3Dc/Kn29eK37c/GV357GYt+K+Nk62mQJrpgq+H5+TYfQ6tiOea
wa6343NcNchCW3z5IMopsEyfd9tEUathJdsDJbmuPxVahyH1yX20GuJY5Ubh
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
Qy6X4LdqfNDOaZtN9fZ8jTs+Ydzj77aqdsX0eIvG5kGdEYL8L+NxLUJXzKfy
V9IhB2+3kpNzamUzLnln+5/eYaBXgpOZ77w5eShmVi0+W2dEnNyUj4vVLm4K
65Fm68bZvKadP+Nw7tv60rYGhmpF52pA+sSsvlV2ewODZWiZu3Ky9QHJySWn
2NgOj3EygY7FcnLtvB2vc/C0MNsII6t2St99x7tZz8nw9F8+/F+duNjq2vU+
w3t/+JoqCs4F21c0FuJf2syNBg14lzrmqWji5KbwWmvP5Dy7vGqcjC8ceuAh
vZO7hLzT5AsMq7IuRM59mf2d4umunJzSpz5vWBfxrzhZrKxh+m6n37r2fqf9
4+fFZ+CAHn07fN9VuILrzqycHBsG76TyorBXEyc3sbLn5JTPcRdOro7nT+m8
Ke1DfdViWoum+bIvYtuSy8mzeL2lglqGMa9ku25wMv3VUvOAK5vqP3cJnp20
r56YGqHF82vByXZ/KH8MK+PFRjsOnmwlJ7fVptZ8yO+Gdyov9ypOtu3Ic7Jl
a1gYNlb+mO8aj/UVJ08t98eH1TOL12OH8yrCyYRYmTa4aE6eiZnXS//kkpGJ
jYPDLE4OPgQdr3XF8/+XVa45NX+4WnlkWz+EUP5UnEwuj/kNxbUwIHwemx8e
IF3nhx8yEdtX/noCJ+fOV376uZyc+i1GLuoLXw77VT7R9vlGnGz7+lXvgSKc
PERwj9c7q2p/frffqk0+u3Nx9Oa4bfN+wrKx/W4ZWr9j9+4cTq61nzEHNK3b
UN6ufaKNk32e/6THq8bJ/v05Hi4xXULXECfHWLlJB/y8rLPNZ4yn6S+r7dR/
XThZMS9OrtazvA415eDi++1+NDfW9ozTyMmXb43eOr8eHUZeFhYqchLxWnn6
lBdXp/3cwKPi5Nq63pjUUGnSHKU4OeRuf/P/TP1vdalt69U3UroXdC0wK8sk
r5ziZOVf+66bf4aS5pn3ELG6I7HrvvLH4mTLHG198VTnQ5zMtug+3sTJdnpx
ctMy4GDrBxc+DSfHphEne1aW37SO1bI4uQ8zi5NhZvrvcZ1p4mQbXbjIM6Hv
ByYPZHJulpM1XLWrbb0+An6znCyPhb65O3Gy5vHxF5+Pbj4oeBFOPnO7iNx3
Sz86HY98Kvw+6cPIsXqBqbA67xg3s07SLltO1n7l/YHlS6uXCn0PxvuN4zOP
ekO1/RnhZOmLT9/aqiLGybbOI9+t/oLtjd272Rdd2BYOwO85dgxYHjFEXnno
+Pro85CrXvZ6dImdx/PXQeZG4bH2pHquUx0IO868ODkWOfMVJ/vpOId/dnVL
wrY93e3Eyd/+895CjwHX0y76A/WLivFIEys35THf/vPpsl5XmpNjjAzPWE4e
et/E/IXFlbm+xVPbvXq/4OSIB96Q9X/qx+VRYHDx1ouyf4L6NXpOvrb6QYgh
lm3bSYyTCWk82mqP2HmikSCvTHBP9T5xqelUt1rfYeVYu+L+FZuftI1wrZ+v
3177W7nw2LlWrdd4nszb8gDtR3FSODmHmeUJpzoj4mR5cjX58uawaIqj5Vth
58f/4mTpLCz72fdp8q8QJ/NbdTd8n7K+8c34OF/Y2Q6MTOCL+t7mboj9o3u9
NFjyq+M6uH+4FfaBdBZdODmmg23iZDvM16q23Kjcsq2HzT6Fl33t8Zsl79n6
h/LgGPK66ANto9Unw8If3f1wipN/d+1R9b99D2K9PcTJ8vkT58y6juwD+75E
55EYeV6czDOi6u+0vX+Gh6x34qvAydzPHzx9UjEpHoFt2zhvXSKs6ZmU38rR
xqbROsHJGn8e6xby3R21wJ6Tlf/Vd/oQ4D/z4vl+iKZ5nVROthzQx3eZunxd
ORldJloKQvXobei9vN53D71v8NmYlZOntttysmPleXGyD8vJ9n/6iRGw8rvv
/FuNBbuGzleuqdJR2Hy5gvUQJ6vG8/S8HgW9jY63tBVHIT+4Wy3H649T7ZhA
36x37rFnsBQnE+R8azWqM/m8bRxxMr/lF85+CaxZ1ulYNhdnM/OYkUONGrHz
+oOK/5oYOcc/qynXHPMU43+OZ0qPIb4gxMmhVlvJaZuHOxUn5/pLNIU4GT6W
9wcxKyfzjuTmw9UQwVc4wsmMw/Y0ve9v6jMW42TV44tpL6z2W95x+s9yss5h
z9liZKJLH8s+keJkPvXfB3dWKl7WtnhO1j7xbXkIv6oYJ9vjRb6ZIH89JCNZ
v/E2Fm/j5Bcvutcknne8Lpys8cXJsWFDhOfk0NfQaCBS09jPFCeHuPrn0e72
yujeF1ujp3+fPJexzL7b0afPNT6RRK6/WCxP1oVN4cUYK6O5CJwc4VE4dfPB
TmAk1RyMcfJQx91vD8v3rEx+O8ZyTdvtdRdEqOXhOLnLfOcV9DuDkXM5OdU/
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
m4+ynJz7fjTFyXrmy932PpwsvlUujvWWRk7bHHxmMji5z/EaOlgP7ocwx6Jq
bLVFrB4eAdOneJ7tUN2rnG2eZXjf/dx3WjhZrNzEySkvDs/JrEvor1T+x3Bp
2vAEPni23YmTxSeWk3XvbnsWauJk7qNNnIzWQdoK5Y5jAe8cuWf2Lp4E847A
DCUnW1Zm36jey7zXgWPGsjj+YmSiynWfXw81UMTJTdeK1P4kh0O74jrfxskc
L46pcsA5x8qyCvWexcaEvn++fa6qkydOxu/eapT9fUiczLnj25EPbRfXIasL
iq137D90x6fXt0OIk2usWXKx5WWiqCs+TE3puTGy8buo8snj3xd3JlpKn4NT
fvmTjT+EOLdecLM4mU+FOBkOOQ469IKfYGRCeVm4TJzMsu3+FyfDZYwvNhMn
y+9CuUyWp/6AmsfDZxNOTp5v43WgnaVyiXAt1+ZYLldcaTlZTGRr5YmTpRvx
84lxMuvMMm09QuVOPSuzTF9n3HIy0ygvE/PkI3RMVJOa3I3nZPlzMFzHVIxM
xJ5rhg44WZrFvpwc05JY/+QmRuCYSIPTRQchnYOtAajnk3nur/0nu1mcfGHr
7dG5a29V6yhPwKpd/MrJyejDybY9M93PHft69Aly21bHEqtTXXhHTA/vE+Ea
cjX9HJDiZJYprb2eqT0nB4/3p4Ve9scfZ6sxxTGynCxW9lyQqrdh+/GlaowQ
8tSW70HKx8vycsrLdplBnrbmdYF+03DyrPPP2VZxcmpfo7OAk+FlrhdWN5Ty
BSao26HvcLJqTDetC21Tfe5oi7nPNLCxD7zU8IpQLVtxMuPjc7ex+ucaJyf3
z8uJR1dbv1Y+4WR53ils22Pd9Pvs1hdViJODl0WNMQ9Hp7aKWjbVcQk637sh
4OQpHj2BzBx0yaXeQp5wlpNj765tTkz5ZXEzIU4m36wQJ1vNRHUsS22PrkH2
umXvL5aTw3ErfSIsJ2u9LXfAyWifU22E80x1N3I42fK2zb+KfVi+1tVqeUM+
++XDqKY71YdPrCqdttUYpHz5UnpijS9OVm5azyC2j5flZL6rX5j61HhOttN1
7dfZJzwn42uBJxx9+KRlTDFyzCPEeii3cXL1vlfv1jvqhWN5/0Vw8u1H29Ft
kgaD9bKczG/uEdqX86h7MEtIE3y4BO+pXD2wHa9Jq5zDybM+o2h92jhZfMz6
er111+DcoB2RT0Yr1Ud/YUP6JZsTGIqTCXK98ntLsSn7RwzQh5PhBnEy55d8
lGN+yuJkPBKGaLdDP1OKlZVLxjsjR5MfbZ+eW39O57V4d19jr1o+f6+qVy1O
5rj6PotN3Agnk0OWhlicTDT17SSYxnOyD+WNPRvb8J7GCjgZr7uVi+821uPW
usR0yb5fIs/FL394XHEyEXuOeO/ilRCWkX2OGL0N54fqiNDeKy84y8mmP18y
h3tSmJl1R3tR1hmRr5281VIaz9h7fMvJyjXDyFvbH4awOo20d0P6nmf78bN8
eIw8pupfKz9nORmeI3yOk+XsHR/U8r1wciwXapepvmuaP5/ktW0dZ8vJPnfc
xMmp7WYZlpOtp5nyfXZ81o9lyptC697md91Wl9l6NKnunnKzk2vb/Bk57K+S
kzcfb442jsbPBl9uTHFyqkbOjUh/Rv9fExOKk/uuu+fkUPt9oHrrXUO+dcSr
xsnEsji5KVRnXTyaw5nW8yJoUCPTDJXL97Wpbd1Az8mWlZvmmRoe4+StjQvh
uY3h6k/apSa8lhf8mcfX0+AZ11OnHrvf0D/Uzs/XHGvl5HNXCw5IDLd96Dwn
6/2ONKYEfgYnlZN5n2M1Fzkec7k1YOBkz8ocF/LVbZzMOv3nX9+veZDlenuo
jnXFyT8+DFHUBViZ4mTPorFrOUxMwLXiYz5V15kQH9u2IS84u8+CT0bJyWjk
7DTVvjOhdSvyXpN1p52hEaFtiZOVv9Z8qmM2Xh5xfWstcHKlxTd8TA0djo04
mbYQ8sw1z+S94two/Yc76R6WzMziZOWT371+UHGyr+FmOcLf621/OnGy2Pmz
z8+N7u9vVpyMvvnp4e3RN8d5578YjeWK+5RT0HdxMkHb4JN8aIx9uS5bTo7p
KSbt9aDSPlhOhs+5RlvvDXkpsC5Ww6B5SSM9qddRXI9zOFk5YPV95FOcrDol
dlmcr2HYwDle32/OcvIiQv2eYpxsn+W0bt7fIsbJeg+Qw8l9g/u6cmDSEqkP
xiL3n18neWgQl2+dGp1deyOZi8/Vby86eEcO08GAXfNZKX/jvtGHk6VPxgfN
D2vTig+RZ2YfsA+H5Kifgt/a/iRnMV4OjGw5mRArd11ncfL3Lx4Ftm17L67g
mqt6abHhnpNTvhPkyWKc1qRNli6B6a3vbcj7lFxjOVmeX/N+39Q3YCpq3dE3
Lldr0Vb7UMNj4+BFktKE/9eZvwU+RgMiTibQLsf05uJQ/z/3Tdjx5ff7IcK6
lD7GTX1DtM7iZLGxDZ8zVt44Z5/pO5wuVrec7HUe4nv9pz5j0vSLk4v5F0G9
PI6p9cRToKuo9787nOiOrxe1Jnl+4XlE3oGwcm1cU7OxF6sumZmpM/Lmyt2K
k2kP8mWwLAFvxPzFUl4DYldx8sHe6mhnpwhxMgE3Hx3eGR093kq2Feajd8T0
2ZAeIcbJ8pdgHFjEcyKcbNeziZNVB1iMo5BeQZzMtUxabJYX4+TYNZvP3HrV
HBfLydJ9KB9j+Y5zge3Xua19l5p3U07G6ltiz0+511Xlo2e5NsPIYV+P+dhG
rA1aTva+xfZ5z3KyxmlqE7kRcu8NHLNITo61YbtuXHMJ5ZNT75MWsa5dgnOf
Zx8FPjJiVbVptrOpb5ZyuEOsD8vGi2Pi5dLO7jmcrDoaXaLNx03zj3FybJ90
2UfSHftp6NtHXRJi69r7o929tZl02TmcbLerjZN9xDi5SRPbh5MJcpViHfwR
LCcvSpfctfamOLnLNDl1LDxLh7rM42MsTv7zrSf1uoKGk6V95X/e/ac4mXlW
NSbNd3GkxoNJVSvPcrLPG6vPnXQUYmO8m3Vt9TnjWYN5WZ8K+bMF/3DHyWpz
eg7w9x3yyeSM0XVYToad17e3K072wfMibAwTq97jJ/cej/54/as6VyuPXOrY
Z87vLpCZbd3qwMllfnnrcDPsI3t/VP7ScnKbJ5fY1bIijAw3E5xnu3cujvZ3
r1ac/O3T7dozWK1tl/M5DnXQd6p+UXAzvMr/MDI5X4Lv0kFoHjcf7Eytp2ci
u75M63PF8nNTjT6xMcvTd9+mp84r886vCyfrGUbPA/Iptrl0jc+6SM/Ndmh6
1bey65niZD0reU62xzzXV1r6mFmuDTAF27n2aKti5KY26Pv3WR9jy8nywNBn
9nX/X4e1/nAKOAFPjiZNRSqnMXSwLrH9Y9ctl5NT/a6WFSeNkzW/LuO31Rop
NIOPs1m5bVui9ULcNEPtkxgn22F4yG3emeRH+j43pt7n63984x48vd+JOblW
xHK5TZwc6oyMo4mVmR4uJm+s3DG/7T6QFrYpvxr24QAMbb0/ukynetCd6tyN
2S3mSwIHK/y9CA7jfT4BI1tORn+MDjl4WowjaEDGTGa10qk2pf56rFeb7tiH
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
HZvUcUvlTGFwzqNUHlocnZtPbr229ri36zouTzhpOGAj7/lm88p2mPW7UE3H
rusxdMxa5yycZ8f18yzGyakIfWzLdfj2+E7wT46NZ2sLdeFkX0MyN0c97+C+
Oe9caqxfXGrcrpxsvTT69u2z6+M5eRFsbIN6fXByjJVZtz56Xe7loW+Se79t
udFysr83WN9ayzk5XNeVk2dh1Zz90DZOtF9nYjrGVZ1ouAtOzmVl2lXXPHLw
efuP/1FpLMTJdhzqnUjHrHNJffOemHqYMKF8Kci7ipOthsIG05CjtR7JBBx6
VNZzQIMAJxOWj1VbASZW+2V9xMlWD0KIk3N1bcpbM2/yw+JkeNh6x+mYsQzy
z0GnX24b2ma+i5PJDaOtkO8xnKx9aTUj8rAOffluPo5rLXzt6hMaTcxc9UE0
nHx6437FFSlOVv6S/Kn1pVU9DfGf52RpkcTJlkH1jlz3U91T1XdQ91IYuele
azl5dfN08G/euPmXEOLkb57u1LTOav/ahuIcuFqtn1jE+x77CG11vK46H3x9
OzuerQ1ic8ny7bJ1TBSqQaXa0300fH05WXn/Js1qp+t2T07Gj9a/n4YH7bqI
k/keq2PNtmwe7Z8YTp4lLCfbaKpF6IPxu3CyvBl9m6a9alz1a1UfAPvcmar/
wnFL9Zmay75bACd3ae9d9ck5nDzL9s2bk+kzyvsLfdLngHi0fz0Mr+koOnKy
xhUnE/rdNJ3uUW37JYftQn+yspZC27gwJ7Gs+utd+5WJk2FVMTI1L3LbVeP+
GO8v1feTvkJ8HPZpon6L9W6WVprton8k7EiQJxYnw8VrGx+Ozl17e/x5OoRY
2e8XOFmsLFYUJ2tcmFQe2PyGg+UjZ3PAwcc16IIf1Z7fgkZxPA2828TJwete
75LKdWHeMDLbqm2Blf0xY1marvp/zMkHexshqIEiTta86W8pbxKumftHO+H5
CE72ffZq/fWMr/KrFFPMbHLJ4uTVvcOKe1M5Qvk5KFenHN1Nd5+TT5/664W+
rWPOk/7Yeg3YflY29+TvpU2crGnZlo2DwzBfcfLa2qmgc7YhTg6+zXjRPb8b
gnVXPQ/lyIPPbMnInpOVH1btu7aadzonxJYpbXKMRazHh+XknHuI9XPuGra2
CseQY7754HwrI3Mchuy3ja50df1CTfMtTlY78u8oUpwcapNEcqN9Yll909t8
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
DL2GOEGc3HYcq+eKFwejq1feD9pxcTKaluDrYI9D6YU8qR2yt3SeHTzkZee0
FvAxIT9f+85UfejEiuRodb8UJ6+PWcMy8tqjjRCMRz0/q4u0PlPiZH6Lu62/
XNFPcCXcq5WvivlU1c7Nsqae1hMmQnNB2D58wV9ifB1+8u1eiFR/pVhdui5h
WRlfOvoLotmApWFkcfPKpT+E32g48NjQ9OLPHL5B95zbh29oTg7vPQeeZ1OI
k+WR4I/bsbsG+dh8vFm27Ymn3TJ03UNFuO8n2vAsnBzecZS+ylwDYGMxcldO
PunB/bdNqzzP4Bnzk3NvDsLJqe1LLtvVe44NX/T+WF87GzjZsvKQ6+H7p3lO
5lOeBqG+cNkHqqjvN91Ocmpm5HIyfdPsvGHi2PrHGDA23pDthvf54uSmecPJ
Tdtoa4Xg/9Y0LpoNcbLmr/ofeL6ltlscKQ1vtQ0h79bMycpZiUfFydInS3ss
TpbO2davkraB9hP6FZbrZPsTKjwzp7yTxcl8l56D8S0nw8h4IBNqP039lMXJ
6hsJH+uzYMa7tVg6y84xgn8jeWTDyeSRD55th/3svUzFyTru1KBQnlZ5ZnGr
GBkfC9gWjTDTipO9z5vP/Ymbveet8s9wMuwrTYLVSfj3/OJk1o/86sNnRS5Z
nCz9CO1L09tl+lptmq/yYZ2vx+Xy2E7LyQr0zoTlZD5tDRSiaRkwsjg5l+st
1w6lleibK6RdeX+7poCTuWemeDBnXq8jJxNsOwyrZyxbOz13G5s4mXnY99bq
B/ArJ88WaJMvnHlj9ON33fqtDRH+uHG8f/55Wu+wyFA93Xn59/j8KX0hinp4
9ZoP4uS2+c2Tk1PrPysn50zrOXl99XTgZML+D4cp39uUY6d/nvyQxclN+6Kp
T6Pqx6WGBz4tt1H3pvDMMw75VLRxstoD1z7LyNIxy5tNvsVwNcNVg0+czPTK
L8PXMS2GvsPktDvff9/qlX078Nu+dmWSQ2zjZPLPxKmrm4GP6bcnf+sqv2rq
5CybZRfByeE3zwmlrgRO5lrEsbSeTvCpjivcqfuuhouTpbeFO9Aaqy+d1zLk
cLLmx7qIV63mw9a5Vo5ZtfOqc6fUT4qlxclTbaPkZNUVE2dYTlb+7e/fbVea
4T7XZJ8DZ39qGIzstRronW0NFB/oOL45jj9Hy7evy/qpZqIPP14bB8tDus8+
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
IQR1Mgi0FLovibFj8yXXI05e9jbWtjezneY8EwzZD5D9xP7WMVDY45LDwVnb
ZngiNQ51SKJ152bg5FR/r4Ud+5KTb1w5NVoZt2ni7NYXQReS0lVT5/i//3q2
zsk1fcWTGicnl42+Ynwf8D5Tfvs5b0Ke9OGdGifHIkdjkaoFbZdt891Ff6nd
ipPlr0w/P9XiE0u1eV5zjYWTNT7sqjyzODnlb5HTLlR7xHIyue6JnqDwjSZv
TV0XavNVxy7043sN6++lOLmsM2I5GQbkGCkfDBsEnhtf/+09mXZw09U/s9rU
rsF0lpPhUPkvN+VMu3By2zh6DpCWWEwcy9PGcqbRNvvy4ZTGw4b6OTJeF65T
X0qb07aczDZIR+1z3l28O7aufRCiWq7hZPYp9VL0DELA1Z6TVWuQ+in8/3z8
3/NEvfnUNUPb5zkZ/7YmTm7r59AnZuHaFCf3meeyOFnHgn2sbdL/es7mGAxV
s+akhuVkMVmKk/20jMM9nWngZ3Qd7G+G4Z389dHnIZa9ja9CeE6ep5ZanFz9
drwT3pHncPK5q6GOQ2o4bBJbzlQ7+rH+OWTY5wr6yKmdi5W1XvRvZX09K1Or
OrV9TNPEc/6+Lq831bVLTcc5larLp1A+V/NRfcXY8U22A3c8bA5Z7z9hZtXq
sx4c0oKG+oCR5fEfjKwaJan3l8Ent2P/TjsunPyi1CwFnWHpwQEj43UnP2mO
Lc8yNc+LXwAnV7ysWoSlFgOtMv3s1IeuYrgx4/E7dk/2/NjEhKkQX4vtVP+6
jZGrfoORd18+xMm0u1SfOeuJJk4m16vnAbFpF07OarslIxO5tTksJ8eGy2ci
RxeSs99q/5Uabvlph74NhpOl37C1BlWf23KyQv5jNmLrcvnLjRpTck+McXLq
+A4d1oulbVwxLe1cLKnpgj/s0fbo/vF+CH431QzQ9NLJ025UO3rIiOkuiKpv
ZnkcWBfV3lH98JR+fdb97WvanyQNDO0W3WyoHfe8OZ/exsli5VnWJ1bjeJY4
CX35YoGuppbTH2A9U/wRe6fOf7zT1zA+tx83czJ51qbhnpO1nLb1jvGy8qyK
mMdRmya7aT+JefUdPmb7xcl4KGu74K1P7j3uzMl2+2NaBbutbZxsc8B6ruG3
NMHZ7c7UD5FvHP8flddD1acRJ4ufNZ7n5OqZq+Tk1LrHtCBNWg//33df3y3e
xYb+SMU1mvW3dQn1XT7S4mRxo/VLe92D7Qw+LmsPpjhZNehsbjm0izEDi730
v2XHPr4GsJbVA4uTN57cr/qj+dw1AUev7h1mcTI50cDg4/lzv43l4sTJug9b
nYVlUj0/zHId9qG6gbleCuLkFCeIk2f1RWrKw1tOTq2HZ2W4ywb5Sq5tnpPh
56+f3qk4+t797fD+w94DuSeKNfVOi+3ue59syslIM0HAhUP7dYmTtYwmTlbf
SNuXk+eFtmesrvWYvz7ux8lN/TxnDV/PZBE1H+cdMDPtXPk6+VxcufBOGNZ3
vr8UTlYcP7oV4tZn8Xcgnbc3g5nkB+Y5mWGwrs+z5nAy9c+arkUaFtMd6Lrq
2bjSJNxbD/WmU7rsmTQphpP3jg7Cd3iZECvn7lc4MVaDg2337druK7Y9xslc
i8SXvn+gjlsXTmZeOtbkXe08xcle3yzfDaaT3tjOEz2F9K6x2iLSxXtds2pi
a328ZtpuJ9/hZF+bz3OyDTx1aZM1b7ird2u/X/coNNn3Kk7+cHsrhLxvwzEw
7CtOVl7W1mTge5/7FvMUJ8PGBJxMiJNjffrEyUV7eDKl/1cbWln5fQhxsq1J
YrdN3oh+OeLkeb9H7uI3pn58ffwjukSszvcQ4TnZxtrmeyHOXXsreIxZTn76
9y8DU5CDI6bmm+DknJquqXuT2JU2r1zuPJhh80HePJs4uU27s7Y3OycryGHb
+nyLyO2+jpxsw7KONLZ959XGySede/usO5zMMwa+GNYrdPDlm9yf6prFmCTK
yXjPjjk5xsrwSFNfc9tGdL3kO/xr2w4spCB/TP82+NFy8jz2C/dgcXJsmPZP
23zkryZWnOiBJ21b7TvGyZ6V4YCYL5z6zaW0vunt/LKqJyK9AnzKMtT3XJws
pkZHofrCU35w6L9fNuvoxOJeW+09pZvqhrBfbm2cqfoUBe/cMR+nGNlysu+v
+Yvk5DKnzKf1EZa3RHUcSl0FXm7SSViG7VKHQ4wqTtZ8rj/ZqzgZFhbTes3F
zuHEly3GyMxXnKwcsK2R4jmZ65P3vFOOWzr8eV13fXtvCumoX2VObgoxsjiZ
enAfX786eufCenUf4F7YRVuRw8k2bD8jMbI4+fpXZ2f2UNZzpv3vXz9069vE
OhJ6toOVdQ6q/o7GqfZtB05O6S7s8pfFWqFvy/O9V5r1YjEkJ7fF67bvwjaN
2XgZnOyHw1588q4z1oePwH84xcmEbQu8Iz/44uPwaf8XE9qwjEzY9eL308Pb
yW1a9vGzYTk5lsOI5ZUJ76NMbTqOkWp++O0UJ8d0HakQJ8uPgmk0f8sJtj4J
nMz2xN5l6zkrpfeRZiOnfrqf3i6L9qE+fNqOJkZm2zYf7IQIvBie8/Z+Ufrk
YrtLj7gypwwnn9++WeuXF47fz5N6d9yHxcnKz6Lj5X/lubKuNSUf6z2ttBVw
Mp7LCnkAK4cccobGn5d5xfJZDIen8Q2O6Zu9X53lZJbHPNEViJFPihZSjLyI
derLydwfth/nMZm/X9+IaGyogfbxF08aOTmVP5MXfY4+RzHPurxiV9W31P9d
OdkG19AUJ/edp+dk72GxTE5+3QMWoo2jU8aDbhnr8CofW/z0Vlf+kvQUGWwf
ZTDVX27H/S7gZPrzKT66fm20u70aQvliXe/gPtjmH88m/Btj5LZ1YbqUL/dJ
42QbnpP5ncp9xOqNtG0n8/Oc3NRHTt4TYmX+i7EutUFUs1p9+GBluF3PV+Lo
oWpH+lrUMM71rbXKp+TW5oWKk9Vvr4mT8eqjX2qlTza1xpfNrwtlZeN7IZ84
cbLtp6Sa4KrvrFyrOFn5YL2bbjuetAumkf7Y6yvUV0y5bZhXnmdeB816WW6y
fZ0sJ1uvN+WbNY2eCcQu4uST1m+f9e76nqhPyEO5z7S5nCxNg70ne06GkcXJ
1brdPl8xoJ7ncvSYOdcj1cex/9GW4NAh9qsY2XPy9y9m42Q9P9m2nnqPl5Nf
b+PkX2P+QV++vrW/hwjvzTJ0zPN59Ounu6P1G5dC5IzfVU8vFiJf2TQenAwH
h/p15ws2fvvPp0OdEc/JXi9hvysP2MSATQELMi1xkny5hw6eL8SBQ0TqXstx
p4+b9BzSQ3BNf/LN/XCNFSeLnaVdtpw8j6B/HvsBnxI+4WTCj6e6J56P5TW2
82Sr4uRfmn/yFCebOtbiZfGrcrd6V0AeWe8crJ+x5dsumkEtp+rDZ3QPDHv4
7Mlo73hynRYne/+5GCerPgicLJ8BDVc+WtOozlxsHdE2nJRc8iKjDyPDxu9e
P6jaVkwPY0N5T+sf4jk5di/1nJzDvxonZ7zgh+j8zuStMa97e3hn+Gy6nlRu
WN2u9f6IjZvLySlfuF9jMeE52bbJLs/Kr3JuuPe+G3OyWLltXPJvs3Ay4fuG
abzPHj6uWDhoLcaM8dtSe4HH8Cc7X4wOj/dCpPQSXaOpHyCcTI2JZR+frvs5
N8TJuazcNn+dZ/64ipOVW1MuWXxU1Z4u607LGwM2jemTvSezbZtd94E4mWP9
3rkzIb64d9Os+4NKAx7jZLHymc/vh/ovlSfcL1CbXHGyqWPNs8KFne0Q3Get
xqE6z4y3QMyHoos/L/dxm5/2+TCWJU4mR0nAA236UHHy2Uu/iTID6whzq/9f
DieHZ4Xxd2IR+dxlRx9OXt07rHwGY5zsGZP7t/fY8+0JPvX3eTjZnvO57Krr
WaqNiqM9J/9U3ke5ruhdReEHNNy7hkVyst/m2P8wGtfaIdvUPHxe+8arwI74
y9n+qn05+ZcU9lrA/mur11ft244sYr2Tbf8pvpNH1Hji3o8ufzQ6vb49xcld
PXBnb1N7o6NHtxa2vFmj676RVkWcbPnT7+tk3+3EMu3/aBIsJ4uRv/12r+Jk
7wFnOblW+7rk5Fhb6MrJ9NXEt8S+i4j5mLBuR+GeEddckCf3nBw+S04mxxz0
GCeAYRfCyEafzPaf3rhf6Rzl/VUdz58ndTNUk2OKazI9e2kr0ifzea3sH6X+
c+Lkmw92xqx8UI63UuWw+R38k8esYnlMfeKt5sLqR5jnhMOfVO08t1/Yr5wc
D55hLCfTjuxx0TGwzzjc9zlOqnNHdOXkrjGLr584Wf36huTkH14eBS8lPrtO
q31HO4YTyGOwX5vWry2nPA9OPknxKnAyQV++41eIa5YdlpPxltzdXlwbhnfQ
n1pOJuAV+uAVerTDkGOmP4xlrKb5tr3P7NJPedGcnNP3bMggV07dGTw+LHfG
1sPWabF+e95Pgus+TGzv+6q3FzzBSs7V8RQj2/rW8rqw7Myn9whoY3Tpma0O
mb6ZyqGLk+XNzPNZyu+viZNpo9SrJqp8Moy8ulcx8i+Nk6v/DCerr5g4+eWP
e5V2wXoueEbuyskK60cBJ5PTs1oMcbJfpjh568GD0Yfj55+DZ/shLCfrPYf3
fF7k+fuqRR9OrrWrkpU3DorzW4xM3H60Hbx89UzDf+hfY/0tOf7eN3lWTp53
Lbu+gQ57iPno+aNJA9V2b/32+E6j38WvsZh4nTh56GeTtvk1cXKRAx5+G2EX
1Y5TrWXPyX49Zl2mfNKqGnMN17ZfCiezjTm549RwfNoIcbL1OxYPw8k6hng+
W88Lja824O856uulSOWTY+0WLiZ4FoCNxclsO3F15fcVJ7938UrIcROpeao/
n9ZF92lYueq/V3JyYOVFcKl5L73sCJpsp00+c3u/YlPvCaf7ruphxbimC3+g
d5Z/jxhb2mTvOcc6BR+TiJcy/Hxx5yBoNGBk2J6QNlnLg5FV+07/9621/SqE
PWZdoysnkx/hGNi2Lk5mGAz47s37ow/urIRYO7g0Wt3faOVkv/6zMHK1X3rW
ip53LJKTW9dlCfrkk3hMlh30uRqizZ+E4zYvTo7NF284aoa31UYcOsTJfNf9
89mz28HXbV7L9JzcFOLkWVn5JPpj8Dxy+eLb4ZlEnDzresrTzXIy7wz4z+Z4
LSP/q3ynxzByttIC27573PO874XmJ0a366E+mGJkInhnl2xsg/57cDL3XTiZ
iLfV4hMNieXkB0/vB+9vaS7C/bxk5EXV4bOsvExmrvouGm0yOVmbw+VeK184
BRysZ45ZOTm0j5KTYWY9g8uXwjOxaoTElitOlv+XOC/FwZaTT5qnxRBhPX+7
TttHm2w52bdv/udexjAx8lrJyaqZkop5cfKyj48N+95vqJjFZwhG/pWTT05Q
D/sk5/aXfdxiy8dXb9n7xXLyvDRM1tMsN4bIKZ9kTqaWhp4FfF07rXvu+vtc
MhGbJyHvCzQadhz5XNhxlbPVM5W/XouLOVbSGcv3RN5+4uTquJYeG+Lklz88
DnH68uTaYe8z+q5aI/vHGyHEyb4+ziJyySeNmcXInpPRCVvPN3Eyx1EaU6sp
9j4VfbW7qtmo9qM6JpaRUyyldSCvrPnFWM976Gp7XldO7lL3xUZfTkafbDXK
MU6+tHsYas/tHm2GgIPxuJD/rw+vzTvpubVlBO26S03qtkBzQaQ4eai896+R
F+Jk+eoue33mHbM8N/4UdJv7J4KTiaBbHfPNPDm56zTL7ss3i39Um/+n6m+L
lT3jdo0YJ6eOs9hbnKzaIFaDY/cB92fxUmD6ozs1/z/iYG+jyh9rWMrX75N7
j8eMexjy6QTHGU4+dXVzdHbri+q8sucXmlVbk488OdqgWg2+khNDLcklcPIy
mdlqk5Vbps8cPApzwqnSKLA/yffClNbHTePq+yztEU6Guy0Xi5NZJpqMJlYm
6ufL34KvnP0v5us7S7+unDgu65ou6hqkY8WzRq5WfPpaM1sdvlg7hpPh4x2z
/+UdkeJk/tewat1+5eSpGJqTlUt+1ThZ7WnR59u8A+0AmkviJHFy6t3hsvPL
i36e+OHl48bh5ANVZzqXa+eZr6Vm8bI9L6Q56LudTftx69oHlfaiLyeTl5UO
wTNuzvEityxOjm1j4OT9S2EdxcF8l3bC6itg5ZTOW/N+d+NJxcn8tp4f4mT8
VvBYob+49t/O4UEIanCLkyu/ZMvJM/glz6suySKYufK6MD4X4mT4VLliXQth
Lz5pM9I/KOR70feckd+a11h4bvL/4fGX8trwnMz2aV8+GZApWs+flw8Xft9m
Pyg332f6WTmZ/LFvv6c374/e/7TOyYTqhFz68sxo/2izdozFyPIuDuv2KydH
Y0jdRhsnn9R4XTmZoLYcofa/aE/3J5F+QCeZkxexDuQ2Oe/ow0WEeljH0/oY
vTe37N7Wv03Dc+onNUVMY3ASOJmYV60Ncsnsa/KpudP4awacLFZumk51RCyP
F7Um7od5Bj+Mcv/bPnd8ipNjGmNbX5yccxsn/2HrMAQMzO+gyXh0veZbKE6G
985+fhiC3DGcTP6Y9YWzCXlZqE51V9b1NSjnXZdknsxc5dJLTlZfOtUOsZys
ECfDqNJISHfRp01zbLgG21xyKpTjTnE06wTjx2rJoV0WI8+bk/VMASNLfz3v
YJnSw5w0ToaRxcm0O/rR2vZUHLtpTlaoH0RYt4E4WddF2ncXz+9fQryqnGz9
bLgOvG7HVZyM/8Wi6yPC5V5T9/PPi7m25cR3X98bbW1cCBoVGGmRnCxWbtx/
HbUXbVzUJfw0y9ZdKObNyejCiZzn5tg45Fbb1hEe5tjLzwJdsDg5MPCYVQlp
JuBfdBOwsPQRYuO2deT8s+cgemSYlvspASfrWId5lstWG4DT3io5uYrrBROL
k6klKC+4ipMzOXfRbLwIZq768a1N6lXjUyzvYeWVa3XsSu6z/fz4DuMSuR7E
PsTJNkeNFiLGyuIoPq1/BYxoOdkvQ5ycU0951oBZpVdZRMDFlpPV5zLXy8Me
41nqVSs8J8fa34OnxXEQJ9s+muSPdd1RfY9q/QbiZOa59Wg1xEnnKXLpi8zR
+ZrVr0pIQ6X3pbbdvC4BBw7NyTlta9Gc3NWThuvCv17M/h6htT5bwk+xLe8r
7UXueszznQicvChWrurRlTHIPBs8/dgmdBfqx+c5uctzhn03YH3dmMfzf9wN
DI0OmYCVd+6vVHlc6SgIvB3xO1H/O4Xmm9pGW79GIT8NtUVyTwT1pe32SbMh
/ta8LP/5unrMR5ycW6f6pLDxvJi52P57td/iZOtdLIZSzQi92xTbKPfMNF04
2dagwMtt/+he5fum+524Sd4aYim4kGXxyTlgfQjhU86T2DLVz2ze14Z5h9dT
sx/ItcuHWv/HOLmop3lQ5bx1TPV9VkbmOYSwHspNnKy6L/6+bzlZ77Rm9U62
YTn5JL2nh4mlReFY8kmbfx04uU8NlS7xS+Dk1YvvBr3ySWqz8wrb5sXkbDt5
Y+WO9TkUJ7dFipPbdE/kk0/Ss+fQnFzlUx2HDsXGtXmWnBxjXnHyv14chOeS
58+6XQPI23Dd4PwSJ1vtir7DyVZXDCNbTr760dshblw5VePk2H5LbSPPpQfP
tkNU7ShwcnEtJdAkw7d2GkI+y/7ZDFYm7xx4dvV+jW3RYKDFaKtTfdLZeEhm
9p5w1OggtD9hZOkwbN1qmMr23RO/cj9XHeic9sh4HM+qVnDJybrP1f2RC28N
+TYTlpPtfH9pnKx3zXAy+62tT6I4uTofx8fWartn5WRC2hbak+VkzueVvTsh
+P3hncLHj/aTkx8bgpHV3mjH53cvztQfWrXvhmTYFCfT9nPrc88a8/KEmzcn
/xICTl62/lfBNdhff+flTW45Wb6FQy9jFo3/SeDkLus/j3zyomo3NdXk4N5v
OZk8fpdaJ6otTX6Ya7vuDzZP6/vZsR9v7VwYrW2cHq2vFkGfWzj5m6/vhPVZ
GZ+3Cru8lMdcOEZOZ2GPM4F3G5qJU1vGx3l8P9W+Sb3DECdbzzfLyRX7mjrV
ryobd2HmKW4utSmWky/sbNf2ZVstZ1uzWjWnu7Z3eE36ZAJ2gQ1szTzv0yz9
rWV4y4ZtugH0F7ksf1LD5onloSdOzpnWj2e9MWbhZN0zxcgEzyW27eGZrO+W
k3Nyf02czPWk7X0G92+2Xz49eDn34WRNMy9OTnmTW9+Pecarqrv4JQR+ZyeJ
k4s6qtuj+8f7wQdlHl4odnvlGzEPTp5nvxWYZRGcTOT0/TspGuVZIrWd5G/5
JH+by8mqqcd9SJz86GFZC/rR9dDnzmoZmLd00OF7ycnnzv5mtHblVPif5wZx
MstgXgyfxYtFOSj664mT8ZFSjlKcHNrD+FlBGuhYO6l8LdYeVFys+O2VO6M3
Lm5WXhevAxt3zjWvF5qLSnexPs3JRC4nE+fvnW09xmJvzdfmNRXiZD9/H7AE
XC1O1vfbm+28Pm9O9ts5z7B1v3P87eBD1SLX9HbaITjZx8dfTGpai5P5j+C8
Zh2kEW5iAOkuiJs3/xpCw8TJemeWmoc4WXUB+7y/ho29nrrL9LRVtY/Y9rIN
v3LyrxGLL+9cGV0+99bC68zF4tt/3qtxslh5XstTrnp1ZT46JPhjHrWsCesN
17qdHTS0fn2Ztg8nMw19wprujW3PEb5OdNd92bTd6F1Smhcf4mR5o8kfrVrO
jw8nYfQUl2//qdJNhDCcLP9yhTgZJmY4nsmEODm2LcyLGiDkmaePY7d3hRwr
+t7pvgorE365sDJ+0rF5oGmutAVGY8FvcfKy+XXZzPzGpa2wL/T8wPvx3GNE
Tpbxd442K0YmcriwbRzl+tQ3MMYL8tqQTtrmtXM4edaI8X0418o60W25+KGC
/dS1X7/lZGku7Puyvpz88se9oHn5v65vj3jYtkO8fnkHr/teLiezby0nr187
VcXZy/9ZBb8ZR9dL3/7I2cLI/r1Wrq6B8cjJs++JrvtKuiI94/htTnGy7xs6
r3fcv3LyyQ1xMu91l70uCtrgN2PuIngvOK98t9r71ucfB03ykF5C0rzOk5Nz
+/L14eSu6+3rV4uTm6bpwsl9tmWyTf31ZVy3YFF9FyvX+vKVjKz+dmJhcTKh
nDA8/Pn2uep/PDBYP/bbxbNvhPEIWJS8Mecl89R2o7ex6ydOvnzuzZofemyb
m/aDOBmdBHlhPj0nq+9eEyeTk1aN6oqTVVdkRt/k1yHEyTDzm6t7IXLbIm1O
nAzfoFVO+Tt4zVJb/g7OEiPLwznGybZfn/J6Qf+xeaaaT99zLRXyLJVexA8T
J7M+i/C7IDfKdvf1a+DYML368fX1upDniNeyEzCxbXfyTxYnixXZZ/BjGyer
r2bqPYPnZMLmoYnLa38c/ensn8J4npNzPOWJPpxMm6E9W06OsS7rEfPH43ix
7d+UvqDz4pFfOflkB/fuk8TJiwyus/PgZPWLmue6d/W8yAlfXy03vOdF6AOW
ma/tsm7Msysrz8LJK6Gf617lnWw52da0C/oJy8mlN5u8KMTJTPfi5V4IGFmc
/P+zd67fUVtZ+v7/v8+sWatnpadz7U7o0BNCkgmGpME3sIEJNgZiY24GEpLQ
nRDSk9+n+tVzSq+8a/sc6ehWVUB9eJddKpUuR0fSo6193s34PHyoEfNbTtYY
Pu49npMlcTI5EeQz/yvUkTy53z4PW8dJ+RfiZFjX1xvW/MS90XFfvzvFL/yW
3OTSC26B6u/NU2VcuWgPGPkvmxPF2tqLNiamjDhWYpfYvE1z++Vpps/KVU55
xEmrhyujtbWPguDYLpzM/sUYSN4MWrf1+ud//Ybvh64DoLFesThjrmKc3GY5
YmRb58Vuk2VlX2cEJlQtkRRzKkehqi+k+oaOCTVLNh+cPcHJYmfL05e//miK
q2PbRJs1zW0WJ4uB+V/b58dEsXzrTR7j5Ji6eJlLS05ebP3r14dhPN/z8T34
eeI+/DqL8+6H7/dCbL3f5Q673bDbItVTHDJHWfF5cXIdx+fMk3OMNFZOnEx7
y0tY+cXWm43vqHeHrIcxXAkDa9y36ucxnZgwnCxWjm0HnMw+KT/Y8i5cjv+F
zR+GlcMxiYzbQ6pzfewXN6nDevo6OYzHcWH/e63TxpRtDRRNs5xcsvIbzskl
K5ex9UnOMh7UtgZEdX+dHA9xMrFcm/fah+TlIJ/mGA/BGPpejOz9HJquNzx7
RvZFXKrcCsvCyrOgn86CkxWDlTdflzbuyskcA8/qto55XU1lMbLlZOVAyKMw
l489K4uRxcm0FTlC1DVBLFv9jPhUjJNzlNNONk5svVvk31LHyXzmXJOfMn/9
ew1+x3526VtLTl5siZMfHmwGzXt7Zq1wn//5oFdOhueGHrfyJnEy8vnKdfM2
iYn7eVXXQ37Fmq7cCTGxjRlbnzZ/HVWdeFgST2HLyVIqTg47w+riZMWw2S79
Dydr/pDbUWxzyAU08XBJnnvlGL2Ck2E5MTJ5GJaT7XsGcTK//+XXW4Um66Df
w9qojCnjGbca93R9kzTFyYzna8nJsIVyittyMozwS8QXTAxn62xZWX86/sJ5
cJXNO+3CydZ3gP2znGzn17gs9XMfE+9bqs0hxuq6vC6czLnGmEs/hpBjYnO0
YbpU/q/YUceZa5Lq5Hbl5Nh032/EyKoxTpy5yn+jipd3v/mi8nvyqmOcjMTz
bA9tBe9uuhx9+zwyFCf/8P3OzDiZcV94afOegb9oUfwc5qWc/f/q3HsLxcn0
xXAvn9Gx65OTYYe63Nw+BPss0vMn22PrI/ettjVbso5/4W/MvfBJ8W5PrGz9
HcSc4uQm6xAnsy64VvkULN/mMXjBvP44w8bi5svFOD/rS6G8DeUKss3yuGOf
vD81f/FOFs+pBnUsh1y5F6njAydPPJkfHXvAFZy8ZOWCl9eOvUAUV7551Gws
tWpZS43P118Pk2PjUows3rHrXVl9J8TbUu8umgomYR16DoBB9CygeJ/qrqg+
YNd15vhkcN6Kk/usJdcHJyuXA1n/uhQnc1/V/DCi4vTi5Kpc5LbynGxj/9Qq
uLj65+w85cr2THAyuZWX1j8cnV17K+RTn1v54+T/4vP51XcnNRQ2Pqnk5KG0
5OTFl+6n9JE+l1uV01OlJpzctY4fz7Ps+w9PbgR13eclJ89p/T1w8oX9U6W2
Hn4e9UFrK9hVeRdwMrkR5JjX/U6c7GPC4mS4GGm696SAiy+svFtysuqVsDxf
74SaBJ6TxcpqX+Zj+anxfGEbCk6e8oFbcvIUJyueLFlOVj+p6heeYxufLzWc
XBczJDcZiZP7qlUlTtaYLTE734mTFRtEOb5sqf3X/zmMjMgF9nFtL+X05o53
aZt34ev+0S7Kn677LfdXy8m0uX0fwD70zclW9jmDduqTk6tkvVpoLzGy52Rx
NNM03XI3n+X5Ycctdtm2eeVdwMxDeXi8buI4//zD7dGtG+d7XW4dJ3NsbA1f
TfPzVC2jD07us9aI3mFXrrOFb4OXOHlRWBnmU87uvLeljeBiJE5eWZ2MnbMM
2kXKUVaeRQ4ns255YHhO9vPVrV9sK04uf1uM+RMnv315kjchbzixsnj5/35/
EMSyYmMFtZ5L6+fKHIPAhssc5ROsbDmZ/Iv1byesmcucGuPWV86B4qqo6r07
38HIH5798+j8na+CiEX2kWsG+7JfMKnixbZuN3zDPNwzcv2LrfRsYHNEctgy
V7BeLie39bqIXl/G7WI5syrvTPkF5ApvPDg3uvds2sfbcrL1NhmKk+XLzHHt
i5VZjp63NM1zsh1zaOcj/4PfXy7qyOi7Ok5GG+sfh+merevEc8Ki3MuthvTm
fdUEIw/ByXWynCxWZloYWze+/nG9rLpndGVkRB/vk5NzGLgPTsb7AC1KjrK8
6l5FTj54thFUxpOvf1hycl/rECfjTRGrOR2TYsXybPb9pmrsd8rn47PT/3HC
Axr/Df6SkyxO/ujq49IfTpysey/1w8MzRLEOsbGV8pyt78VxrsHrXWckl5MV
U5YXhuXknDFp8nvoIw9Auc4ax6R35Cyf/62vMp/fu3Iweufsl6NPd1bL+n59
jcmwnCx/YPmgWU5us2w4meUqN7bva4l8qHUcq55f+mLk+Pl/chr3VtXvoo3h
5LXD81OcrGcPHWsb00+9Z7B5PzC22DIWl+aZxF63GB9FfrF4vK+6HpaTbY1J
sa/2TdxuzyHPyXaZvr67j+GzHOZTfE+5L3WMjIhdkxti1ZS3u4579HqdOTmn
NsTUOfXiXtDQ/nC5sf1cTu5Deh7sbR97YOBcPX82u5ymqf6SiFUsCidTv1m5
xrlj4MXJ57bfC/U9Uh5sXQQji5Nr862LXGjOSXGt35cYJ4tdqzjZx5/FyX/7
5lEQHCdOhn1+efEoyB538rM9GzPd1gGHkwMPjvXWl+tB1gfjTZdYOXDy+P/3
Nw+DJsyZ12/3nx524mTYGLE+y8k+fixfZdVr9pzc5bzA6y42Hc5SnoPNmWU7
c9YZy6eAafrML54+Hw+nfJ5Z17w4OSbuv7wzUj6yOPngyXa5vT5+7DlZeeOp
/uk5WWM9NDYjPDsUHMDfoTiZ9bENti/Lp0Rx5RQnS/Iq1P5o/qrc5Rgnw91I
TC3vDP2mKmYfy43uwsrfbJ4JMdEubTtUXYhZqyknh30fczJtyJi2obbL9o06
Zg51ehkz9ePjopZQ3phw+nZujR+pL05u0+7ZxyeyT4vGybClj1XOQ5aTYV/v
GxzTJE5wzMltvTuqriHkE8OXcGnONuFzodgzHK/72/N/3DrhxYa0TOaxHspa
D8sTq8PK1EfxubCw8YSTp2tY3zzaCcvT/ZH9mPJi/m2aB/afHI5Z6m7Jyf+1
tr/MT950Na3FyYVPHJ9hZJTKHbbHHEZG5Da3eV99HAc+9luTr0NMqjUCI4uT
ybnocq7KEzr2neVk6+eLcjk51Ck2eSlaxpDXH8vJVc87cDLfw3JDbk95jhac
zPgt9TPxma8fI/VV41D3ZJsLy1+uu+QD29hs33nKdv9inCyu1XbZ3PUXLw+m
8uFzONbKxuZTMfimnNxFvH/u6935PDXPfOqhOZnnSnkQDrWflpOPPbw2p9bH
eD1yTPSMlfsevE6z5mS4tKnvQp26jIdbBE6mj01iCKemVMekV+59Nvp8493S
M3lITobfn1SMB9JYOcvJCFaGk8TJsbohfj/ttI3VM0HldwUnW6YWJ1NTT9t5
+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
sKyM39v7W5N5fvjhVpD8k/9+Gw/mg8B7JStfvLX0TY5xsmqNmM9/3d4bfXBl
7wQjw1Tnbu4GRj54cjvIHvO+zy15slkW8KyMxMnkLl0fPyMpx35ITrZ5tZw/
8sq126V98GOmxMk5496aqIxJFu9iVd8ifQ1Keydru9v4clTxK/xmj6HnZKR6
Ltp+2lc5uDFWzvF3zeHkJvuYc+8VJ7ON9FH7m5/+eXsqf0K+cFWcDCNferA+
2nrypJTeU/A9y5xFvkgXzYOTX1eR07tu6touivrqe105GUYe4hkpx083pkXh
ZOWPWE7O3Z9Z1mZB8lzz4+RmJZv/ybX59Nl/C8K7OYeTj9s8fk+0fGzno6+I
k9XfyFuGlcXJxJkRXEtOsufk9zcOS07mN9I3Nye1CuBk5oGR7Ri+eTPpImqq
zkjhEydO/uzmSlkTA4mT8S1euXlY5pvS5mEc0gCeDjmcbPs08zcZB9t0bAf8
RpvAkfCJziHFbz2XWk6mfWz966acDLPy21SMONSqLo4BLB7jZI4hy0F1NUba
jlur4mTrT6a2s2Mefb625+SYutT8Fic3+Y28ZVPf4+PGtVJxYuWjc51VHCXF
ydYvztbwUzzZMjJimr63nBzbrq780keeL+9PU34Xi8r2iyo4WfHi3LotQ+dq
c+7H8qTaCEb+4Wn7/JyhOLmtFoWTQ4x9zF3k1oqVh+TkKl+1VDuRfwAboz44
uW67Y9u4c3A+5E+rVrZyjvGkg5FTY4v4DfPVeS8j7iU2tm7rjdB35berdxr4
KP/8z6PR7cPbQXDy6b+vT9jZeCAHre6HuhiWkclbZvmKQ1tO1vi9JSs7Rla+
hRm/V7Z1ob/d2Cz5C+GDwW8tJyM8l6/c6zd+K56DC8kB8Hyk/B/VlxYnw39H
h9Vjj3YfPQ7ynKzcKX8OwIziGp4JxMm2njXbZNnS11nmd97HNide+0vhn6v4
a1UuheVk6heqfrVfnrwuqtbbhpPZvhxO9n4Yaj/f7r+P94fYPduinF0do3ly
sjzrUt+zP5aRPSezzXbco90HPVtZXwvlfHtGtpw8NGf2ysmvgX/yIqgpJ79K
6sLJizh2cxE5GfXpIRFr96bxd+VyX904E9oLTu66XTmcbO89jHEUJyPF5D5b
eyuLk23OXdW6LSf7OiR6xuN/alGLk4OM74U4+XB/K8ScFW+GkwMrF2Py+CtO
fvnrxBfjT6onUvAe9UWWY/imVXp/FJxc/t08Kj/DyZcOVsN9H0YWJ6/uH42+
+3k31OLjOIuTQx7MP5rXHIl5MiN4D1lOtp4rlpMta1hOhk81vlbTYGT2I7Yd
yoe1uSR6/21r3IjrbKzTsqUfm6blWY+CHBa1nJwThyZmrPaydQAlPUvkHBe2
te/3BKqbbKeJk1lfysfCcrKOZ1evtjaczDqrngUsJ3sPN9XE1jhUe1zFuSlO
vnw4zclXH64G+VrbixyX7ZOTUyy0iIw0dHsy9p66HfPenj61CJzsPXy7CPbT
8Zp320ri5D7yKaraPHf5ykVmnJnl5CHzPfBiI0fCvp8+c+bfAw9f3j49xcr4
XMDI3qdDfUV+dnjdNfGDq2ojTVdMknwMO6+8AcXJp7YPp/wv9JfcZmLRSJwc
5oONET4XS05Oc/K4bZTL/TbPIAUnH9f7vldyMnFk1RuGT8XJOobUr4ZBczkZ
ruZvKq9fubyx8V2+zrFyDGBkBAvyvoaYqs8/YPvYlxN9csyEYkzFiZnOOaJx
bXAospzMd8Q9lRPNcrRdYn2mqyZ3eE9e1LTOGdOgHIpYHUB+b7me7dko6klY
xlUeMNPrOFnPLYqZ93ld8pxs4+7WA3gWasPJqG4MIazKfqquh+VdHc8YJ+te
Q7+wY0DC+PD72+Pjeq7kZFvHMIeTF+Ed9DI/eRhR0wMvtSFrWc9a+ER3Hce3
SFpEToaRyVMcmpObSFzMdQKvC/62zQnPEZws/wrlSYiT93bOB/Ecytg9cXJ8
/x8m48ypbVdORZPtxQs5lS9KzBlORjHmg5VZ39d3jo5zktGlbwPnzZtJF1Gh
bVARO4aR3w5x+kfH8xScTM7yp9cPwrStw6OS/fAdU74DrCNOhn8Pnx1U8rJy
ZNRfYvPEcpM1bkm+ZeJay48vnn8bBA+Kk72fb4yTkWLFqfwGMbL3G7DxbHEy
Yn7GcSHLyRobgOo8asW4iDa3fm9iTM/J/BXj6lm5ipMtr4uRUV/1NcjbRWyX
z2GM1cpoKti16djNtpxcJXndsT8pTtYxte9G7DImuWnfhvkVQ09xcngWe5rn
3TdvKTd5ycn96nXkZER9Ps7RIdcxq/cPygWu84ab5fsQ4smz8lCOKVZH13Ly
LI4vnIzECD//cGsq1yNw8sPPy7F7qrFtl6GYszjZs6//rDohbTlZdanFT5Lq
i8RiwvjGaX1wstiuZMElJ59kZOLFjpOVz33CFyTkukyeYcTJep+PLCfjs1D2
nRpOzlHV+C36Koxc1us1cU8xMnrwYKMR67E/VTWfxZDiG/GKONnGR5kmTvZ5
qvyO/Yv5F3tZTvbPq5aT7dhcy+12rBzfWU4WW9r9fVrka8mDIifmXfe+v6pG
oT3O8k1u0k+UM1yVux3d5nF/DTUSxr9r+p4s1TcsJ6fGJ9bJc7JYmVxmy8m0
W47/3KJoycnDiRzlPuv0LYLEydSwHmods+TSnBzl2Pb0lfvhZTmZ/2EoYszk
5w7ZDuwP1zfPyeRbpGp3DKlQd8Nw8oWVd0c3746vVf+YxNo9J8eut1fufVZ6
31n2VY3B1LGGd9tssziZ+rbcLxRzh5NjzIfnMr/DQ44aJCiwsaktssy5iLAy
jOzG8tkxfeXzxfokr4KcZMS0+88eBy7V+37YjHzlH3usl2Nr8qY4ucz7NLkN
Vgd7F4P6ionabbO5H2yHxjtqmyw7b9/7spwPWU5mPuVyxNYljwz5MPuYq55V
+J/zUQxvORkWZvuUG+I52XuHMK9l5C6cLO9R1dWIPRf449ykjhF9r46TY/5x
8s8bgpPtsYrFz1PiuqnxnvzVew3V6GP69pODoOP3Fa83J6vG+RBiTNO826Sr
lMuCVlfeD++IF9kbsIngJhh5KE7mfGvSB2yd6DZ8vShj+STltqu2nDiZfAfy
XRHz9Z3zEO6dB6dL7lS9Wo73rDydvQJnFuPkxMlcg6kNqO2UYr+3nGxVx8ld
tlmcTHwYwc4hp6KCk7+5/yh4xeF1UY7fg5PX9ufOpIuqEHsf83LJx/KJK2LN
4mRyKcTI4mTvmWw5uWscGSmH0+YgW29Z+1mcjMTEbAuM/O3uV0E21t1VMX6H
YSwnK94MN4mp+c76YzCfrWkdEzkWmjfGyVbiZMWVNf3q0fYkj7xg5Lr8ZHFy
H7nJlpP9vVt5KF5NOVm+EbHrka8DXV4Xx/1BtXb5Xdu6kV7ydbYeKeJkjT+M
MczeDxPd+/5x+Vv1mSpOtvX7TuxjkfO8KGPbaGv5VXOPtownUWsO+WlDbE8f
nKxt1P6k9svum9/H2D4rlzW1rJiqOPlV5GY9y8JPQyy/zXnRlK0tYwZOvr2e
/du+rkkpwcOI+DF9jXbmr6bDyWxzH/nBIQ/6t/shx0GcbFkZURN6lvVPYsfp
2tano5XVdyfbHOHk1LtBxu+d7CsPBz+GCF6Gj/XXc55yLpA4+U8ai6a8giUn
13Ky4splmxX5GIoxU1vEcjJKsXDXfjFh8ONley6249TsuD6931Y/hpPhwt2D
C6OtK6eD+uqX7CP8qnGGivla3zexnjjZbrPdlyacjJq+w0fiZP7P8bqA4/vw
QdX9OlX31XMy7WTHT9YJ5lSeSSquKsb07G05uY9+K1lO9tMVo/djGUNd6gpO
ls8ygpHJu+Dv/WeTbVbut312ZRmvEyfHPnvulFh2znf8v769XjKp36bU59i2
98XJeIH8NL7eSoq/B1Gnzn620ws9PNgMIgcDj2XyFp4e3XilOZn9wf8utwZn
V1WdL7xbzeVkz5cwZ9u8Ai2rDa/Cpn4a+QVInBxbH/GlPjmZc4O4q4/PIvIa
4GQ0j9wLCU4OzD5meHwrkN1Oe4+pa5Oh8mXi6zrmZWLMb19+PMXJiHiz6lnL
N87mXcybR18FTTFyEUsmZxlGDjX4jq6WrMxfz8mKPXbhDT3z2GXYvFbLydZf
LZYHCjMoHwJG5jxtUoOkTuJk5WWL0b3/hh9DV469SuSKxATvpzi5imc1fjA8
SzxYD1wZ42TaSp6+4tQ+62rH7iuKt/vxmU36j/K1qziZaYo3T13jCk6e1XUs
rLPwwYhxsvhX4nu1j4590Pi73WcH4TmwjpPr8t5nLe6T3APJpfXy7Genxea3
vzsxzXCjVLmMinmiXFqxXWLZnPUFJn66c/w/XNyCk6Pn3POD8DxCjBDNuq/3
qUXhZLio7TuIkOda5DfMqt2UFxnjZGlj9cz4WSqe88c2488W40Fiw3nHbiMs
A/4UJ1tWnlzjJpwsVp513T9pffVU8EgWJ9t4N/9zv9F9BjF2j7wKjeObVd+k
D1b1Q8/JiHp94uSSkRl7VnDyvPnzVVKZm1zUsoaT8bkgpwLBZOLkE+dND+/o
xcil97bxaZNWD1dG5789yciKR1qOLPOGx0y0t7NS5isPcT2yeSKs87fxtYe/
8nb2nNwktwAmtzFFTaed6sYBqt5IFSfDVLSzOFkM20detz+nqV0de8bpyslV
tdPFyJaTibOJHRQD7rtfnDhHEjE91k0s2XIyLEy/qeLkquVq7N/Q+9REqVp8
VXpVOHnebeu1SJzcJJad8i/k+HyzeWau7e05uUmcFRaFk2e5vRo7VHWvgQ3x
dEjtLzFl/B+Q+hLnsThZNUuoMQ0T+1iUfPC0/8hyMr/XPR9mV/y6j2PV9Df4
wcVi3ei7n3em2EScnPLAGEITP+/j5zh42PPyyt5RGKv38bVpTmYavnBvX55I
NUgmucnH3hfhuwVg0UVXmYOxVoztGz9z4F2hvALyIvBUw/dCx0b9J8VVdqxZ
3vld1Gt0nOxzMLzgZ3Gy/DiIhd98sh3qdQzByLoeTcaCHZZtIb83cbJ4lvmI
IzfJl7Y+cFaWk1OxaRhZ7cZ2VnEybdjUW62pWH7q+FnP4Copn4NjjSdEm3p0
GsMXch7Gy5hVrMpK+RlVnMyxvWy8D2Mecym9Dpy8VHfBNhc+f2cu64Z762Kw
1N38vYizVPl8w8ditUV5NmnKyXBn23URD8wZ+6M4cldORhrfAyfDsOwHecvE
h5HlZPKGNB2JqbX/Wh7fMT/1DSwnM23Wx6Wcf8z9MU5WXBlORswbxmo//Hxq
vllwshecvLY/0aRO+6OSk49jnxOJk//2zcHoL5sPjv2Tx5xMLQ3x86w5eR7r
7IWTi7F8kzY+5mT4Ru/xxcmcs/JQIL7VJyfrf9UnEydbJvaMjIibXnt0KdQR
/ODK3hQnb+x+MtpaO13Wjh+i7xKztTkFvq5yG06Wp8eJa9h4WVwHNS7Q52DQ
7vLP03NOVX4y60j5bvSlFCc39Wq2eShVnAyDPo2MOfacPOQ+p2Q5OeyT4WT2
S37y7FuoW13sM23V1ANvEaT821mtb1Hysucp5SxQtwP1vfw6b40cTub3Rz8+
Hl9/7pbivZOfT7FkcTIx8lcl7xoGRG05ue04A1+TuZz+8FrgY/KTVcO68hiN
udNyMtP4HN5VME6+8DwWK6dyOcTJxJ6Vi4HIzZgnJ/O88MXWu0GWf5WjHHyR
fzvOLRUnc3+ljevq6fUtu1xxMvnJf7/9KMqe8lye4uQix1acPGs2nheb96L1
Y06WbwhjJLmfW79Dy70wMqpi4arv/DPy/tPjPhDLrYhxFvkYMDLaPrpZcvL7
m4dlzFW5EUMxMoLH7HZV5UTUcaF8jGOcrBorTE9xcrguFVwuRo5xshjacjLH
hGch+96gqzSmbtONaWxT08Rysvw5+N+3AdNjnDxEjZEm0vOl2kBxfN7nqVaj
ttlystqK4yrGJm4k77tUDsa89tOKsWqvMycvSjtbWU5e1P22nJwzP/VU2Ke+
OFn9ZMi8WI2bgw3bbmOb/sw+wawvxvfnFyZXS5zcZZ/EydHtTXCyJE5GfeVa
dBGcjLwHh1hZzxrTcbD2cWR5UuXst62frr+Kw6tvEEdW7TbixjE2/ev2g8DI
tlZGyE32NTOWbFzLyJaTiS3jCSdOVi0476nbNTf5xJjAl/fLabmcjNYebgVG
lmBlYsvwvR1nd+nSB8EHI6fGR1PZ+LeWT/vANfJaUyw5l5NjHhBiZNVEIaYq
bzo7RlCcrJyLFCdrbLmOJecbuelDXJM8J1+5fzKOQNtUeXsoL1k56fy9XMTN
7XziZ76338HJXOP9mLo6KT4Nt3aJ6SonOoeTVUtG3hfhuenpxAORbVHt6l9f
Pgry61oUfps1J+eKuD3qg/fmvS9W3z/63+B7MY+cojZtl+q/yeM2Zv9rW2fL
/PK2654FJyNx8iw9lMXJlwuvN4m4L9PreHYo6Z2u8jn6avumXvJsA37JiFjy
Ca+6Yvye5ueaPPEWmHwf8yKN1eOL1R5E4qiXv+8G+e+Vgwof3zw6LHJvJjk1
+i0eF5rv2uHdKU62XAonT/Jpi3yMtWE5+bViY6ep2iMFJ+vZp0l9tqaaGpdk
OBkuF+vkcPLG0c5o8/F+0GRs2DEnq3/BF3/f+vNU7Y2mNeBOnBtFPrTnZLWd
xpyJkxUXVN5ALBYsVozVqBMPe9bX9Ng2pnIuYp7MQ3Ly5Pz/toyVx7zxtO/K
i0CKHev39vlHnMz/LE+/UT6vZ+Q6TqaPW07XPJ6Tq3z9qrjJMrJleMWEbQ62
rV1DX+A5I4eTFynvgH3h3jxkXLPLti0a4/YhvDTo4+rv/vvXoc6Kjh1j/Iau
cd2HiOHOkpOV72E5ed6xWwlGJ98iHMeetkn3+CeZvqbidZ9vYTnZX+PFyVVj
x61yOBm+/+XXW9FrNs/w1NkTJzMPdUOUm6w6I2uFv0K4d9+4GxSYbuOYW8sx
ewPFkl9nNp7i5KINrYjLWu9XuDL4sybiyE28HCTLyXo24v8w/q7gZDFPrM4H
jAwbX3n6pGRkP+ZPHg7i5JXVd0bed7mtaAu7Tv7a9hAni4fstnmO07mu38Q4
WWMHY9siHvfTU5ysvIzp5T8+UT9+KMVYU/4eupboecBzsu6T9BHVd1FfUZw9
xcmX1j8s1+P3P8bJOi5iKv5yDC6b/O+pZ5aKnGnVHFFtGI1JZHmbhe9hFSej
y0XddlsXchbHq60CJ38/bE3cNnqTOFk1afj/qOfzex5t+KpxMoyssW2zEutT
fWrYtA8/5D5kOblP5XKy2uHLc39McjI5F/b+JEam9l4OJ+fGt8XJ/P/y97tB
OkblOJViey0n612YmDm0a5Gnwdi9wMbeG3m9v3rVbwoXxzg5xJRNnRFxsmKv
8EAdJ8tLrmufh5NhCb17lk+W5eOtx3eDxMnU1bA+bIpB89f6Ody+//fAyl0Z
WRLPi22r5rU+y8iei+yvZetYbkgVJ4eabx05eV5SPgLHWP4XlpNjLKh7pTyH
LScjf61iOWcv/CEoxtFaHu2LL7GfTh+CaZUn7DlZv5EvoZ7NtBzFgOVbkeJk
W9OxyifEalYed220qJycK+5P3HuGrKXdt2BlGBKRq/y6cbJ0eLAVNM+2rvLq
kOBk+aO1WUeb2hWWkxdJbFcX/4+YlBfx/B95Y13Igzl7/g9JRkb2uSK8A32Y
Xx8yl5P/3+/Nn/G0XXAyceYPtx+N/vbNRPQTPlsvuJJhjddFmxojbyobn2Dl
1bslIyPyvtcOroZ7vnhAnjM+zik+TbGnr6mcK8vJfvwejAwfI/IumA4ri42R
4m74pMEsMLI4GR+MvnJJFDO23BV756JxhcrX8Oe6YoR6JvCsXLW9qRySFCcz
/yJwsmVky8lM0zsMy5s2rqvfilGr7tniZPuMAqPCu7H5WWbIMy8Y2XKynnUs
1/LZ+7TY5ybPyUFPJjUTbXzZM6/G8dVx8ryPY0pwGtw27+1Ai8a6ihkNtr/f
7Q1W/3kRhF/D3u5s47ReOZys8Xyz9FKGRWcdw/aKxbCfHu2GeHKqlkkbcf0k
1qvreh1reE7WNVyMjGwNEbgHTs5hZVi1Sey+S5xfnKwxfdTfEyeHsRf/N/GG
4ztxcmC9ULO6PvdiycYJTlaOchFXFifTD8UKxE8tk8mDoY6TxYZN2ZTf0P9t
DWg4GT6GlVVTQ5xMfJnvy3Oi+C0Mw7q1DFj53NX3ptbVZw52KjdJ+2TPQfue
vYqT26jKE25ROJnt8HxIjJV28OzbJn6lOtcxr4vQNwvmnjp+BSfHuFTHh2Xa
nGjPyRqLSb9Sjoj1Q9Z1XcuLtUOMk32+/iLnXiw5OS15Pgy2vwUn0+9fhfyE
phInc1zlNYYnBmMZm3hwDi18JtCsnlmajBt88bLbGJ0m4pkCThYr4zXRx3ID
DxacTO7F7WerlfMr50J5F/YdnjyT29bam2Xd6uN1TjgZbsZfGYmT+X7/yWGQ
2NjWX67j4iUbR1jZ5F8orvzX7b3gnfzZjbtlrrLN0bE1QYJH8JgBPSPC1/ad
eOPzvmBdX/NYseIyDlvEmOFl/U6xbr0LZxthZMvJYpXY2LbG5+zL4zF7tBWe
a6nnW52f4ifPRF3r46W8Lnq5NmXyat18qTGiKU5uK2qVxeqTpThZY0iVX6G4
doyTS4+98f+qE2I5Vs9B5FbUcbLfPt7heU6PxZeHOMZ9aJE4edEkTu7CynWe
HfT515WT2aerW+cCJ4uVxcl4YjSNp/76crhthZOb+ky0uVd+f3R9LpzcdHwo
zzh9cTJSXDaXkz8/+5+TmtmF14U42S6vqY+Gl3KG23JPk30nd1l+ybG6NHhi
yBsucJ5h5SUXt+Tk1cmYSc/J1uPYnsvy4EXiZF+7QpysuiVN+kF4r1LU87WM
jOB0WJmcZSROps4IvheW4cXJfIaR0daV06Ofnt+aMFkkH6KpxFMh97RoF3lf
+JxYMbLGosVil005WecjOd5DMXI4NzP4NWesVBUnN6kTyDWtqg52jJNt24rL
Veua/A/PycpDF/cqj0Zj/eDk0NeK+LIdL2o52Xrk2fGqbEMsh8Jyd6o+5dA1
FdtqycnT8rkWvsZ7m+VV5W9w/nEMiGUqR7ZLrDX3fj+rnHlbp5vYMj7L/BUn
x1g59Z57KE5W7boUJ6c8alrFlFp6NXcRXNamD1/4/O3A9aivbeHYVo21e/hw
M0icrHyLE763Yezcw07xYf1erDxU+9P2um9N7kXOc3e8L+Jk5SfDd2+tbJec
PG/2fJWkfIsyJm89MIp5UscKHhQvfH3nRsjZsN9rfF/b2m/wq4+pIfq5OFn5
yvxv8xfkLaxYn5jUcjKc0ZWRJbGR1imu8X5uNmelSr6+X0x46YnF2Y+hOblO
vGPz13+ej2Jex8oD5nlCsdkqvk59p7h8ipO5p8oPUArPTsVYOnGyaqOwrLpn
OnGy8i8sJ9u8DG2b/CqsmnBySotaq29RfeHmJe5psfhx2/cmuZzM/+LJLtuf
c78Xc8yihjrnNPLtx/mOjzQ6kbuVyAmV11af20c9N3IMbL0Prz69HOfBybRl
Tp62l+qgXPzi3cr2abotVe156fIHo9Nn/y3kJ+89uTSVlxzrE4vKyXZb9ayt
2Lgfq0Sey9mrd0an1neDxMnKU87JVV7KsXIRj59iZfN9Tq155DlZasPJivPa
HGUxssZQ8Xf73pdT38MmcBGcoVxR1dYJOcrX/hJEDZInj+Lb24f0vj6WbwwT
VvGP9jFnPWJkBH+urS3W+3hxsr9vydtC7VEXh2Yez6+Ky6diq9S85X6qPiBG
FieLYWFWTbce2/wfu9bJ50Trt+8NrP+KPZ4pTmb9eCXafed/rvtXH66G32+a
PCP5fCw5+dVR35zcRF05OXcbT8TmTPzaeo32uW8xTmZfnz+7lb3dqt3Q63Zl
cHIf0ti4ulrUQ6jLeDxxMrVH+toe1TFU/B7fD9XeEyeTfwxXwsooeMIsgG9e
lzYXJz97dj3oH+O+j8TJH13cHn2xuTH6U5EvULKe8geWyudk4slF3ZEyT9l8
v/80n3P7fIbStddysK1VBi9YTkZwtVjH8pHm5/fEcxedk1UTsW497BdxZLXV
POPJMdkac/7Yqm2sJ1usDyje7DlZ917aSznH8qiAkS0nsy6fB676J/zPd/Lb
SHGy9eiw3KoYss2Nj3GyH+uHVDvE7hfrof/UcfKijuUjlvns0ZKTpdAvTfxX
52qXvJkmjE3+rv5vEgPkPUtblvd5Hrp259ZsSO2z3s+l8juacHJVbmcXsQ2z
YNchPIlnJThWnMxfnq27LjPEcQ0nr6y+O7pw/cPR5xvvhmumOBn98M/juo6L
4jPdVPAw+7e290mQOJm8o82ra0Hi5JB/ofp8+DcsObm5xlz81vmrU17K4e/m
pLZ4E07uQ+JDy8jWd0CsoPpssbxNWEe50za/U5x8bfvToL2dlcHGSafe37N/
dZycW2tbHDdLTs59Z2hrNrdlOnGyjzfrfst3MU7e218LUq4i8/u+EuNke/+N
1ayWt3OKk8nd0Ho0z/lvP516xhNPszzPydoGOPngyXbJ1fI+Um6I6pzP8rzM
FYywjCcPqzac3JR5u3CypP7cFyeLlVOczHiEtn2vL1a6tt3v82vME5l6f33m
+DZRX7Ew5c5bTu7C/rQJy1IcWZzMdfPbp8fX0Mkz6oSTbT7yItU1TfUDJM9B
cTI518TM2X/a0ebon75+NHr/yqPAyWFMX8HIfdQeeeNUcDL/v33pVpDl5Fmf
g+Jkn3dx/tszJdfID8N+Lx4TC8tzwsYR+R+WgjOu7n42GCfXjV2syz2tq19i
20v/D+l1YdWEk2PjE1Wzvq5vMR9cSG6CfdbRd/y1vhSKXYdaOeN75e43XwTB
kzFOZrmKDcOqPq4tjrbTLCfrOOmZjXUQ+9VYvypOtuvgO+2PcpuVL+3bE2l9
S05+MwW/kseRO46qLSf3IfVjPfP3cT+pWkbM32ZWgrPhk744WXXsxEf2uxye
VC5Cr/v42/3e89C5XjC+T3kkbVlZnKx7L/z74y97JScjf7w0dk/TeO8zRLu1
FTkq1NtWXjf9ABa2EifHfg8nS3/ZfHDMycq/WOYpZ6kcx1fkXMDI+FygrcOj
cF+fpedu8J19cjtIPCVGRjau7GvxyUtC08TJ8ruQH7Q4A04mnxe9eN4+ztFU
yheo4+SmYwxnmXMR6km/qL732vekyqfleMY4mXs/34eaLEXcSPFZcbIf58jx
VewVKZ8lxsnqW7G8CL7nNylOZvtV708eG9omm3Oc4mTl+9h90DarPrViyvY9
Qh0nt6njMwstOXlYNfWusnkXfYnzMzc2bDm5zzbw1x763Lw4GX6B9S5/1c/4
ENgIXhQL+Xp28+Lk42X352vC9ULth1bOvlXppwer639i6uS5XLz0QYgf7xyc
D4KT4WJyLZR7ObUM8+7A/g8nPx4/g+K5hhfKrHmZ4265WJzM8cc/RTFjm6dC
bDz2LmTCUjeDQlx56/FUTm3g5BZ1+t5UTdrrODcZXziNDZs1J+v48lc8FWMb
y8liZE2388mPw8aRxS38hjF9Z8//50w52SqWN6J82qrfxWLgQ3MyXKf2zeFk
ye4Xx9PGT8v9GS9Hx8Zysj3GPhasNhIji5PhR3IUL6z9pXwmUZ+ChX0fESf7
beIz01VPTwzLtsQ4WfVTrO+bzaG2/VjLinFyXXuq3rnPa14ULTl5sTQEJ/8+
vjf83pNXUBvFOBlewiNuHtszNCczLotYNZwkZkLzav8h2k9tSC5GKr/beh3K
X06crNxj/JSRODlWP8TmJOuvnivEybPY7xQXlzV0iuOsYx5bhs21jn4/Zv9v
7j8qOfn9jcNjT2XlXyzzlfM4WV4htOPmYSe/NO7jXWJdsXc6ign7HAvFXjXt
yv3V0itO3nDiZPku2/ol4uSDvYtB4byZ4fXf5rLa/W4Tf+mLk4PH3PgYWm9p
ns8tJyv/QUzI/yn/VPZF+QTsI/PzO/v8JU7mmMo7W3xpc31jnIwU61Vuw/rO
mfC+QP3Jc7KPT3ufa8lzsp7JFCdmmuLadt/5X7keKU62Y/mUH113bJRjt+Tk
k+K5jXFqbfyqXhXVPZcSA/P735aTqzxo5sXJVbH0eXPyWkdGtr7Pe7urpXcB
ny0nE2ttWr8kpkXJLxATsm/EisXJ8mrRvsKQmgYDr22dmtTXu/7hSPWo4WRq
TT+x95aavPMhxvCllmlZWH8tFyPVH/c+4G23k5rW+LpQ3xqVnLyx9L9oxMmq
1VLEk8XJ3Oer6nCkalajvt8J53Ky6luLk/GCQOItcY6v8wcr44ER+uOMrv/i
JLWjrReCmtYb6YuT5dVh2wFOtm2veyis5jkZwaO6x/IZrkWek5V/ENq98FNG
KU62SvlMeU5Otb3tB8R0q96bwO7iYsS7icuHF4MnBePtqjjZ9zn+Wv7Q2MMm
nFx17s1by3hyntrU1K7jZHkK2mltfeFi62Ia5/aLX29H32fPS3is9Okx0bSG
BnFk+K7t+g73t05wcuBGx0biqj44Gc2Tk+2+2TGJPBuQZ4zEyTaOzHG2nAwX
I7zeqMsnTkZVPuN2O1J5GE37jNanZd4+vD06ero/+umn/fL5Bj4mhx3p/YDY
uK+2JR7Otlx/cFRyMqz356tHo7M3CubTOL4x8/3xq50TPmdLOa0fc7Liynjl
iJNjx8H6TcS+z/E0y9XO0U4QtfYsG4uPLfN6TlbeRur9vSRO1mfV8usyPrtO
isVa5gn3ngqftCr1zcm0FfdE61tR5k4XjIyUf6DfWC8IlidOtvWDxML+WcBy
Muy66fyzxbSaHtt+jvnz7/ZCriJMGzuG4mQtm+Xl+rumODk2L/trGVn5Gmob
5czncrLmn8eYrFxxH6OO8Ly343VUHb+Jky3/9DmOz3KyYso5NTir1EcNP851
/JP7auO+OLmulrTeqzMfbAwPKg81xsmvi9gv1cmjpnTMuwOmJOeEtlUcmd8d
PNsIok6I4siwsT6LkVlGipOr2jXmE5czJoA+wzbvP5kIRracDAtzTMXI4uS+
2lRsjPS/Zz04mfyL967cDVIOAZz8X2v7QXPn0UVUUXuP/GR9njDy49JbIoxx
ct4N8LP1txpaE0a+NOVzEav/bPn5ShG/tJ7LKU5G1OqDl8nFmBUn++cQ5dk2
XRY1BlFXHwSb5yvPDdrQczJjc2K5EN5bmN8rT8COS9P91nMy1yPm19g/Gz+2
TGvfKcTydFg+19UUJyMb7/XvKXLayr93VnyN/aS9WLfvc5aTYWOfP+2PQ6wv
dOWSofW6cvI8cjp0rNvEniXLyXX9po5ZAyPXcLJ9t8L0umX2zck+96JpbWpi
cE1/Q+wzlg8R+LdgXr1L1zxPHl4LspzM5xBLHmuW/WzWEovibex9KCS1k88l
FidfufdZkGrrWW6u8kS2y/LzNK1drWOOFOcXKwf/jfXpmHGfXOwFG6/tFyx8
5dEJ1mMa9arhZEScucy/KBg5aDmuLypfi+8vm/tlDFfvt2MeZ7Ouc6BYox3L
Z/NFPffCyXALzBsbC5iKK8PJegaIjTlro+Rz7fg+Y+sNtOFkGGtl9Z2w/Z6T
lTeTk0tiPTjwFrGcbNuIddCuvu3Eydbf2vqn2f4iTtZn5V+wjM0if9znWdh1
aVosDqv7tji5Kn+F3/q+EevXHBP4l2WJhz1ziJE9J/tnCfUt1QVU7opYWeMB
2z4zzVMw8uvKyfNQn5zsRd/yz2f+XNI4aM7Vf/12EPq0ra+n/Hyk86wpJ/ch
xu0qP7kPTm66fnk1kD8R6lH+cCtwkbx8LSffuX3lOCfX8bDYuS0nL3r8GYYk
X+KTL/8jqIqT/T7h8aYxLPJ5g5PlaaF++Pwft7I4Wf3bPvvW1RyxXOxlWViC
k4duU/vuQ5yMv8XK3mHQpzfulpx8+e5GkOXkMlYKLy/9L2o52eYoI1+fY+j4
ao4sJ6fyje101XHL5WSxMrFlNGtORlVcF5jXeV14TkbsN/cwnhV8rnFMyhkW
IyPFg8XJ1ufMcrJyjzk2lov9X1uvWeI3tK+8Hzwn22MZW15VvkLO+CVxsvoH
2xd7x2bH4omRPSfLRw7BFb7Out5rqA3FyTpmlpMVa9c8fftqDSXyRNGSk6vf
3es5KmcZub4yKTXJTyZfQ9zA/1WcvPdku8zXf/zTflkHB8m3kd/01Z51udDE
k1W7ukuuctN3BqzPczJ5BMSJ+YzK9h3zVBUnv4pqkuMsTsa7rSnTW06eXK8n
4/YsJ9f1Ef+95+TY9iLGF3outj4UYmTr38f+6d38kO2va8RHYz7+6/aDwHTy
TOb77XtHo1Pbh6Ov7mwGwcl8hpsZ0zc1ro948rJeX5yTyUuWNxz5FwUnn925
XbIR9/cmnDzUWDjrO4usd4XVRpFvKk7WOMBYbZJUDobm5fz77ufdVvskr4Uf
n+9PjVnz89h5qziZ/YjlhJ9f+/DEs4DlZLWXYqXUKrS/97UN+Z3yVmwOhJ7Z
7by6V/r6G7F4cx0n+5owfhmek1MeGzByHScrT9p60KXit5aTORfUDsHDvojf
W95F9n2Hzf0RJ+t3Wg7tY3OkFbdmm7rWMpuVXmVOvvd9v/ezLpysXKeusVi9
V8mdV+1ADJYYNjp4+nh0/9mkT8PD8LGU4uS+x/dxTaQtqp4XxMnMQx9kv4nN
Dl2XWLmz+P7CTHhTiJPFymUb21jms1thTFfVshfBj6IPsd/w8dnzfwjK5WTG
5snvLdRHKMbshRjJk+Nxb3ijoaacfKK9DQfDxuJj/loWtnw8i7ZLfceYPEQ+
hTgZXzskroCTV/Z2g/RsIU6GjfltqD9S5l/cO84vWOokL8PJqteyMal1KEaW
H5ivT5Y8tgN6RsANlpNjPCVOVm0ejU3LYWT02eofR//9P/8+Na3NPonPLSfH
xLz2HShj+SwXad3iZHkR6zfUSqmKmbPf8sljfsvJmj7tr3eSk228VP7TqrEt
zhTvxvjWcrLisbqv8t3ZmytTuc2x5XhpG/z1L4eTiRuzPTam7DlZ24a0Tao9
YnNCmDfGyZrX3t+Vj+HX5cfFipGrOJlYSNMxR22Vc89+lTl5iPaqypeoYr6+
OBnl+sKlOJl3YdT/K/fr14dBsDH8fO/Zbvh789HjoJ/+eXtQTs7x/LCcjIjd
xuo/9yWNz2JdldvWkNdfF59DcfLps/8WciWy29VwsqYRP+ZaaTmZZcoTLlUr
MNb2yiu2ucWpHApNY/mzfH6p6zOcn8SsbW41nEwON+yj/As4mXkY4/i3bw6C
Sk62+Rc1nCyfjDc2P6MYzzfxDJlw8td3bpRj+VAuJw8py8klBx7tTMVNYTzY
j3lhTHFyk/yLz7femfrcxsMj5mcnWU4mFmO9nhVzLM+VIseYY3ClyHG11wM4
WV5+k2fti1N52eJk+BgprsxvxHWeS+VPIUa0+QOWk/UMFct/scdEnOx5T3nM
4uSqnPMYJ8f8qXwMTbnQdiyh5WQ7r8Ydaryg9lfeHjFO1rMEUs6x2kj1bcTL
yHOy9Y+JvU9g/zT2L8bLbd7Lp35jmajJ79CSk/uXxrC35aU2/sniM/pCFSdz
rvBX86G2z22ebzhXiQcoh4zzoskYVvKUL37xblCMk+GFvt7R5HJyG73qnAyb
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
NLVjjJPtu/4uSuUwf3n7bNmfPCdXHRtxfcqLOnh3rP45LE+sb1nZcnLVOuTR
EePgFCf7z8rLUF2RaD8xnGw5/djr+vheyLbH/LNzpXNYtVJoG5bpx5S31dOH
10rlzP+mcfIQOeE5mgcni+P0vMs06wtTxclVvkQxTrY5Fsobq3rvAiff2D32
jWvaHhoTyG9htlkeS66RdTXsmqoudt5oWYWHBJxs20bXZnGy/KWtxMmIvAH5
v/E7cjdQ7FlD4zLh5Lrtq2OW8jkosz3sPh0fo9nmhMPJaGXvqPBPvlu+O4eT
aUvVIImJWLI4uYw1vyG1+bowc/BQljdIwcmx/jEvTrZxibp8AOZXfqlio00Z
WRqSk7Wt9n0/7Wt98Dwnb62dDjo6vBJyqDd2P5li5JQO91enOFn+S1XtXMWD
dVIs9ItbnwU+9pxs86JzuFvzptr+/Oq7UU62TFq3jhgne4mZlZOhcXz6XQ4n
M93WDLf7GDsebTiZfff7ovou/N9XTm5TTn7T9Kpyclupf+k53D7zV3kspziZ
5ShHQjWZ5Cfv15vKJ0OM3WvKyZbNxMnzaNOunDxEnJO2vLx9epJjUeRE8G5J
nBxjYit/bJDlZOqAI94Tck2fzpd4WI5rydnWvpklxslDSc8zdqyp6oowzXIy
Ocj4Jl97sFfLycpNnqph/YbWGmnCzarRZ9sRVv7m/iNzvs7Pc8bzm2qOWMax
eQyqIaGYpa6vbfIJqD8i/5iq2iOsrykrs13UGPnl5cHUcthG5YvYdcgTznIy
8WQ+e3lOZt6ru5+V0/g9n20bq53r4qYpzpQ8J2s6sWNyQzYeHMfPc55hNJ4n
lvMLIyN5XChWSt4Noi5CHS/b/HY/3dbVEwvHOJm2C8ezGGNZN/5I22Q9maPX
yhfNr/Ox3JUhOJl74+vOyV1yVLiXzSOGvkiczGfOzap2SD2f+nPC3gest6PG
F1QexyJuCNs12qdv117ZetM59+ymuRzEji0nN2Hi1Po5dozls++v4eTY78XJ
82pT7xM3i3F8sDD5FWv7E/GZ8XmIuDASJ3v/typOLmPJxj/5TVcVN4f/VZ+v
mO45eZ5S/q1lMXlZWFlOtjXmmJZbyyImy8meleXbLE6Wj3EOk8e8gFHqHaL1
TWYdnndivCzBygd7F0vGFifjN0l+qcYM37xzfrS2/dfRuavvTnGc9Yewnz0j
2/1m3B5/8bsInheHF0dXH66e4GTudXV+cynuPLv2VpDNR9Yxz+Vk5L0vUpws
Nk7lJkt148PkT2f77ouX/bzTTeV4q336Oi/FyfO+PgypvnK5c9RX7K8JJxOv
6quGt/W5tP0uxsn6zLmaOof8dVCczLmld0zKLarLJYJniAvnjPmyIheWfOSU
b29sPfyt4s+2bNU0V0KcHGNl5f424eQLK++GvGHyiJVT3ISJ7XbpucVysnwa
OE7kOttlqv6cvF/7UJvj4GO8WsaQvPzY1P0h3+LrO0clJ9/7/mj099vH8c9y
jF6MAddM/NgqjE97NXyT587M5KoUnGzrjtw8GjYfK/f9iTjZMo3lFfnAEdML
70aK80nMpNrCqiHShJPJBYaV+b2P/9r6Jpahc5g8xckpwcnsh38uqJPnZB93
VkwQRraczF+k6dxjqCvxxfY7U5xM3BgxXo/4MfrqzmSMM6wqRhYn48flt5Hj
lsojVn3o2L4RS1btPM/J09fmb5N5JTFOFh/b/bT13O0YvDacLCmO32ftX1s/
xqrLmMB4v3r9ORmGRE19duepJpxMboj2r6sPgnwtxbh6Nxa7xqU4WbWNdB23
v1Ft9xgn52xfipMZnwcLk1shn11xT1tOrvp+ll5idduicW4n+lDBvrYuh+Xk
Lu3guf3g6VZZEyP4mT07mbMmTu57//nbxANEnGznn/UxlZch8pzsRZw5+CcX
NUXCX+XZFuP3lvHkTG4u/OHeOn81yOYqD83JOfKesl7wsWqg6Z1f7LmT73IZ
GRZSfigi7ipOtsu0v7GcHMtD9UxGXkXuO6TAx9ufnoifd+Ury8le8PDnG++E
v56Tz6yfKvXRpfNBe/sTX0sY2XJyTgzAcrLG7UlVvxMno+OxIwfhPmxrr2j8
T1XM2vvE2TrdNpZsv49xsvVztWOMFJu0x0yM3CcnS0tOXnw19azO0aJxcuxd
kM1P0nke4+Q+37EzbszXJkbiZP6X35s4Ee8x+Fk5s/Z3s8xDfFxTX76NlIdS
lzvBfKr93GTZOfOFsesHp0vhdWE5mfcEQzNoU6882DQ2/6xY2a5799EkrhyP
h04k/+QyH1mc/ArV31s4rd8rfafR25dujVZuHgb/iFn0gWi/jIz54vqr3Ior
RR21qrFeWg7XX+IPij9XsTKxYtg35CbAyVdOj356Pn2t9HHPyViEi2GbUvXa
mJ57DVEtQsvJPte6L8bimiT285xsdeHaR2H6+s6ZkL/nOdmytq+TVLcNTetv
MdYjNl2cbH21Ofaq52LHyfOd99GLcbLNvbYx5VheM1Kfq+LkmDR2SfVR+H3T
drHSe4u+vZiXnLyYasrJffrpKr6rGG9qXIHEOal55O04ZNvAhXCYfBpCrpl5
v+852fOiPI23792c6ZidJjkX8oiw3Mb2qzYhbbCy+u7os7W3pjg5tbwmnJy7
nYzXI9fCcjLbcnjn6/C9/FNSnNw3kzZp35e/PpqpD1yV4GTLxZ7n3icP2fta
jDnZ5l/MnTlfRRW1rCdtO8nJWAROjsVk+Ws5ucobQPkSun7XMbLlZC2DcxoP
DJiZz4p3iI3sMsXJsfXkxvUsJyNqBca2s29OrvIxDnKcrPpIYmN56tq8Z6sf
ntwYPXs0EfPwWWrKgykm0HER93PcY3mmnpP9O2Cf36N6CDYHvYqTY5ryJY9s
E9/3yclDacnJi6lFqceXI8/JaMh8cHGyWPnSyvvJ9/n4jnlOnvgM8E5yUkPj
0n51rZG+FN71Z7LqpfVzQcTB7fZbTmbbUzkXJ9b760mO1Ge9D1HObi5vXrn3
WeB01RIhjmw5mWvyxKPpUm++0X1JnNzGW69vvj94+jgIdvv42uOTNaptPjJx
ZHHyvDnzddD6dI0+9P7mYchZmEe/jNXU8++7YVrlMlQtS4yS8raPvY+HVZXb
YTm57PtFTTwxsc1pZT28W7e+DnWcvP5gPej8t8fbByPHOLmOyZLna8S7Q7HT
unZhfLrq3P0+Xo6NGXlORk+PbpQMTd6Gledkq/C7oxsnlme3uYoJPBvH7r8+
V9rmUvCXfeU6TR9McfKkj3xZelbxm9zxXylOtnkd9Je+PI/71JKTF1N9cvKs
xjByjlVxcuCw8TVH70akpnkZ5FFc/OLdoM/P/mclJ8fkOfnLW+cmviY98g95
IPjXcZ9he2F6GNlycipHQowsTvYsBxsf/rBVcnIdKysfVzwsPrTLlU9Zzr6x
7jDOvuBk9PMPt4J/hs2JEScTc17Ea5/aJrdv6/8hcjNo+9PXjzl5bf9gMpbP
+r4pD3kZP+6NkcXJ+v+v23tB4uR51LSO5TCIVZTrYDk5lttmvYpRU07WtL9v
/fmEBwbbwPKYV3zDuiwnK2+1atwJ14dPd1aD/ufWcZzSM7K2p85bOCW2mTaT
n1qdd3B4FknUvKp7t2rlOVkx5tg0W+8tpctffxSdzrpSMeTKa874XmyfxSwn
Kx/C1+/TM5COd9nGLRmD+38fuedNGII+JPZQP7XSc5HV6+4Jt2jKffbqm5OH
YmWuGTqv9Jl+HxubJ04WK5fv0lrUDETUd+P6Qj3rWM5ylXjXjb68dbY1J8O/
iBwP+TpProMbU5zM/3pnxz0HpfzXiPvaXJBYzJNnAmK0qXYuj3uRY6IYsVjZ
zqN1NeHkc9vvhRyLs+f/ELRzcL7kZL7XfVs1/cTJfbBybB9QqFmyQOMrU+IZ
I7WN7BvecRP/uGlOnvDcreVYvZ5V1rJeO+Zky51wcu4Y465S3FP5oHaMM5wn
TlZcr2q7vCdWDidbXhYLW04O16NfD4M8I8e825DdRvbBXq/47QdX9gIjpzjZ
5iY3ZWRxPfca++zhOVl17BTXZP5ZvPv3nFyn1ZX3o5ycGpvo5dcvD0KfZ8l1
2jKx8i1gWfvc1sd50Rcnp6TzRdvNtCUnL448mzZ9v/uq5F3o+dpyMtchnXf2
OY9+GXueb1tfW5wMYz68vxOU+1vx4blbq+GdX4oRxcII7rWfY5wscW/x3CxO
rtqunPFo4uS6scPKMbE6uaz88YVcc+Biy8l+XKQUYhEHx9dXv50xzwm73el9
n4zBQ/acgpPpg4vIyfLv43wQJ6v2um0X7Q/eF+9vHI7+VOQgi5FnVZP6TRob
qDF8ylF+f/3b0dV798pzQpxsPQnaxDRzBNPpmsg7752jnZKRke7rYuQcThbz
t+VkRF1rxtX9VrwHU5609Rar82vQu3wb5xYn+/WLk71Hsa9RURdDtPueGmfo
Y8ez5OQcWUZGqTGDVvh15LKzXZ79nOJkW3Nc9fhi9yD6Qk5cRLXHhmo/z8k5
Yr/8cpRjM+/+8LppETi5z3Pdxoy1f8QVdC3iXOH6wnUsxckpP/r7z+4Ftd02
z8m//Zb3bCpO/uTL/xidX/0oeGkg+Jv4KH5ynpNhXRsf1rXJc3Lj/tKQ72y7
p+aBQasYWf1STKD5Un2VGtRXd8+GPBflJIuT/fbDgOJk3Rd9bWnLybb2dB0n
i5XlrWb76KJwMsdFTCxOVp7P05+vBllOtjFMOHlq3F6RkzwkJ5/wY34DGLnk
ZJN3AStbTpa41omRkY2d9sXNXC89Jx8+253yHbKx5CpOtjExxc5yOSEw0cuD
qTFblpMVd5OPBgyaYh2te/vel1Meb2KwU1evJjk5JXsNpA1YPnyrY6PjIUa2
cW+/LKaLkxXzicUT5y14IMUEMU5Gd+58Hc3vUO6H2FjTLCdzb6M2C2JZ+Hsw
XdMY3yhPEMY4+m3K5eS+xXkae+6z/SDnOdH74C45uX/9+nKiLh4Ui8LJXA+5
jqQ4WZ/t2A3Lw/xWLOA52dc7apobIrZSrjJx3Qlv5L/DuXnnasnJlpWRWFjS
NMWH++wzi8B3npPJl1jb+yQIbw1xMs8QP5s4so6D9uGXX2+F/hDqjjzbmJqv
bv85b3LzP8TJxJJR7Los35BZtyV9nj6t/PHbz1ZHNh+ez75+AnxMHWvyLcoY
Z+H/VuZfDMjFbwobp1h5qg7JWBdvHT+7KyagvDF7rMVmyh1ude4V78DFyIGT
i2sq92zLyMrJyF22WLUurhaYsYhd8zutX/WfYWX5PSqnIYeTYWRETY4z6x+N
Pl754+gvX3wS9M7ZLxtzcoyBFGu2inkzeE6yudVDvSfoQ7k8wD3UjgEKsYPx
tBQnX/tmtayxgq+H9Y7WvLr/iZNhZM/JygH56elOcqwiKscyfr8TNERb6fxB
vl/2ycmL3mf60Cxr9LXRvPMu9I7F9p8qT0LPyTY2YfuS3udZTtb1qy0nE99E
L142z3E6ero/+vTCn4s85bOhvrXn5CbLazKesCr3YFaCS+W3gCyjwrjEPcmv
gJMfPtwsvxMny2cIfft0Mm7HcnJTz70mnIyUg7FonGzfW+vdpOdkYoX7Tw6D
qM8nTp4au9ejT/KSi2s42eZ+r09zcpXgRHK32nKy2FvxVs4lGwPmL+eV4rD0
pbbem1X5B4pTW07W9Vu5Fnhg8B2MbOtqp7aH/frbjc2gdz/+IHAy6xIji5NZ
zudb74w+W/1jUB3HWOXW6facLE845SX3Wee4b1XxgK11qHi452T6FPfv8j3k
i4dhnAd/bU0S5klxskScGsHHZd3vgp3loyfVcbKml3z9dG+iwk+P6V76Tsvy
7VHFySj3GWxqmcUzAu/KbY2WIXNGlpooNa41HJONT4L6XB/nDCzhx0LHFOPk
Kk+eqnd44mS9J8QnkWVb7m4T+8Y3ghwJ1JWTEQzT1fvZcrJyoFM+vfJxnmcf
tJysODLHHi8LZDk51U907dV9lfipfDW0f8rBqcsphHm1PWqjnDYPOQ6/5XkT
zIKblZNta4mppjf9jPsynIxsrPi9K3eDlJP81sq2yZ9tzraLwsaK1c6bietY
WYyMVvfz+ok4Wde8rrXAxMlano0zqF9xnWpaS0H1ies4WeuAt/DU0Lg9cTJ1
ocO5asZD2eumznNd7+EwYshTnHzx4ujM9t+CmL5y7S8lJ8feS1Zxss1fjjFz
7LPmfR05mXaP5Y7YY8R1NfgpRzi5ST/lfXEVJyPxtff/sPIsjnI52UrTvTTd
15FBbH9MWib7uuTktOp8WmJ8+9P4vvf82a2g2LFKHcd5cHIds/AcmsPJzKdx
q1XX3ypObiJivk9CG52Zqs1c5dGb8mBTPWfPyV29EywnpjgZRh2Kk3Nj1dYv
znIy+RUhF/nyB4GRU95zOq48o4iTT+7n3Wi+ekzK/WjKybo3o6p+wL7Nyhdj
wjOPp/JS4ORPb9yd8rGY8rMgD3m1qCtiOPlV4+IUJ1vNe5tKFfXAxcl6Lsmt
N+JzIvuqmQujKr9B0+jfyitomkfL9TZVV02ChVk212zLycSYxdnwAuORLSeL
F5hXcW+xmzhZ67C+czCyOPnU2bdOcHDqfmLbGsl32r6jZH+Vu5ziZO3T5WK/
h74mtFUVJ/trZGrMiu5tujfo/mt9LHLvyaWn0ZiT9dvYGP1YPUbFu+s4OfZ9
rsdeLM+kLSc//25v9O3OV6MLa38ZX7+3p2LgNs/E15MR83lvbF+jJlbT0Y+z
9PP6eXIZ1cb1tb0nfLzd8jR/XxIna52pY1ZV61Lqm5NhU3+dyBkvbH+TOv8s
J4uV9dxlz5k+fGSIHVtOFitT07OudrP3YEOM10HU5juxXy1ZCs6bZZ2/nOtn
VUz7+P8JbyqWLE7G87lqPcRx+S15FqrBZ79X/jDf/9/vD7Laz+a+1/aJF9Pj
4BYh11uynDzx7T4KnCxWVpzY+1oExrWeZa8gGzdh5rlys/VRLjgZRq7j5OAT
X3Csr/mLYvUtmijGyfJW85ys98w+rzImy8pItfSQ5WRfh4J1axwXnJzylhYj
a1vgM2LFkuVk+Pi/v3oniP+tn4KNE3upvS0n65j47cn1+nhVOdmrqcca9289
VzSNXakWCYKZ/Vi5Kk7uo12acDK6deN8EGxl80rsuCRySvjrOR1W9tNS69dn
P72KhYfg5FQ7+O2MbfsQun3navhrGT2Hk6vOi75zlOEXz7IapxfjG8/JdctX
7UnV6fGc3Ec+OGP1qC1y4fO3AxsjWNlzcpNlTlj5bqO82CopJprLa4ELe6ih
zDLsOu0yc5YP66puCGMb8X9jDJ/qo6R+I05OLVecnLsfoVZeA072Xnq2DUq/
uN/b+6nUqSpflLxjJE5WvHiiu8f5FIaPT3Cy497XbQzeIjBzyE82nHxqq7p+
pPIiYNZYPkMfnByTONlPFyO34Q+u8+Jk1a+2nsLKS+A7/n/wYCPo5rX/iV4X
2Ba777CrGFleGZNz8v5U3rXlZH7n496ek5vsa+74raGuEV3VlQWq7r11nGzr
U/nvOLZVnMxyOdY6R3gW0fc6lhzvWY0VE5/BYbm/mSUnp5jZLsP6bKV+U/e8
0Ccnp95Z8zxEn0jV7FmEcyM2TtFzsn1fouuXnV8+OfTtpv2YdfE7tVNqGXq+
Q99snglav/hxMlYhTj7c3wrqg22pN9KVkz0Te2atUt+cbL0jeAaIXeMUf4Uj
ye3devj5SOPM4GT9X5ubswCxW/lexFhVcWzVOckdZ8nvclkdTk7llRCvh5PJ
I3l/fb/MrSjH5+mzOHltf/Kdvndj+F4HLm7KzLPgZut3wXH47EY+J1smlAey
rbGsfOM++rrW5Rlc/hg2/yh3mcxL7FpcKs8LH3eWN4RYKMbJ3BvtuuWrLE72
4xzFyVU+dzFOrhtfE9OmiWOntKg5ym1ZQPfwuvu36lSf6G/j3z3/5UmQv4fo
2Fou1v3ePt8oH0/vLpSvI0buwslNf9eGk/uU/KJp6ya1HYdQX88m8+DkkC9a
1Dxqcm7YvIqrD1fH16PtIOsBYN9Pe04WK/e1H4qHWw728t+Lk/FTJycoemx/
uz86v3KqV05WfoRyYlv1OceLqnGX+9sq3+I6+VoiWo442a/L5vM+Ce/NJmx8
+uy/BdVxsmVx+3ee9fAsJ9ua3MFf1XByLj+Ik3mGQFW/s+OWaFv7XkacPJWH
bH0sFE8u8pEDJ4/1x692oow8b459XbnZeijncrJY2cYhFSOFBxV7ECfDB/gS
oy59nd+nYtVaXxNOlmxNE9U1gWvEpnwWJ+8eXAjaunJ69CN5muN7v3Ka7bp1
L6NWCWrqB+LzlG0+SNP9g5PrfDHmxcl140i6cHKd1zbi2vgi0i/FyX66+Nb6
V/ncyjpOtl7abVnqVeNkzg/uD4rBzIuTuVfi0/jry0edl3Xv+8ejox8n8uvQ
e4S+3xfQJ1Wfri9OFkvq/TTrUJ+lv+p9S864EM+5Yl3PxfpspynGLek51+q3
nw8qOXlj9czo2va5oCZsWXXfECfLY6zNcYtxMn8ts1VJ87VhZV9HROP3YvnR
1P5Q/jH/2xiy+Jjr1uaDT4PPG5pa1z/3gqgH6Nu0KSPbfeW6pfqFv7x4FNS0
/Sf1PE62o7a5CSdPjuHEMxxOzvFBUT0R5TCxTd/cfzQ6tX14zMhFzZAJD0/7
WJSfx9+Lk+fNqYumoZjZcjK1L1Dd9UTxBtiLeKyfB+YSo2jMWBu+s6rjbNZp
cxeaSNvp91OMjOBc9pn7B+/8kOVk77Ov/NW2nFx6ThaeDOLkNm2n8cSpehOz
eEecUhUnD5GD6eU5WXXDJOVU2mMqpTiZ42bfRdhccr3bFkeppqN+2zdXsX/B
I8bkJszjOHtOnpf65uTceavuv3rvnXPsm3Ky+FJ5Quz7F7c+G529uRJ04dut
JCdf3ZpI5+H65XjMNxUX9uev5177ziem1LMUfZl849h34mQ8Kpocyxw+6sLJ
KTXl5KbL59j6mLGWozGKtg1gY7EyOcgI3zfkOZlrpfyHObeP/aImnNylXaw/
9cPb61OcvPbVR6Ot1Y/DPLnLq2L074+ut4qvoSfh+XEvi5Nt/a/AEQUnn4gj
i5PfkFyKWTJzG272uclnd24n877ssVbctSoWyXVZrCxO7isHI3oeJPIymsi+
f/fnDbFAcY04eW9nJdQgsb61dlm0jXyR23Cy4vJVY8NyZTnZ1rki1jxPTrbt
q5o1uuY04WTdW8O7gaI+WJvjb1mY9q7iZJ/jLR6WZ7P4xD5DWU4WS3tOlu9z
H+06a06GhxfZM472Xz1c6yWeHXvfkFLV8bz56HFQ1e/pE9v3jqbi1004+fzq
u1Gtb3wUWNjyLTyMxMliZcvJYnXk+davW589E7dtdxgpViMSRlZNkaacXCf5
U+TmSiyK6vJONEaRawT3g8833g0SI4uTVWMaJlQ9bMvJcLXuLfzvOflfxfu9
2Fhr78PHWHlxMgwLH6suOIwsTma+NnUPxduqId6Vk8n18XGymMTJzHfv+7uT
OPKYi4PGnIzHW4gTK/94ycYLwc2Bk8vY/qOSk3OOuc4TcbL8LsWKlpMVa+vr
3h9TF05WjMv6x6muna13J99YG7umhh7eyj7HlXas4+ScbZXvR1svUcmOO4vF
k4c6LnWCq2yOi+fk7ONfMHLfnMz26HklpwY6/aSKk/W8ouWjIeuF07fZJrws
huRkG7dc5Dp281JVm9RxMnmk95/dK/MIFA9cH/OCzV+I5TKgK1f+VsnJsTgv
/AuPP3jyIAhGR+LiFCcP3Y74Tqc4GZaCldEQ6yaWPG8vtybi3UAd10/Y/5iT
qT2NHzI+FtRGkCwn44Wsmi3kXXCNVK5GeH/88PMT8Vtxcp0fn60Ngywna1nk
nXMdEyejKm86zaPr3xMTM+B/mBw+b5s/DSf7GiZ+WdbvTpyscXgwMnwsTp43
T74pyubm9ZN1q0OdkcOVoKpzS/XJ9V5Z8THNo3jorDg59M0xm+Lv1oSVlUds
a26IecTJKSaCkcXJsTi8ONl73KEmucZ9cLLGpVvf3z7i1F1lOVnPI/KhasLJ
tI/6WtS7grydGt84cbLi6+JkSX3EeyV7Tg75+MW65AmkcSIcBx2D0kdxYL6g
jS+u/nm0cfGjoGtbZwu/rE8mflmOsdqsY8nJ1W2T+g6WsfXFYsrhZJ/HwDVN
z2f8TnkmnmljecCWk6f6USQ2yTyzOt4vnh+MLn/9UbQWJYKlxMpDrP9V5OQc
9iO/Vvcjy8nK24WF9Zyv+BicDPuJryfvJj+d4uRnz66PLl76YHTxi3eDT59i
/SUTmzySMn+44OQm+8k1TJzsa4pPvHkmnIwXCrJxZHGy+g7LYhv6PhaWk/FP
Cd4W8qtwvhXz5sc3VUluXj+uW22nwcg/jvsqwkt5/+nh1HOprhXwm/KGxcni
BHhDdZZsf5G/QNf6n1XK5WQbO2RbNQaxLmboRf4xrOyfafnu47+fiuabcD2R
b8LQ10vr3wSjxer0Df0MUyU4DvZUfJU24VrchdmmxlQWuRN1nKx2QnpGquJk
O77J53qrbqT3DHgVOLkqRlkXu8zJXa2bnvINrhvzuaiqOr7Ko0jNA9/KK8R/
x7FL5ft6Tu7DVyzGyeSetPVhaKo6Tt68cj6IeOMQ62c/+/JQHlK69nnf4JTg
ZI3Vg5HJmWCa5WTVANHzPv3KcjLfa1wfvAsjW07+6aeT196++g3MTWz58M7X
QeLkfzy7VfIvspwcWw7zwOicV4pn99Vv7L6+M2bkKX8LxZUXgBWXSjDz2r3R
W+evBomTOY6KLSNx8o+u31hO5jN/Ve9UnAx72nwmjZ+Wj7D3lpvl9US+A+IV
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
7d1UcDJjB5t6YqztH5ysUb3k5IWX6laH9wCGncN4vYKTxc74mPC3cplFH6jz
Ytf7bbGGOFkeA+LRPutchxo4Bd94ThZPwsixvNQc+Xi052SNwYKlhh4D8+vL
w9KjN5ZzbeOj3IttO8POtNEicPI81qvnKo0/tXnrMLN8LVKcbPuExv6xvNj8
dRwU42S9Q3xV2rNR2w+Qd9E1P3heIhadOwav67Gt8odYdE5GsAoevanvY7Xh
7D4vEifr2KfuoZaTJ7U5ptnQcrLiwooT42UhRhYnEyO1HsMP7+9MfYaTie1y
b9a4PZ6rLCeTxxFqhPw2qZnTtq6dlOLk1POcYuhdGb2J4GTEusnDUO0SO4/8
3xB1RcTJZTy5qMXXJB651Bw4WfFk43eh48axPb35eRiXxl9x8qeXN0d/3fjf
oLfXb0dZ+dTW3anxJ1yTlHthx/gx/ft/7ATBH/Z9t3jO1nfomgfg+ea7n3dL
z2R5u1kuqsu7sO/k7fTj3K+V0Yvnx/WKkeVkxQabcnNOfqptz9j+iNu1bTCb
fBoWwUt5VlwXY1X6G3ya4mTEe2jrfywvOcvG4lyOee66rfr0FnhTOflVFXzv
6+GltPvNF3Pf3iGVOk/ku43HxZ3b6Xcsltvgfq5xlv81bQi/5Taq4mS/X3Ah
zComjglGhnlh4gvXPwy6efdSOU1MbJc94d6HIfdBnMw4PhiW+wX1Q2Bkz8lq
6y51Cyf3qmlGVk3snDYZtC9GfOnEyfzdvLoWciveL9g41KIo6uwFPl6b5mTV
4Zs3Cy6Vycocr7V7U54XnpPR3zbXR59f2QqMjD7cvBKmv716XGNGnCwuFhNX
jdHznCw2YXyd5WT5Y/U1Ji63tgi8JJa+UryLj3ne6fODBxtByk3m2qL5VN9b
/mJtONnHhfWdGFftmVLwjXacPK/7QkxDcp3GLqnWhv/ec7LeN1wunqMkWzdE
nnFNOPl1ac/ejsuSk0ulODl2ntJe5Crr+0U7l4dSLidbWU4uvcI7xj9nJZs7
TI4E+4xfWeBkw8o2HmwFE4dazZE4i+damJgYOwwsRraczHg+cjaQreWhtlSd
kzb7WcfJdcvVNvR9TOuWK06eyq2wkmfyxrTX2LwZcKkEFyu/Qp+LPJmJT8kk
Riwu/nDtavlewHLyR+vrow+u7AXxvThZz0vyWsY7LoeTFW+FWzeKd83iZLGz
rf/Qp3eE4rqxuCvrR2Lj2Hi/mI+cGBnxntzX+wvXooKTm24vfGuX5TlZbVnl
b+fHFHJvnVV9uBxx/xtq2Z6TXzg/FJ5bFPuXuKfyfEI7pThZfOzfh0zl3s+J
YRaVk8UrwZtuycnR9lE9Gz7XcbJ9TySpv4e8nQ6+QVY+L2uWeeDsK/Wr0Vfn
3guxPN6BZ//e+/wsGCcrT8LK5k+Ik8k3Kdn34bWSly0b+2Wzn56T4V/+Ml33
WMvJah9q8SlvEU4WK+Mzwli/4/Z90omTJ+NoJnwMl2sczaxzK7yCv7ypSSgR
mz+1vjtVl62stWdla4ssY8kLr2QtkYKTJ8fzmKXFydYTo1TRJ/C7mPJfNpx8
8+ggiHNn/2n8eqTYs+VkXwvE5i8jeWT1lZOR4kqmpzg5xaFs///uXAi6eXM1
rMOybdea1T4OLg+GOu9nvlf82saeXhVOli+yxmQ2XS7XXMWHbQ099l/9if+r
OJn1I+vHqfuLfwehmtllP8/k5CYeyTlaVE62WnLytOhf9Cn1wfCOLtJ/7tz5
evTs0YR96ji5r22TH4vi3ghvj1nEs8XJFz5/Z7R+8eOFYtxcxVg4JmK18K7+
Inw9PCe32YbSE9BwsphYucgatydOtn0MjmZbxMloY/VM0PrubudxdSzfcnKV
qA849DFTe8mjX20jTp7KrYChCj6eMNexX3KpZSz5lVLJxIUX8h+/2pnUsbbf
m5hzirnLfHRT/1q5zkicvPvocflseNzP70/9zzMrDCMetLnK4hG+s5wshrVx
3rbnxBXjcxBbfiwv2U+DxWBkcbJyUPo4Z3UPtXF2pntO3izyVtiWMlYw5kvF
8OZ1n6hTipP9GMu665rlaV9LWrH4GCdXLdezL4p5uHlOzm1v+kifTIP65GTl
Td97lufDlaslJ59sZ8/Jsfl+errTyUO5jcRAnpPFykOuWzUIF52TVcMZwbWH
4+cZlOJhL8vHmla++//tfunl27WPcZ3EG073h7r2FCfbuDS+1chy8hcX6vPm
8apATXg6VvduFpxs9592Yx+RuKfMqVCdvQ3LSUdLLn7NJE72OlG/T2MAUcHE
frrl5JDTbjy2K88Fw8mI+8SkZuZhySFMj42vE9fq/sJyiA/qebDuPFAOMvMy
1g/O8eP8/HqVH+I5eWX1nbKGSp/nKuwnlrec7GvK2Zxoz8ld6hM18REgNiqf
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
W0EHTybv1rieK//05pPtE6wsThZPw5jUwBMjI+UpiCsneWoneVjMbD3fkM2D
teMDPSdrGw72LpZj92BkcfIvxsfY5k5YTi7vEUWct86/zfqRadvEmHpusPkc
cCT3N7ivKyf3rSacTLvY+PuQnDzvdumjPRdZixxPVj8YItcgFktu03/JnQ1j
8mo4WdcBnjEtI3MeXX24Wo5ZtXWJrD+752TfRn23D7WpEWP3Ypyc48XgOVn5
WTnrF289eXgt+GwgPqfirYpVS8qJbvLMWMfJyiGwnPz0aDcoZ/mL4AHIdn9z
/9Ho488/mDo2ffehlH+f5WQxsu0fNn+a40gsHImTfZ3qufPaUnNVycG2ph79
xOZWJGrz+bF9vK/g/Lh4616QOBkvuVDvr+Bx5oWRxcnWG5nYa+pcgmc0rk2c
bP2NuR+IkeUZUcXJSIyuHGlkOVlcrP+v7n52gpMly6s2Txn5mhSSryESU6gl
7OLG1vdX8VZ53nlOXiRGbsJ1lpOtV7Kfj/3sUmOKY5Ljib+IWnJyP+JZso86
ZZJYJcXJVaxMLNDnl1658rfyXNBzM+eH9byxPpcpTo5dD8XLcPj9Z/cCK0eP
4UA5/J+f/c/AybHv6jiZdurCyRKcLFbWck+u6+EJTmZ9mw8+Deqr30hsA7x+
5/aVoHlxcht/UTiA7ZdfycrquyEXY5ZjQODkj689DrKc7MVxPHhyc3T26p2C
e46Otba/9IRb6piDI3HfKUYu4sPhN4aTfZx5ipPX7h3Pr/yLYj6YenX/KAie
5Pyx+b6xc1OcLFZW3TrlNluGUh1l6/nm9d3Pu0HyVWC55F0g7kGM/1MusOXk
rbXTQdafw3K5ONlvP9vT5jrhY+Py+WDfPCfbmDusH6tjMi91yaXVPZ/9srUH
URdO5jirPefdPm3bdB7rbVx/7g3jZNtO3vO47tm1jpPFtfRZfBlj+WOpa16K
k1MsNItxfVWcXKcYJ+fmXFjJf+3HJztT+z3Vh8fX7hRrDcXJTMPrA+X4ww1R
65m+kVN3xY6l4/nGcjLeJORZ25j9rMR2M7YyddyQODlwUfmu/daSk5cKmhqP
Z/IvpnyTTf3q8LtIzsZUrrKNM28aTjZ5Glqn5WR7rY7FWJnP5shZTla9Z/Ep
9xDLyVaKW4uREeuTr4SWKU5W7Dn4Ge+shHzk2LUEsQzvbyexPVpWk2sUsSfx
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
9nGJWiq0n75LNdF0DNJqvHShGE7ukxe0iOpoN3Hlb7465yQm5TvFdtl3fAcb
aToxLdy6unLZafmARb5auz765NOPnO7/cCvY3hhOztpefpcXE3Z+9/f7yTsU
Pu+n5PYtw8ltnRfylsPJZf3ipc8hV3Mi/nq9ffOqU9PtCvkjxMlFl4Uf4d2b
bac2920X8jlZXhM8ynhPEr5Q/jeb32Lg5EGzpkDda8vJr/eLsZ7lZPEs9fP2
du+Otvd3nPx4tFgbLoaPLSfzvaaHw5cWP3Y1qy0nNykY7caEjy0n5/lrxclp
faA8C21tg2XkNH+yxuFZr7fPyaqjp3F+elZgHdTZQ3Y+X/glYjlC3pQsTlZM
nv2ZVvusDcXEvwZOzuZk/sr/i9ifxJ/Fd8SX7/+4OdraXhm92t9yUk0UxtZp
WcxH/BqW1TlDLQ2WoXq/WXFXcbJYmb83rp9L4uG+t0TiPROc7NcX6ctxf/Vi
ywnPRZ85+Z/vHzvVwcl59e1DeU/LihwdqO0xiF15Mnina68DONl5LW7sJPkA
LCcP4/YGzbRWHyXvSOx36NLSSi15IcXJab9PcfLV/3KCiW0c2nLy4bW502iO
MXEyEisSR82bL8+7nMXJMbHorLp4R+6jB21gecSCLSezLTauHOJksXGIq23O
P3Gyz9e+iCfH5kwWJ9va3/JtIJtvRerKjzGr8eSYZxbeI8N/da0zxGgwcF2c
zLwsEz4OXSdF4r3wdQwnw/1818djbLcFXb10wkk1ZdoQde3WHx2O+6aGR9q0
1IBDVWqgxCqGk20OuCx1xcldaX930z3LPH1814l9KU6eym+hHHADJw+aZa1O
57sQL8PIdXEyYpnPC467ESfj+fB9H6hpThYj2nx3MZwslek3xck8nyv/lT9N
mXwRfu5kcbI8FDZvhbZX0/g5LXxORnA4fKwxfKE2iJOLtj3J2T1hZD4T1y7L
yfKL1OWNmWd/MudgLCvUKTjJ51HeR9jnJkRcGlaO5WRU9LqE0eXD+PrKScfN
xKzhdGQ5ua+s7HNym+uGk3WNUu86a1pxcpGcIhtPrzgx/o6/dT0vcw/mGVHv
CXLPk//bdX6Ero91GxIn41eGk9durYxOL205iZNd7qyJP7lzzhk0qKJc3esV
L648iSmfvX6nEis/fvnciXUU5WT8zZ+c+V1n9wKbN0OcXMZjG6tYz61fFztG
4mSbdyKr1rfPyeJp+U/S8sS5e2gKC5f1FadxMv9rW7LaE5Lq7tZx3AZOPl5i
HJ98JPieYWbizGJRTdc3ZuY4Mh5y9Xq4VkRT4lqL5WT0YvdOZU6W52ZrbynT
e5ElcfLms93oWjk3li+O9p7edur6eDd+Pk3yxIqTbf2QEws3HSeLlbtmnEGD
qmqKk4kpU/d67XDMal2czDLz3nURu2Fcn3Jm+Pky2lSII8Vkad6CvkqcrJzP
igenjeGzLO2P+9N3bbVdHgu1WdwMK8ufUZRJ6sw3Mq+MnKU6chfPqnxO5jvr
Gem6fWni3dTu/vboyyunepvfDpGfj9oWsdNbTka6tsXJ3CvK5FmW17wMJ+Pf
7VM+t7olnz/9OfGvha0dJ8fKpubewMiD5k2OlxE5ldcOOfneveVK15Rq+7Hs
PE5m3B+ynIx/GW/y6xf3nNq8H/Cu1/fsipOVD6PJ9TM+qI64p+Vk8WYWK9uY
su9RjuHkRy+qcZTlXrGwrdGiHM9lOFl1ies6RseRk9uSzT3edVuyNGucTN4L
5d7rm+Bk4pRF5iFmjL8DLk5yxU+4WbHsNrhVOS/mnZPdtk44mfrUU3nghtrU
g+ZYYuSEkw8+X19dcCp637LSc3kWJ8t/LE7Wd4j4snJfdM3Jyn2h/HFZtULK
9u0wuOoNk8ch1hNtfcv+u0bacn354+A7SFtPJI2T7T5Q/restlTlZKs0Tq4S
06+TuwZOrl8cH2LW956NVTQvrc6ZptuJl4F7m/LFpeWM64vwMyiPcl85mXpv
VTiZz9yfxves8652CMrKuaHcx3XV0sMrP6v1zWPF/hInO1b2GHmIJQ+aV51Y
vOWkujli5KqcvLy967SxE+YTeJhncPT+3fRYHcvJijOTP+7Jk2ZjuVa86xcv
is/yOLmKfE6O8UX7nCxOUDyOeDJ5Kfz50jjZepnV74iXs+Lofm6sumRji1Vj
jLPMyW3EVpuK4cbyblVO9sW1cefpplOd/CxOhj9RHifn5aVrWqozgvpaE6NI
jZE0+Zxc1qMc0k+/3B3t5byPgpHr2I6+K/Fb+LHkgZEHzbHc+W7qS55c+j7J
fRHKOVFE8iqHfiPfG94K5HOyxPeLK584kXfZ5+Sbj7444rFNa4vykzFdbPt9
TkbKsc7/sGxdvlf8FmIVjUkRO6fl+GBaeUFsG/I42e4Pts0ysa0fYmPKTftN
8tSnd/FDPLkZMYaqrhpndXKyWJd3JjA8f/M4uS/nqmLJ5OnoS5t81cWX+B4U
S26Ck7NYWZyMXr/qR82pJjTFyIYdBk4eNM9KxvIZ7wXfpeVmKyJxcpr3Qoyc
x8mqT6L6fqoH+PnyB0fGoaWNU7OczHTUrq56zxAn13H/wTcsn53lZOW6yuvr
Q5zMPZtlpM2j9YQ4WfspL0fycVRZTu4rp8yb2M9i5Mcvm8mxLc9FWp6Gto61
YsVpUl64ECdz/7L3h67Oz6J1q/OUF/stqpiaKeRNUy7BeeVkxu+hKU4eciUP
Og6a5FPWZ3Hy+dVNp6pj+rJEnew8j4fqwUmwsRjZcnJR1eHV8z27vx6wd1lu
tpys/krj55IcS5GsamuMZU1na975zxja77Y2Xxv3Yj9Pcx9VJyfPMzsTF27C
j1O0DU0sN8+fXHa7laPZCvbS/7YWd5qSc+vgHqc8HdcWz49+eXV/al3zysld
CE7mmYl8ykVyd8yS7jzZdVIu2aGmyKDjJD/fBd6L/17+cfT99h2npq673Z11
lzszaxpiqT4nn/n0d0l9axdjPvXb0bkv/tA6J6smHRwJI+dxctZYI9iQ5dic
GvRb9GN1cbI8IiyL2Lr9rHFzirmHONmv+YDq9F7SbuVMFi+3kWOkqKr6Lvrk
ISkq/LlF8isXyScnzwX+i7R1FOXPPE7GQ1FmDGoeJ4f4NcTAMYKTS51nB/c4
sTKcbH/jmte7K11zbYyDDGkeOFk+nLKcXNd4wqaVcLJqVU/8moMGzbucv2iS
Q9mJa6CnnGx1ZePUFCdfvfWhUxucDCNbTra+j7T+RpwsTrW/wavyBfucrDgz
v8WMI7SczPo03k/rVz0+Ww/AcjLCL8181qMcWncTnGxz2ImTUV/izMfZn9wk
J2vZNx/tjt68Pfo7jIw/uO5tiuVk/9lGeZXz4rs+J9tlcJ2hJt/XbG0uOdnv
xMl6Vq7Tz1tEynNcZ/3ntvOz/fP9Y6fbG5dKr5v5uh7zmadHL3ZHZ9eeJIzs
ONlyw6BBcyybQ1nnP56Lqv7kLMHIaGc739eR5juGkxHx5Q9O/sbV80P8n1ZL
Q/7brb3rTmXbL76E3ehj4DutJ42T4Uzx9PrjL1xuC/1mOdmfT/4I5afLvedO
OFnMK74NcXLeslivOLVsrg/WqbrTWdPRHj/nBu23zyBN5Rspoi44ue74s/rk
PsW1Yzk5jZXfvisWDy26D/zpiCXvPNyoxDZpnJz3zqHIOwnaSE2+Nz9tOfEd
9wCe87vkZNhQvjvyqtW53Fa3w3BylTaLlds+DrGCkxNv8o1AfG3QoDlWkkd5
UkMPnfs6vo5oGWn83r3bf82ddn0St82TGBmd+/zfRwu3zx7hZP6KkVHWOLdY
+ZycbKPJhQFvWgb0OdndhyYeZXGxvhcjV+VkRA0TRDtj4rOWk8vuH8vJ/jHT
OEWmY3+Enm3s5+PIyU3la6vq3aVdRePLKDQ9fJCXX5D1wc8hhkaxnByzP2P2
TR2cnNXGuo67OPn2xmUnvtPYXXF6meW++tvW6PXbrejpGc9tx3SLDevm5C7y
31FrpAonS32tGc9x+/r+YR3f8bimIR/coOOjJN/FxI+PP7kNToaR0cbKhcy4
ciwn47mAj5Fq+9nYclpcuo7cF3iHtTzYks82T53PyaoRbftC/pdPwnIykocw
xqMsTs6apukcFnAxy9c66Jd5Nlh8cMmJ9dNP25h2Ficrd/XAyfWob5ys5WVt
q8tb/Pr5ES+HjUOLs7V9eCrwfloGj9mfWlfWfqpSZ8R5qjKeC2Bv1l/Hu3jH
ydfOBTk5LedkzDEhrwTLCN2vigg/79OH/RqDUFRr64sHfVizfWbXOvnN7sDJ
g46t7LnPZzgZLS1/3koNp8UvL44uXjnn5P/m14aLleXkjy793inNu1wHJ8tH
DMuGOBmpfvJhndXp+Kg4mWnk6yjTFo5ZnZyc58/Q9tpxiuJbxYvZJtg5i5Pt
fCFeRjH1V5rWcfYnS8onXIa34b8Qf5XlZMWY+R1W9pf57eNnhXkzhpPJmXvz
7q0j7Q5tg+r66B1OHidXlW3TuzcPk/xwGhPIM6l9l5Oncd7o6e3yOTnmXVdI
MHLeOJW+C07uug1NC04+s/5szMhe3YVB9en/AdnAxew=
          
          "], {{0, 399.}, {714., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
          Association[
           "Exif" -> Association[
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com"], 
            "GeoMetaInformation" -> {
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com", 
              "TileSources" -> 
              "Wolfram Knowledgebase with data from \[Copyright] \
OpenStreetMap contributors: http://www.openstreetmap.org/copyright", 
              "Projection" -> {
               "LambertAzimuthal", "Centering" -> 
                GeoPosition[{43.34116942306403, -99.56261487874038}], 
                "LongitudeDetermination" -> -99.56261487874038}, 
              "PlotRange" -> {{-0.36252111927175834`, 
               0.362521119271758}, {-0.182040702701293, 0.2226759563091975}}, 
              "LonLatBox" -> {{-134.23323832717412`, -64.89199143030665}, {
               30.01497135367818, 56.12606919915802}}, "GeoModel" -> 
              "ITRF00"}]], Selectable -> False], DefaultBaseStyle -> 
        "ImageGraphics", ImageSizeRaw -> {714., 399.}, 
        PlotRange -> {{0, 714.}, {0, 399.}}]], 
      PolygonBox[{{-0.36252111927175834`, -0.182040702701293}, \
{-0.36252111927175834`, 0.2226759563091975}, {0.362521119271758, 
       0.2226759563091975}, {
       0.362521119271758, -0.182040702701293}, {-0.36252111927175834`, \
-0.182040702701293}},
       VertexTextureCoordinates->{{0., 0.}, {0., 1.}, {1., 1.}, {1., 0.}, {0.,
         0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{0.21751267156305476`, -0.10109737089919489`}, {
         0.362521119271758, -0.10109737089919489`}, {
         0.362521119271758, -0.182040702701293}, {
         0.21751267156305476`, -0.182040702701293}, {
         0.21751267156305476`, -0.10109737089919489`}}]},
       "\"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {
     LineBox[CompressedData["
1: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
      "]], 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{43.34116942306403, -99.56261487874038}], 
       "LongitudeDetermination" -> -99.56261487874038}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{43.34116942306403, -99.56261487874038}], 
       "LongitudeDetermination" -> -99.56261487874038}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoPath[{
          Entity["AdministrativeDivision", {"Maryland", "UnitedStates"}], 
          Entity["City", {"Seattle", "Washington", "UnitedStates"}]}]}]], 
    "BasicGeoRange" -> {{39.016534884757455`, 
     47.6658039613706}, {-122.35087610000001`, -76.77435365748075}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> Automatic, GeoCenter -> 
      GeoPosition[{43.34116942306403, -99.56261487874038}], GeoGridLines -> 
      None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-0.36252111927175834`, 
       0.362521119271758}, {-0.182040702701293, 0.2226759563091975}}, 
      GeoGridRangePadding -> None, GeoModel -> "ITRF00", 
      GeoProjection -> {
       "LambertAzimuthal", "Centering" -> 
        GeoPosition[{43.34116942306403, -99.56261487874038}]}, 
      GeoRange -> {{32.896549696653366`, 
       53.785789149474695`}, {-124.62970222212597`, -74.49552753535478}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 4, 
      MetaInformation -> {
       "GeoModel" -> "ITRF00", 
        "LonLatBox" -> {{-134.23323832717412`, -64.89199143030665}, {
         30.01497135367818, 56.12606919915802}}, 
        "PlotRange" -> {{-0.36252111927175834`, 
         0.362521119271758}, {-0.182040702701293, 0.2226759563091975}}, 
        "Projection" -> {
         "LambertAzimuthal", "Centering" -> 
          GeoPosition[{43.34116942306403, -99.56261487874038}], 
          "LongitudeDetermination" -> -99.56261487874038}, "Software" -> 
        "Created with the Wolfram Language: www.wolfram.com", "TileSources" -> 
        "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright"}}},
  PlotRange->{{-0.36252111927175834`, 0.362521119271758}, {-0.182040702701293,
    0.2226759563091975}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.8272461017493353`*^9, 3.827246105218864*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"4b801ea6-9237-4184-8c80-e36c26a03f4a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["19. Dates and Times", "Section",
 CellChangeTimes->{{3.827246120368383*^9, 
  3.8272461227784843`*^9}},ExpressionUUID->"8122c3e0-d712-454c-aea2-\
4bf227a9ce73"],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.8272461325774813`*^9, 3.827246134083317*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"7393151b-fd47-46bc-8251-dc12459bd7a2"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 12 Apr 2021 15:55:34\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "4", ",", "12", ",", "15", ",", "55", ",", 
           "34.429099`8.289500637373242"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.827246134451157*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"ca16b6fa-0d6b-4367-9413-98be4c079a1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"WordFrequencyData", "[", 
   RowBox[{"\"\<think\>\"", ",", "\"\<TimeSeries\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827246339212246*^9, 3.8272464158560553`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"02ba4572-2092-4b96-b4f7-f24eef4bbf9e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
LdP/A9+rg9w=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-6.3113472*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{-9.4671072*^9, 
        FormBox[
         StyleBox["\"1600\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {-6.3113472*^9, 
        FormBox[
         StyleBox["\"1700\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {-3.1556736*^9, 
        FormBox[
         StyleBox["\"1800\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {0., 
        FormBox[
         StyleBox["\"1900\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         StyleBox["\"2000\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {6.3114336*^9, 
        FormBox[
         StyleBox["\"2100\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {-9.4671072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-8.8359552*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-8.2048032*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-7.5736512*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-6.9424992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-6.3113472*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-6.3113472*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-5.6802816*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-5.0491296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-4.4179776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-2.524608*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-1.893456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-1.262304*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-6.31152*^8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {6.310656*^8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.2622176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.8933696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5245216*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {4.4179776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {5.0491296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {5.6802816*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {6.3114336*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{-9.4671072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {-6.3113472*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {-3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {6.3114336*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {-9.4671072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-8.8359552*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-8.2048032*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-7.5736512*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-6.9424992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-6.3113472*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-6.3113472*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-5.6802816*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-5.0491296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-4.4179776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-2.524608*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-1.893456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-1.262304*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {-6.31152*^8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {6.310656*^8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.2622176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {1.8933696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {2.5245216*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {4.4179776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {5.0491296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {5.6802816*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {6.3114336*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-6.3113472*^9, 3.4081344*^9}, {0, 0.00041474153158936133`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.8272463496274433`*^9, 3.827246418020976*^9}},
 CellLabel->"Out[66]=",ExpressionUUID->"62df5834-016f-46dd-949c-aa335b34b115"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DateObject", "[", 
   RowBox[{"{", 
    RowBox[{"2021", ",", " ", "6", ",", " ", "28"}], "}"}], "]"}], "-", 
  "Now"}]], "Input",
 CellChangeTimes->{{3.8272464485652447`*^9, 3.827246462493123*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"656d6714-047c-48f3-a09a-83208ba72f35"],

Cell[BoxData[
 TemplateBox[{"76.`", "\"days\"", "days", "\"Days\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.827246462762082*^9, 3.827246466593666*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"41d2b4ed-6264-4f63-97a5-aeadea5a9b5d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["20. Options", "Section",
 CellChangeTimes->{{3.827317071973474*^9, 
  3.827317073175425*^9}},ExpressionUUID->"2fd0d343-ea70-4974-9eca-\
8736fea3c0ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AirTemperatureData", "[", 
    RowBox[{
     TemplateBox[{"\"Paris\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", "\"France\""}],
              "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""},
      "Entity"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DatePlus", "[", 
        RowBox[{"Today", ",", " ", 
         RowBox[{"-", 
          TemplateBox[{"1", "\"wk\"", "week", "\"Weeks\""},
           "Quantity"]}]}], "]"}], ",", " ", "Now"}], "}"}]}], "]"}], ",", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"50", ",", "80"}], "}"}]}], ",", 
   RowBox[{"Frame", "->", "False"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82731684292842*^9, 3.827316893419821*^9}, {
  3.8273169515495863`*^9, 3.8273170038462267`*^9}, {3.8273170832703648`*^9, 
  3.8273171351240664`*^9}},ExpressionUUID->"6be7e32a-607d-4824-b238-\
f7fbdbc9e8d9"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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

    "], {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], 
      LineBox[{122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 
       134, 135, 136},
       VertexColors->Automatic], 
      LineBox[{161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
       173, 174, 175, 176, 177, 178, 179, 180, 347},
       VertexColors->Automatic], 
      LineBox[{348, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 
       215, 216, 217, 218, 219, 349},
       VertexColors->Automatic], 
      LineBox[{298, 299, 300, 301, 302, 303, 304, 305, 306, 307},
       VertexColors->Automatic]}},
    VertexColors->CompressedData["
1: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
u6w6ZNhEvmfUFWF+7wJV45YePDsfLP4huxrTNt/7I1WniKhvt1NijbLoPdBY
MtKtWlIF9t+CviMTiojnyw96zxozEcNjuN0ls74B6p5ZHywPlxDtJMUhKW7N
doX7+7eIQVs+xy/Kn4Npwbtd/WsrMdP022igrBgn3U5toyfwYBLCD0g6W41c
TpTRwQ1C2OwOVW0/QqG9fNE/917RUb/CObFQEkf6af0W8yX9j1uNu9qccwxi
H1vu5xRwfxofbVy7THoZhWr9+NFQ2UYi/5tLfsPhQ5J+0DCb6qyQxIO3r2Nb
C5lP0gFSP6Deos194cBFwt8OqXKSPtyTZlM1qtj8P8NXdgpyVdfgQv2OTvjI
nxR+Pt6VGn15/M4n+ZPk/ylzXwwFXudj/kSL0JUS3HWq+Tmv/Q0INjdetXyQ
gpqixvlATwpOgS4egf10Yh9oOKlXnB3dDZOJ6UaFWwQ4Wnq7wreqlthnkuKW
pOfJMpNmyTuK0evtWJmRx0WOu8q24ExyPywMmzLJp1GMyRpJuxWuduHqyOGb
FQ8/EPNO2nwk8dNDt2aEMHswi/7+NHuQh/umxtlzGNVEv2U70J13tgrBF8ne
aNanEB8/+Yi8Lp14X9LmL+mdihQ/st+ixMa7u/Aw+TetpnsSPCDGeFMfk8j3
cF2U768mqVtJty7e8aPQFj5by2ga+Z2HerL39JIhNjYOBPslelGwW3skepIZ
mZ9De/DRRcjCEva5q3f0JHpyIPW83YEOYj9P6jfG612dtBcg9T9szlTeg/dN
6BV5K7DKefi5nLXz41/S80n2DKpOKNJub0bPzf18NfDx1+Y+DQVFMp+0xyHN
NaS6/G/DSfYT5zWCfzpNbCbu8GiDrVzi7GWeAtD0pouCjnCkfpcm4b1yv3vU
r2FBqX7awcFZkjnlaUTapNWdUu/FSHxSnpJwPxuvnJwUDvrM5SrzL1NgNwy6
aqm3Evm/VCqv3ktxcDx5s7joGgXuWbeImBTyO7m07+rSvjNLqw/SvutKm7/S
4qR5irRnIe2/SHxpz/n/wqXNX2nx/7b9JD+T7lfa/dd45bu0eyISTprTSX3O
vw0n2S/tfk1a/5Nw0v1Ki49XnZL29xLjhY+XfkqLS6uf/zZd/W/rj7S6NF56
Ja2O/R92TH5u
     "]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.826656*^9, 50.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
     Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
     Charting`DateTicksFunction[
     Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.826656*^9, 3.8273022*^9}, {50, 80}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->FrontEndValueCache[{Charting`getDateTicks[Automatic, {Automatic}, 
      (Map[DateList, {
        SlotSequence[1]}]& )[
       SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, Automatic]& , 
     Automatic}, {{{3.8265696*^9, 
       FormBox["\"Apr 05\"", TraditionalForm], {0.008333333333333333, 0.}}, {
      3.8267424*^9, 
       FormBox["\"Apr 07\"", TraditionalForm], {0.008333333333333333, 0.}}, {
      3.8269152*^9, 
       FormBox["\"Apr 09\"", TraditionalForm], {0.008333333333333333, 0.}}, {
      3.827088*^9, 
       FormBox["\"Apr 11\"", TraditionalForm], {0.008333333333333333, 0.}}, {
      3.8272608*^9, 
       FormBox["\"Apr 13\"", TraditionalForm], {0.008333333333333333, 0.}}, {
      3.8265696*^9, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
       0.008333333333333333, 0.}}, {3.826656*^9, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
       0.008333333333333333, 0.}}, {3.8267424*^9, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
       0.008333333333333333, 0.}}, {3.8268288*^9, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
       0.008333333333333333, 0.}}, {3.8269152*^9, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
       0.008333333333333333, 0.}}, {3.8270016*^9, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
       0.008333333333333333, 0.}}, {3.827088*^9, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
       0.008333333333333333, 0.}}, {3.8271744*^9, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
       0.008333333333333333, 0.}}, {3.8272608*^9, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
       0.008333333333333333, 0.}}}, Automatic}]]], "Output",
 CellChangeTimes->{
  3.827316974170196*^9, 3.827317004987961*^9, {3.827317089665482*^9, 
   3.827317120477997*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"861fce3a-b274-442c-bcbb-2d4ad06825c1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["21. Graphs and Networks", "Section",
 CellChangeTimes->{{3.82731724845009*^9, 
  3.827317251641774*^9}},ExpressionUUID->"a952cd67-8c06-4e33-9cbe-\
f7774a516a5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"i", "\[Rule]", "j"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "m"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "m"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"m", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82731739394447*^9, 3.827317460675556*^9}, {
  3.8273175341500473`*^9, 3.8273175651511497`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"af69b5f4-5922-4af2-957d-8724d3ca0f37"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`m$$], 1, 10, 1}}, Typeset`size$$ = {
    360., {169., 174.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`m$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graph[
        Flatten[
         Table[$CellContext`i -> $CellContext`j, {$CellContext`i, \
$CellContext`m$$}, {$CellContext`j, $CellContext`m$$}]], VertexLabels -> 
        "Name"], "Specifications" :> {{$CellContext`m$$, 1, 10, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {214., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.827317445249366*^9, 3.827317461384325*^9}, 
   3.827317565550844*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"ad105118-8ea6-4605-bfc1-adbb8b38a18c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["22. Machine Learning", "Section",
 CellChangeTimes->{{3.827317707690441*^9, 
  3.827317711223461*^9}},ExpressionUUID->"e3a05aa7-3ab6-4da3-b73a-\
73d325ac346d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<Sentiment\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<I don't like\>\"", ",", "\"\<I like everything\>\"", ",", " ", 
     "\"\<I don't hate\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.827317713379613*^9, 3.827317761910658*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"575b1b89-fab2-4f77-b59c-6fd17ecd7c04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Negative\"\>", ",", "\<\"Positive\"\>", 
   ",", "\<\"Negative\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.827317730668392*^9, 3.827317762234948*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"28beb660-5010-44cd-9729-47eee9f3e097"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"colors", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomColor", "[", "]"}], ",", "50"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dendrogram", "[", "colors", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FeatureSpacePlot", "[", 
  RowBox[{"colors", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"Row", "/@", 
   RowBox[{"FindClusters", "[", "colors", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.827317897094178*^9, 3.827317983726259*^9}, {
  3.82731803791009*^9, 3.827318061702198*^9}, {3.827318246199802*^9, 
  3.827318251659601*^9}, {3.8273183343111553`*^9, 3.827318339061883*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"d35f27e5-4292-4e80-949c-b76f0294e6a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.8535642814574338, 0.15772466147397712`, 0.8580196841854286], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5690428543049559, 0.10514977431598475`, 0.5720131227902858],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.8535642814574338`", ",", "0.15772466147397712`", ",", 
           "0.8580196841854286`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.8535642814574338, 0.15772466147397712`, 0.8580196841854286]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8535642814574338, 0.15772466147397712`, 0.8580196841854286],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3443486080006981, 0.6422751001373053, 0.3360733638569886],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.2295657386671321, 0.4281834000915369, 0.22404890923799242`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.3443486080006981`", ",", "0.6422751001373053`", ",", 
           "0.3360733638569886`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.3443486080006981, 0.6422751001373053, 0.3360733638569886]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3443486080006981, 0.6422751001373053, 0.3360733638569886],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3541926425397739, 0.2959611559659039, 0.9559830896868329],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.23612842835984926`, 0.1973074373106026, 0.6373220597912219],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.3541926425397739`", ",", "0.2959611559659039`", ",", 
           "0.9559830896868329`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.3541926425397739, 0.2959611559659039, 0.9559830896868329]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3541926425397739, 0.2959611559659039, 0.9559830896868329],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.08551083691438421, 0.6888746025398258, 0.2239826140490866], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.05700722460958948, 0.45924973502655053`, 0.14932174269939108`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.08551083691438421`", ",", "0.6888746025398258`", ",", 
           "0.2239826140490866`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.08551083691438421, 0.6888746025398258, 0.2239826140490866]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.08551083691438421, 0.6888746025398258, 0.2239826140490866],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9404816975363262, 0.08545272251318137, 0.9223338849585192], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6269877983575508, 0.05696848167545425, 0.6148892566390128],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.9404816975363262`", ",", "0.08545272251318137`", ",", 
           "0.9223338849585192`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9404816975363262, 0.08545272251318137, 0.9223338849585192]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9404816975363262, 0.08545272251318137, 0.9223338849585192],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.2268596034228303, 0.11716717237446628`, 0.3127299616437369], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.1512397356152202, 0.0781114482496442, 0.2084866410958246],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2268596034228303`", ",", "0.11716717237446628`", ",", 
           "0.3127299616437369`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.2268596034228303, 0.11716717237446628`, 0.3127299616437369]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2268596034228303, 0.11716717237446628`, 0.3127299616437369],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6264411372209426, 0.6186228130246765, 0.8507188915090753],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.41762742481396176`, 0.41241520868311765`, 0.5671459276727169],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6264411372209426`", ",", "0.6186228130246765`", ",", 
           "0.8507188915090753`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.6264411372209426, 0.6186228130246765, 0.8507188915090753]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6264411372209426, 0.6186228130246765, 0.8507188915090753],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.7933200172738919, 0.39303139910037577`, 0.9381684236762917], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.528880011515928, 0.26202093273358384`, 0.6254456157841946],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.7933200172738919`", ",", "0.39303139910037577`", ",", 
           "0.9381684236762917`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.7933200172738919, 0.39303139910037577`, 0.9381684236762917]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7933200172738919, 0.39303139910037577`, 0.9381684236762917],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9879751467738862, 0.7514040058019009, 0.9708653011732282],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6586500978492575, 0.500936003867934, 0.6472435341154855],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.9879751467738862`", ",", "0.7514040058019009`", ",", 
           "0.9708653011732282`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9879751467738862, 0.7514040058019009, 0.9708653011732282]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9879751467738862, 0.7514040058019009, 0.9708653011732282],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.7095910255834188, 0.9332671972874065, 0.052705022852911565`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.4730606837222792, 0.6221781315249377, 0.035136681901941046`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.7095910255834188`", ",", "0.9332671972874065`", ",", 
           "0.052705022852911565`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.7095910255834188, 0.9332671972874065, 0.052705022852911565`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7095910255834188, 0.9332671972874065, 0.052705022852911565`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.7478828933410211, 0.44673253658167345`, 0.24909747343703992`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.49858859556068075`, 0.297821691054449, 0.16606498229135996`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.7478828933410211`", ",", "0.44673253658167345`", ",", 
           "0.24909747343703992`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.7478828933410211, 0.44673253658167345`, 0.24909747343703992`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7478828933410211, 0.44673253658167345`, 0.24909747343703992`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.25284091191360947`, 0.2298353231965553, 0.559911538749265], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.16856060794240632`, 0.15322354879770356`, 0.3732743591661767],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.25284091191360947`", ",", "0.2298353231965553`", ",", 
           "0.559911538749265`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.25284091191360947`, 0.2298353231965553, 0.559911538749265]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.25284091191360947`, 0.2298353231965553, 0.559911538749265],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5964905252213699, 0.7854232882746985, 0.0005451295928871058], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.39766035014757994`, 0.5236155255164657, 0.0003634197285914039],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5964905252213699`", ",", "0.7854232882746985`", ",", 
           "0.0005451295928871058`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5964905252213699, 0.7854232882746985, 0.0005451295928871058]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5964905252213699, 0.7854232882746985, 0.0005451295928871058],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.42612007175330335`, 0.4238572966582932, 0.10332777214184685`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.2840800478355356, 0.2825715311055288, 0.0688851814278979],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.42612007175330335`", ",", "0.4238572966582932`", ",", 
           "0.10332777214184685`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.42612007175330335`, 0.4238572966582932, 0.10332777214184685`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.42612007175330335`, 0.4238572966582932, 0.10332777214184685`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8394027049148882, 0.1169867376132907, 0.9014114466742487],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5596018032765921, 0.07799115840886048, 0.6009409644494992],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.8394027049148882`", ",", "0.1169867376132907`", ",", 
           "0.9014114466742487`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.8394027049148882, 0.1169867376132907, 0.9014114466742487]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8394027049148882, 0.1169867376132907, 0.9014114466742487],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.6812925581818767, 0.23434002751010174`, 0.6217439310077824], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.45419503878791784`, 0.1562266850067345, 0.41449595400518824`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6812925581818767`", ",", "0.23434002751010174`", ",", 
           "0.6217439310077824`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.6812925581818767, 0.23434002751010174`, 0.6217439310077824]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6812925581818767, 0.23434002751010174`, 0.6217439310077824],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8095080361074045, 0.5289308656879794, 0.9111074876326664],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5396720240716031, 0.35262057712531963`, 0.607404991755111],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.8095080361074045`", ",", "0.5289308656879794`", ",", 
           "0.9111074876326664`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.8095080361074045, 0.5289308656879794, 0.9111074876326664]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8095080361074045, 0.5289308656879794, 0.9111074876326664],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.32764036213456627`, 0.45708545593282546`, 0.4095544481672089], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.21842690808971085`, 0.30472363728855034`, 0.2730362987781393],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.32764036213456627`", ",", "0.45708545593282546`", ",", 
           "0.4095544481672089`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.32764036213456627`, 0.45708545593282546`, 0.4095544481672089]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.32764036213456627`, 0.45708545593282546`, 0.4095544481672089],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.15498838166329398`, 0.15824303986515353`, 0.6587804604002669], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.10332558777552933`, 0.10549535991010237`, 0.439186973600178],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.15498838166329398`", ",", "0.15824303986515353`", ",", 
           "0.6587804604002669`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.15498838166329398`, 0.15824303986515353`, 0.6587804604002669]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.15498838166329398`, 0.15824303986515353`, 0.6587804604002669],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.22621905918162577`, 0.7193803548125817, 0.8898197336276237], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.15081270612108386`, 0.4795869032083878, 0.5932131557517492],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.22621905918162577`", ",", "0.7193803548125817`", ",", 
           "0.8898197336276237`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.22621905918162577`, 0.7193803548125817, 0.8898197336276237]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.22621905918162577`, 0.7193803548125817, 0.8898197336276237],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9844545455992038, 0.21242091139682073`, 0.32876434328478354`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6563030303994692, 0.14161394093121382`, 0.21917622885652238`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.9844545455992038`", ",", "0.21242091139682073`", ",", 
           "0.32876434328478354`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9844545455992038, 0.21242091139682073`, 0.32876434328478354`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9844545455992038, 0.21242091139682073`, 0.32876434328478354`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.18189876666664495`, 0.6385491259797123, 0.8368047767887115], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.12126584444442998`, 0.4256994173198082, 0.5578698511924743],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.18189876666664495`", ",", "0.6385491259797123`", ",", 
           "0.8368047767887115`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.18189876666664495`, 0.6385491259797123, 0.8368047767887115]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.18189876666664495`, 0.6385491259797123, 0.8368047767887115],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9689516735485106, 0.5397094435471064, 0.05824677614062379], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6459677823656738, 0.35980629569807093`, 0.038831184093749194`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.9689516735485106`", ",", "0.5397094435471064`", ",", 
           "0.05824677614062379`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9689516735485106, 0.5397094435471064, 0.05824677614062379]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9689516735485106, 0.5397094435471064, 0.05824677614062379],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9997598351509964, 0.07342083465184124, 0.31382379879394295`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.666506556767331, 0.0489472231012275, 0.20921586586262864`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.9997598351509964`", ",", "0.07342083465184124`", ",", 
           "0.31382379879394295`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9997598351509964, 0.07342083465184124, 0.31382379879394295`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9997598351509964, 0.07342083465184124, 0.31382379879394295`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.07750063518124528, 0.4811878406264323, 0.15957682423803132`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.05166709012083019, 0.32079189375095485`, 0.10638454949202089`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.07750063518124528`", ",", "0.4811878406264323`", ",", 
           "0.15957682423803132`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.07750063518124528, 0.4811878406264323, 0.15957682423803132`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.07750063518124528, 0.4811878406264323, 0.15957682423803132`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.23229534277969988`, 0.5887634302236586, 0.47684284435185975`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.15486356185313327`, 0.3925089534824391, 0.3178952295679065],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.23229534277969988`", ",", "0.5887634302236586`", ",", 
           "0.47684284435185975`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.23229534277969988`, 0.5887634302236586, 0.47684284435185975`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.23229534277969988`, 0.5887634302236586, 0.47684284435185975`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.6500256230166142, 0.10453193228666158`, 0.766119230916841], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.43335041534440943`, 0.06968795485777439, 0.5107461539445607],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6500256230166142`", ",", "0.10453193228666158`", ",", 
           "0.766119230916841`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.6500256230166142, 0.10453193228666158`, 0.766119230916841]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6500256230166142, 0.10453193228666158`, 0.766119230916841],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.7649309990830877, 0.23030815895749646`, 0.45594811158433735`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5099539993887252, 0.153538772638331, 0.3039654077228916],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.7649309990830877`", ",", "0.23030815895749646`", ",", 
           "0.45594811158433735`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.7649309990830877, 0.23030815895749646`, 0.45594811158433735`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7649309990830877, 0.23030815895749646`, 0.45594811158433735`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3313846686731188, 0.5533027603000169, 0.8071226293648672],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.22092311244874585`, 0.36886850686667794`, 0.5380817529099116],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.3313846686731188`", ",", "0.5533027603000169`", ",", 
           "0.8071226293648672`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.3313846686731188, 0.5533027603000169, 0.8071226293648672]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3313846686731188, 0.5533027603000169, 0.8071226293648672],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5502576047959316, 0.9988156952478551, 0.05519909326499395], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3668384031972877, 0.6658771301652368, 0.03679939550999597],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5502576047959316`", ",", "0.9988156952478551`", ",", 
           "0.05519909326499395`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5502576047959316, 0.9988156952478551, 0.05519909326499395]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5502576047959316, 0.9988156952478551, 0.05519909326499395],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.46324223754918603`, 0.28333107783830846`, 0.019442654729932896`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.30882815836612404`, 0.188887385225539, 0.012961769819955265`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.46324223754918603`", ",", "0.28333107783830846`", ",", 
           "0.019442654729932896`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.46324223754918603`, 0.28333107783830846`, 0.019442654729932896`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
    0.46324223754918603`, 0.28333107783830846`, 0.019442654729932896`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.479976372433194, 0.31835727234355793`, 0.9145904192418854], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.319984248288796, 0.21223818156237195`, 0.609726946161257],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.479976372433194`", ",", "0.31835727234355793`", ",", 
           "0.9145904192418854`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.479976372433194, 0.31835727234355793`, 0.9145904192418854]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.479976372433194, 0.31835727234355793`, 0.9145904192418854],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.24622976506336514`, 0.707332548074562, 0.307702099741453],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.1641531767089101, 0.47155503204970806`, 0.2051347331609687],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.24622976506336514`", ",", "0.707332548074562`", ",", 
           "0.307702099741453`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.24622976506336514`, 0.707332548074562, 0.307702099741453]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.24622976506336514`, 0.707332548074562, 0.307702099741453],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.07133340166769853, 0.8921894169406794, 0.25419007044048136`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.04755560111179902, 0.5947929446271196, 0.1694600469603209],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.07133340166769853`", ",", "0.8921894169406794`", ",", 
           "0.25419007044048136`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.07133340166769853, 0.8921894169406794, 0.25419007044048136`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.07133340166769853, 0.8921894169406794, 0.25419007044048136`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3983036668984483, 0.783425564455486, 0.07443094528765726],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.2655357779322989, 0.5222837096369907, 0.04962063019177151],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.3983036668984483`", ",", "0.783425564455486`", ",", 
           "0.07443094528765726`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.3983036668984483, 0.783425564455486, 0.07443094528765726]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3983036668984483, 0.783425564455486, 0.07443094528765726],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.6351720848321258, 0.4344672721539702, 0.38199763768169825`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.4234480565547506, 0.2896448481026468, 0.25466509178779884`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6351720848321258`", ",", "0.4344672721539702`", ",", 
           "0.38199763768169825`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.6351720848321258, 0.4344672721539702, 0.38199763768169825`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6351720848321258, 0.4344672721539702, 0.38199763768169825`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7837045730705259, 0.2426188682642374, 0.4922797496712161],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5224697153803506, 0.16174591217615827`, 0.32818649978081077`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.7837045730705259`", ",", "0.2426188682642374`", ",", 
           "0.4922797496712161`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.7837045730705259, 0.2426188682642374, 0.4922797496712161]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7837045730705259, 0.2426188682642374, 0.4922797496712161],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.4856280933303625, 0.19208654604975073`, 0.013481533280932156`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.32375206222024167`, 0.1280576973665005, 0.008987688853954772],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.4856280933303625`", ",", "0.19208654604975073`", ",", 
           "0.013481533280932156`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.4856280933303625, 0.19208654604975073`, 0.013481533280932156`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4856280933303625, 0.19208654604975073`, 0.013481533280932156`],
    
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.026464853508305408`, 0.5987346259033808, 0.7543774310939013], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.017643235672203605`, 0.39915641726892054`, 0.5029182873959342],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.026464853508305408`", ",", "0.5987346259033808`", ",", 
           "0.7543774310939013`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.026464853508305408`, 0.5987346259033808, 0.7543774310939013]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.026464853508305408`, 0.5987346259033808, 0.7543774310939013],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.7763492152028821, 0.8245392738689727, 0.36960159759456346`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5175661434685881, 0.5496928492459818, 0.24640106506304232`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.7763492152028821`", ",", "0.8245392738689727`", ",", 
           "0.36960159759456346`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.7763492152028821, 0.8245392738689727, 0.36960159759456346`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7763492152028821, 0.8245392738689727, 0.36960159759456346`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5329967170451344, 0.5492791360986118, 0.8296542522115218],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3553311446967563, 0.3661860907324079, 0.5531028348076812],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5329967170451344`", ",", "0.5492791360986118`", ",", 
           "0.8296542522115218`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.5329967170451344, 0.5492791360986118, 0.8296542522115218]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5329967170451344, 0.5492791360986118, 0.8296542522115218],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5701426197874235, 0.902368845343235, 0.6954682879776131], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3800950798582824, 0.6015792302288234, 0.46364552531840875`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5701426197874235`", ",", "0.902368845343235`", ",", 
           "0.6954682879776131`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.5701426197874235, 0.902368845343235, 0.6954682879776131]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5701426197874235, 0.902368845343235, 0.6954682879776131],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.7463659418304378, 0.0065179010570348694`, 0.14826369583755739`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.4975772945536252, 0.00434526737135658, 0.09884246389170492],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.7463659418304378`", ",", "0.0065179010570348694`", ",", 
           "0.14826369583755739`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.7463659418304378, 0.0065179010570348694`, 0.14826369583755739`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7463659418304378, 0.0065179010570348694`, 0.14826369583755739`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.526636095568116, 0.29981549021175025`, 0.7426698353846952], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.351090730378744, 0.19987699347450016`, 0.4951132235897968],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.526636095568116`", ",", "0.29981549021175025`", ",", 
           "0.7426698353846952`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.526636095568116, 0.29981549021175025`, 0.7426698353846952]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.526636095568116, 0.29981549021175025`, 0.7426698353846952],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.45180103939396643`, 0.5584025461085773, 0.3608651056100971], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.30120069292931095`, 0.3722683640723849, 0.24057673707339808`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.45180103939396643`", ",", "0.5584025461085773`", ",", 
           "0.3608651056100971`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.45180103939396643`, 0.5584025461085773, 0.3608651056100971]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.45180103939396643`, 0.5584025461085773, 0.3608651056100971],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5436824608711355, 0.6368265562729978, 0.20859778953467956`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3624549739140903, 0.42455103751533185`, 0.1390651930231197],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5436824608711355`", ",", "0.6368265562729978`", ",", 
           "0.20859778953467956`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5436824608711355, 0.6368265562729978, 0.20859778953467956`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5436824608711355, 0.6368265562729978, 0.20859778953467956`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.12107063893629055`, 0.5916075095543469, 0.30365612533873554`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.08071375929086037, 0.39440500636956466`, 0.20243741689249037`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.12107063893629055`", ",", "0.5916075095543469`", ",", 
           "0.30365612533873554`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.12107063893629055`, 0.5916075095543469, 0.30365612533873554`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.12107063893629055`, 0.5916075095543469, 0.30365612533873554`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.7354306350293238, 0.7706832421579728, 0.010092174004172616`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.49028709001954923`, 0.5137888281053152, 0.006728116002781745],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.7354306350293238`", ",", "0.7706832421579728`", ",", 
           "0.010092174004172616`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.7354306350293238, 0.7706832421579728, 0.010092174004172616`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7354306350293238, 0.7706832421579728, 0.010092174004172616`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3613279246594756, 0.9559056100621954, 0.7523500136612113],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.24088528310631707`, 0.6372704067081303, 0.5015666757741409],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.3613279246594756`", ",", "0.9559056100621954`", ",", 
           "0.7523500136612113`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.3613279246594756, 0.9559056100621954, 0.7523500136612113]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3613279246594756, 0.9559056100621954, 0.7523500136612113],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.022680497248779963`, 0.7099025878591139, 0.6062844254021029], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.015120331499186642`, 0.47326839190607595`, 0.4041896169347353],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.022680497248779963`", ",", "0.7099025878591139`", ",", 
           "0.6062844254021029`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.022680497248779963`, 0.7099025878591139, 0.6062844254021029]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.022680497248779963`, 0.7099025878591139, 0.6062844254021029],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.82731790878063*^9, 3.827317913247572*^9}, {
   3.8273179470674963`*^9, 3.827317984133156*^9}, {3.827318041085206*^9, 
   3.827318062277413*^9}, 3.827318252131365*^9, 3.827318339494808*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"94ee98ee-48e0-40e2-9425-d48696fd1ecb"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.65], 
    LineBox[{{{1597.8759765625, 0.4910888722747059}, {1597.8759765625, 
      0.543332471894629}}, {{2500, 0}, {2500., 0.543332471894629}}, {{
      1597.8759765625, 0.543332471894629}, {2500., 0.543332471894629}}, {{
      984.521484375, 0.47067543619359653`}, {984.521484375, 
      0.4910888722747059}}, {{2211.23046875, 0.45317472219164584`}, {
      2211.23046875, 0.4910888722747059}}, {{984.521484375, 
      0.4910888722747059}, {2211.23046875, 0.4910888722747059}}, {{
      869.04296875, 0.3780359451195176}, {869.04296875, 
      0.47067543619359653`}}, {{1100, 0}, {1100., 0.47067543619359653`}}, {{
      869.04296875, 0.47067543619359653`}, {1100., 0.47067543619359653`}}, {{
      713.0859375, 0.3635382247425458}, {713.0859375, 0.3780359451195176}}, {{
      1025., 0.3332145958289523}, {1025., 0.3780359451195176}}, {{713.0859375,
       0.3780359451195176}, {1025., 0.3780359451195176}}, {{538.671875, 
      0.36138364627958464`}, {538.671875, 0.3635382247425458}}, {{887.5, 
      0.3326256716925563}, {887.5, 0.3635382247425458}}, {{538.671875, 
      0.3635382247425458}, {887.5, 0.3635382247425458}}, {{402.34375, 
      0.3598648144512966}, {402.34375, 0.36138364627958464`}}, {{675., 
      0.2508728815201948}, {675., 0.36138364627958464`}}, {{402.34375, 
      0.36138364627958464`}, {675., 0.36138364627958464`}}, {{304.6875, 
      0.3401842726491553}, {304.6875, 
      0.3598648144512966}}, {{500, 0}, {500., 0.3598648144512966}}, {{
      304.6875, 0.3598648144512966}, {500., 0.3598648144512966}}, {{203.125, 
      0.2947134049033453}, {203.125, 0.3401842726491553}}, {{406.25, 
      0.3341162167432471}, {406.25, 0.3401842726491553}}, {{203.125, 
      0.3401842726491553}, {406.25, 0.3401842726491553}}, {{156.25, 
      0.2583192048539109}, {156.25, 
      0.2947134049033453}}, {{250, 0}, {250., 0.2947134049033453}}, {{156.25, 
      0.2947134049033453}, {250., 0.2947134049033453}}, {{112.5, 
      0.1536644760834821}, {112.5, 
      0.2583192048539109}}, {{200, 0}, {200., 0.2583192048539109}}, {{112.5, 
      0.2583192048539109}, {200., 0.2583192048539109}}, {{75., 
      0.10665442625475141`}, {75., 
      0.1536644760834821}}, {{150, 0}, {150., 0.1536644760834821}}, {{75., 
      0.1536644760834821}, {150., 
      0.1536644760834821}}, {{50, 0}, {50., 0.10665442625475141`}}, {{100, 
       0}, {100., 0.10665442625475141`}}, {{50., 0.10665442625475141`}, {100.,
       0.10665442625475141`}}, {{362.5, 0.27486732842252504`}, {362.5, 
      0.3341162167432471}}, {{450, 0}, {450., 0.3341162167432471}}, {{362.5, 
      0.3341162167432471}, {450., 0.3341162167432471}}, {{325., 
      0.15601579424900647`}, {325., 
      0.27486732842252504`}}, {{400, 0}, {400., 0.27486732842252504`}}, {{
      325., 0.27486732842252504`}, {400., 
      0.27486732842252504`}}, {{300, 0}, {300., 0.15601579424900647`}}, {{350,
        0}, {350., 0.15601579424900647`}}, {{300., 0.15601579424900647`}, {
      350., 0.15601579424900647`}}, {{612.5, 0.20981211392391996`}, {612.5, 
      0.2508728815201948}}, {{737.5, 0.13692859140274882`}, {737.5, 
      0.2508728815201948}}, {{612.5, 0.2508728815201948}, {737.5, 
      0.2508728815201948}}, {{575., 0.15221863512971}, {575., 
      0.20981211392391996`}}, {{650, 0}, {650., 0.20981211392391996`}}, {{
      575., 0.20981211392391996`}, {650., 
      0.20981211392391996`}}, {{550, 0}, {550., 0.15221863512971}}, {{600, 
       0}, {600., 0.15221863512971}}, {{550., 0.15221863512971}, {600., 
      0.15221863512971}}, {{700, 0}, {700., 0.13692859140274882`}}, {{775., 
      0.13237157415463907`}, {775., 0.13692859140274882`}}, {{700., 
      0.13692859140274882`}, {775., 
      0.13692859140274882`}}, {{750, 0}, {750., 0.13237157415463907`}}, {{800,
        0}, {800., 0.13237157415463907`}}, {{750., 0.13237157415463907`}, {
      800., 0.13237157415463907`}}, {{850, 0}, {850., 0.3326256716925563}}, {{
      925., 0.0581688902675922}, {925., 0.3326256716925563}}, {{850., 
      0.3326256716925563}, {925., 
      0.3326256716925563}}, {{900, 0}, {900., 0.0581688902675922}}, {{950, 
       0}, {950., 0.0581688902675922}}, {{900., 0.0581688902675922}, {950., 
      0.0581688902675922}}, {{1000, 0}, {1000., 0.3332145958289523}}, {{1050, 
       0}, {1050., 0.3332145958289523}}, {{1000., 0.3332145958289523}, {1050.,
       0.3332145958289523}}, {{2034.9609375, 0.40034181749128106`}, {
      2034.9609375, 0.45317472219164584`}}, {{2387.5, 0.2995752226923445}, {
      2387.5, 0.45317472219164584`}}, {{2034.9609375, 0.45317472219164584`}, {
      2387.5, 0.45317472219164584`}}, {{1816.796875, 0.38147022050927515`}, {
      1816.796875, 0.40034181749128106`}}, {{2253.125, 0.3694782959247117}, {
      2253.125, 0.40034181749128106`}}, {{1816.796875, 
      0.40034181749128106`}, {2253.125, 0.40034181749128106`}}, {{1608.59375, 
      0.3398883625515684}, {1608.59375, 0.38147022050927515`}}, {{2025., 
      0.2286040059610155}, {2025., 0.38147022050927515`}}, {{1608.59375, 
      0.38147022050927515`}, {2025., 0.38147022050927515`}}, {{1387.5, 
      0.33868979278534184`}, {1387.5, 0.3398883625515684}}, {{1829.6875, 
      0.33393991896707353`}, {1829.6875, 0.3398883625515684}}, {{1387.5, 
      0.3398883625515684}, {1829.6875, 0.3398883625515684}}, {{1268.75, 
      0.2585505852770724}, {1268.75, 0.33868979278534184`}}, {{1506.25, 
      0.3337935557989984}, {1506.25, 0.33868979278534184`}}, {{1268.75, 
      0.33868979278534184`}, {1506.25, 0.33868979278534184`}}, {{1212.5, 
      0.19922197729786562`}, {1212.5, 0.2585505852770724}}, {{1325., 
      0.15153592303289165`}, {1325., 0.2585505852770724}}, {{1212.5, 
      0.2585505852770724}, {1325., 0.2585505852770724}}, {{1175., 
      0.18709342580686883`}, {1175., 
      0.19922197729786562`}}, {{1250, 0}, {1250., 0.19922197729786562`}}, {{
      1175., 0.19922197729786562`}, {1250., 
      0.19922197729786562`}}, {{1150, 0}, {1150., 0.18709342580686883`}}, {{
       1200, 0}, {1200., 0.18709342580686883`}}, {{1150., 
      0.18709342580686883`}, {1200., 
      0.18709342580686883`}}, {{1300, 0}, {1300., 0.15153592303289165`}}, {{
       1350, 0}, {1350., 0.15153592303289165`}}, {{1300., 
      0.15153592303289165`}, {1350., 0.15153592303289165`}}, {{1462.5, 
      0.330849545305136}, {1462.5, 
      0.3337935557989984}}, {{1550, 0}, {1550., 0.3337935557989984}}, {{
      1462.5, 0.3337935557989984}, {1550., 0.3337935557989984}}, {{1425., 
      0.25571296404528476`}, {1425., 
      0.330849545305136}}, {{1500, 0}, {1500., 0.330849545305136}}, {{1425., 
      0.330849545305136}, {1500., 
      0.330849545305136}}, {{1400, 0}, {1400., 0.25571296404528476`}}, {{1450,
        0}, {1450., 0.25571296404528476`}}, {{1400., 0.25571296404528476`}, {
      1450., 0.25571296404528476`}}, {{1709.375, 0.26479657536138534`}, {
      1709.375, 
      0.33393991896707353`}}, {{1950, 0}, {1950., 0.33393991896707353`}}, {{
      1709.375, 0.33393991896707353`}, {1950., 0.33393991896707353`}}, {{
      1625., 0.2583803378309637}, {1625., 0.26479657536138534`}}, {{1793.75, 
      0.26307661483868794`}, {1793.75, 0.26479657536138534`}}, {{1625., 
      0.26479657536138534`}, {1793.75, 
      0.26479657536138534`}}, {{1600, 0}, {1600., 0.2583803378309637}}, {{
       1650, 0}, {1650., 0.2583803378309637}}, {{1600., 0.2583803378309637}, {
      1650., 0.2583803378309637}}, {{1725., 0.23738104353818368`}, {1725., 
      0.26307661483868794`}}, {{1862.5, 0.2536891803075274}, {1862.5, 
      0.26307661483868794`}}, {{1725., 0.26307661483868794`}, {1862.5, 
      0.26307661483868794`}}, {{1700, 0}, {1700., 0.23738104353818368`}}, {{
       1750, 0}, {1750., 0.23738104353818368`}}, {{1700., 
      0.23738104353818368`}, {1750., 0.23738104353818368`}}, {{1825., 
      0.1977805853327349}, {1825., 
      0.2536891803075274}}, {{1900, 0}, {1900., 0.2536891803075274}}, {{1825.,
       0.2536891803075274}, {1900., 
      0.2536891803075274}}, {{1800, 0}, {1800., 0.1977805853327349}}, {{1850, 
       0}, {1850., 0.1977805853327349}}, {{1800., 0.1977805853327349}, {1850.,
       0.1977805853327349}}, {{2000, 0}, {2000., 0.2286040059610155}}, {{2050,
        0}, {2050., 0.2286040059610155}}, {{2000., 0.2286040059610155}, {
      2050., 0.2286040059610155}}, {{2206.25, 0.33377027484898975`}, {2206.25,
       0.3694782959247117}}, {{2300, 0}, {2300., 0.3694782959247117}}, {{
      2206.25, 0.3694782959247117}, {2300., 0.3694782959247117}}, {{2162.5, 
      0.2922160972618994}, {2162.5, 
      0.33377027484898975`}}, {{2250, 0}, {2250., 0.33377027484898975`}}, {{
      2162.5, 0.33377027484898975`}, {2250., 0.33377027484898975`}}, {{2125., 
      0.21141706462898135`}, {2125., 
      0.2922160972618994}}, {{2200, 0}, {2200., 0.2922160972618994}}, {{2125.,
       0.2922160972618994}, {2200., 
      0.2922160972618994}}, {{2100, 0}, {2100., 0.21141706462898135`}}, {{
       2150, 0}, {2150., 0.21141706462898135`}}, {{2100., 
      0.21141706462898135`}, {2150., 
      0.21141706462898135`}}, {{2350, 0}, {2350., 0.2995752226923445}}, {{
      2425., 0.09196255634056538}, {2425., 0.2995752226923445}}, {{2350., 
      0.2995752226923445}, {2425., 
      0.2995752226923445}}, {{2400, 0}, {2400., 0.09196255634056538}}, {{2450,
        0}, {2450., 0.09196255634056538}}, {{2400., 0.09196255634056538}, {
      2450., 0.09196255634056538}}}]}, InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.8535642814574338, 0.15772466147397712`, 0.8580196841854286], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5690428543049559, 0.10514977431598475`, 0.5720131227902858],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.8535642814574338`", ",", "0.15772466147397712`", ",", 
              "0.8580196841854286`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.8535642814574338, 0.15772466147397712`, 0.8580196841854286]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.8535642814574338, 0.15772466147397712`, 0.8580196841854286],
       
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {50, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.8394027049148882, 0.1169867376132907, 0.9014114466742487], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5596018032765921, 0.07799115840886048, 0.6009409644494992],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.8394027049148882`", ",", "0.1169867376132907`", ",", 
              "0.9014114466742487`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.8394027049148882, 0.1169867376132907, 0.9014114466742487]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.8394027049148882, 0.1169867376132907, 0.9014114466742487],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {100, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.9404816975363262, 0.08545272251318137, 0.9223338849585192], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6269877983575508, 0.05696848167545425, 0.6148892566390128],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.9404816975363262`", ",", "0.08545272251318137`", ",", 
              "0.9223338849585192`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.9404816975363262, 0.08545272251318137, 0.9223338849585192]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.9404816975363262, 0.08545272251318137, 0.9223338849585192],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {150, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.6500256230166142, 0.10453193228666158`, 0.766119230916841], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.43335041534440943`, 0.06968795485777439, 0.5107461539445607],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.6500256230166142`", ",", "0.10453193228666158`", ",", 
              "0.766119230916841`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.6500256230166142, 0.10453193228666158`, 0.766119230916841]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.6500256230166142, 0.10453193228666158`, 0.766119230916841],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {200, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.7933200172738919, 0.39303139910037577`, 0.9381684236762917], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.528880011515928, 0.26202093273358384`, 0.6254456157841946],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.7933200172738919`", ",", "0.39303139910037577`", ",", 
              "0.9381684236762917`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.7933200172738919, 0.39303139910037577`, 0.9381684236762917]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.7933200172738919, 0.39303139910037577`, 0.9381684236762917],
       
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {250, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.3541926425397739, 0.2959611559659039, 0.9559830896868329], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.23612842835984926`, 0.1973074373106026, 0.6373220597912219],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.3541926425397739`", ",", "0.2959611559659039`", ",", 
              "0.9559830896868329`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.3541926425397739, 0.2959611559659039, 0.9559830896868329]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.3541926425397739, 0.2959611559659039, 0.9559830896868329],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {300, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.479976372433194, 0.31835727234355793`, 0.9145904192418854], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.319984248288796, 0.21223818156237195`, 0.609726946161257],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.479976372433194`", ",", "0.31835727234355793`", ",", 
              "0.9145904192418854`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.479976372433194, 0.31835727234355793`, 0.9145904192418854]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.479976372433194, 0.31835727234355793`, 0.9145904192418854],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {350, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.526636095568116, 0.29981549021175025`, 0.7426698353846952], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.351090730378744, 0.19987699347450016`, 0.4951132235897968],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.526636095568116`", ",", "0.29981549021175025`", ",", 
              "0.7426698353846952`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.526636095568116, 0.29981549021175025`, 0.7426698353846952]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.526636095568116, 0.29981549021175025`, 0.7426698353846952],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {400, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.15498838166329398`, 0.15824303986515353`, 0.6587804604002669], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.10332558777552933`, 0.10549535991010237`, 0.439186973600178],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.15498838166329398`", ",", "0.15824303986515353`", ",", 
              "0.6587804604002669`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.15498838166329398`, 0.15824303986515353`, 0.6587804604002669]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.15498838166329398`, 0.15824303986515353`, 0.6587804604002669],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {450, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.8095080361074045, 0.5289308656879794, 0.9111074876326664], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5396720240716031, 0.35262057712531963`, 0.607404991755111],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.8095080361074045`", ",", "0.5289308656879794`", ",", 
              "0.9111074876326664`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.8095080361074045, 0.5289308656879794, 0.9111074876326664]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.8095080361074045, 0.5289308656879794, 0.9111074876326664],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {500, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.6264411372209426, 0.6186228130246765, 0.8507188915090753], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.41762742481396176`, 0.41241520868311765`, 0.5671459276727169],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.6264411372209426`", ",", "0.6186228130246765`", ",", 
              "0.8507188915090753`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.6264411372209426, 0.6186228130246765, 0.8507188915090753]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.6264411372209426, 0.6186228130246765, 0.8507188915090753],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {550, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.5329967170451344, 0.5492791360986118, 0.8296542522115218], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3553311446967563, 0.3661860907324079, 0.5531028348076812],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.5329967170451344`", ",", "0.5492791360986118`", ",", 
              "0.8296542522115218`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.5329967170451344, 0.5492791360986118, 0.8296542522115218]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5329967170451344, 0.5492791360986118, 0.8296542522115218],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {600, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.3313846686731188, 0.5533027603000169, 0.8071226293648672], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.22092311244874585`, 0.36886850686667794`, 0.5380817529099116],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.3313846686731188`", ",", "0.5533027603000169`", ",", 
              "0.8071226293648672`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.3313846686731188, 0.5533027603000169, 0.8071226293648672]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.3313846686731188, 0.5533027603000169, 0.8071226293648672],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {650, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.22621905918162577`, 0.7193803548125817, 0.8898197336276237], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.15081270612108386`, 0.4795869032083878, 0.5932131557517492],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.22621905918162577`", ",", "0.7193803548125817`", ",", 
              "0.8898197336276237`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.22621905918162577`, 0.7193803548125817, 0.8898197336276237]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.22621905918162577`, 0.7193803548125817, 0.8898197336276237],
       
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {700, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.18189876666664495`, 0.6385491259797123, 0.8368047767887115], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.12126584444442998`, 0.4256994173198082, 0.5578698511924743],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.18189876666664495`", ",", "0.6385491259797123`", ",", 
              "0.8368047767887115`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.18189876666664495`, 0.6385491259797123, 0.8368047767887115]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.18189876666664495`, 0.6385491259797123, 0.8368047767887115],
       
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {750, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.026464853508305408`, 0.5987346259033808, 0.7543774310939013], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.017643235672203605`, 0.39915641726892054`, 0.5029182873959342],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.026464853508305408`", ",", "0.5987346259033808`", ",", 
              "0.7543774310939013`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.026464853508305408`, 0.5987346259033808, 0.7543774310939013]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.026464853508305408`, 0.5987346259033808, 0.7543774310939013],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {800, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.6812925581818767, 0.23434002751010174`, 0.6217439310077824], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.45419503878791784`, 0.1562266850067345, 0.41449595400518824`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.6812925581818767`", ",", "0.23434002751010174`", ",", 
              "0.6217439310077824`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.6812925581818767, 0.23434002751010174`, 0.6217439310077824]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.6812925581818767, 0.23434002751010174`, 0.6217439310077824],
       
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {850, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.7837045730705259, 0.2426188682642374, 0.4922797496712161], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5224697153803506, 0.16174591217615827`, 0.32818649978081077`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.7837045730705259`", ",", "0.2426188682642374`", ",", 
              "0.4922797496712161`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.7837045730705259, 0.2426188682642374, 0.4922797496712161]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.7837045730705259, 0.2426188682642374, 0.4922797496712161],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {900, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.7649309990830877, 0.23030815895749646`, 0.45594811158433735`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5099539993887252, 0.153538772638331, 0.3039654077228916],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.7649309990830877`", ",", "0.23030815895749646`", ",", 
              "0.45594811158433735`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.7649309990830877, 0.23030815895749646`, 0.45594811158433735`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.7649309990830877, 0.23030815895749646`, 0.45594811158433735`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {950, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.2268596034228303, 0.11716717237446628`, 0.3127299616437369], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.1512397356152202, 0.0781114482496442, 0.2084866410958246],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.2268596034228303`", ",", "0.11716717237446628`", ",", 
              "0.3127299616437369`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.2268596034228303, 0.11716717237446628`, 0.3127299616437369]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.2268596034228303, 0.11716717237446628`, 0.3127299616437369],
       
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1000, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.25284091191360947`, 0.2298353231965553, 0.559911538749265], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.16856060794240632`, 0.15322354879770356`, 0.3732743591661767],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.25284091191360947`", ",", "0.2298353231965553`", ",", 
              "0.559911538749265`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.25284091191360947`, 0.2298353231965553, 0.559911538749265]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.25284091191360947`, 0.2298353231965553, 0.559911538749265],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1050, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.9879751467738862, 0.7514040058019009, 0.9708653011732282], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6586500978492575, 0.500936003867934, 0.6472435341154855],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.9879751467738862`", ",", "0.7514040058019009`", ",", 
              "0.9708653011732282`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.9879751467738862, 0.7514040058019009, 0.9708653011732282]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.9879751467738862, 0.7514040058019009, 0.9708653011732282],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1100, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.3443486080006981, 0.6422751001373053, 0.3360733638569886], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.2295657386671321, 0.4281834000915369, 0.22404890923799242`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.3443486080006981`", ",", "0.6422751001373053`", ",", 
              "0.3360733638569886`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.3443486080006981, 0.6422751001373053, 0.3360733638569886]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.3443486080006981, 0.6422751001373053, 0.3360733638569886],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1150, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.12107063893629055`, 0.5916075095543469, 0.30365612533873554`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.08071375929086037, 0.39440500636956466`, 0.20243741689249037`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.12107063893629055`", ",", "0.5916075095543469`", ",", 
              "0.30365612533873554`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.12107063893629055`, 0.5916075095543469, 0.30365612533873554`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.12107063893629055`, 0.5916075095543469, 0.30365612533873554`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1200, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.07750063518124528, 0.4811878406264323, 0.15957682423803132`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.05166709012083019, 0.32079189375095485`, 0.10638454949202089`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.07750063518124528`", ",", "0.4811878406264323`", ",", 
              "0.15957682423803132`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.07750063518124528, 0.4811878406264323, 0.15957682423803132`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.07750063518124528, 0.4811878406264323, 0.15957682423803132`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1250, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.08551083691438421, 0.6888746025398258, 0.2239826140490866], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.05700722460958948, 0.45924973502655053`, 0.14932174269939108`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.08551083691438421`", ",", "0.6888746025398258`", ",", 
              "0.2239826140490866`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.08551083691438421, 0.6888746025398258, 0.2239826140490866]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.08551083691438421, 0.6888746025398258, 0.2239826140490866],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1300, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.24622976506336514`, 0.707332548074562, 0.307702099741453], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.1641531767089101, 0.47155503204970806`, 0.2051347331609687],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.24622976506336514`", ",", "0.707332548074562`", ",", 
              "0.307702099741453`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.24622976506336514`, 0.707332548074562, 0.307702099741453]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.24622976506336514`, 0.707332548074562, 0.307702099741453],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1350, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.022680497248779963`, 0.7099025878591139, 0.6062844254021029], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.015120331499186642`, 0.47326839190607595`, 0.4041896169347353],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.022680497248779963`", ",", "0.7099025878591139`", ",", 
              "0.6062844254021029`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.022680497248779963`, 0.7099025878591139, 0.6062844254021029]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.022680497248779963`, 0.7099025878591139, 0.6062844254021029],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1400, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.23229534277969988`, 0.5887634302236586, 0.47684284435185975`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.15486356185313327`, 0.3925089534824391, 0.3178952295679065],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.23229534277969988`", ",", "0.5887634302236586`", ",", 
              "0.47684284435185975`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.23229534277969988`, 0.5887634302236586, 0.47684284435185975`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.23229534277969988`, 0.5887634302236586, 0.47684284435185975`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1450, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.32764036213456627`, 0.45708545593282546`, 0.4095544481672089], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.21842690808971085`, 0.30472363728855034`, 0.2730362987781393],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.32764036213456627`", ",", "0.45708545593282546`", ",", 
              "0.4095544481672089`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.32764036213456627`, 0.45708545593282546`, 0.4095544481672089]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.32764036213456627`, 0.45708545593282546`, 0.4095544481672089],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1500, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.45180103939396643`, 0.5584025461085773, 0.3608651056100971], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.30120069292931095`, 0.3722683640723849, 0.24057673707339808`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.45180103939396643`", ",", "0.5584025461085773`", ",", 
              "0.3608651056100971`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.45180103939396643`, 0.5584025461085773, 0.3608651056100971]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.45180103939396643`, 0.5584025461085773, 0.3608651056100971],
       
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1550, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.7763492152028821, 0.8245392738689727, 0.36960159759456346`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5175661434685881, 0.5496928492459818, 0.24640106506304232`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.7763492152028821`", ",", "0.8245392738689727`", ",", 
              "0.36960159759456346`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.7763492152028821, 0.8245392738689727, 0.36960159759456346`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.7763492152028821, 0.8245392738689727, 0.36960159759456346`],
       
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1600, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.5436824608711355, 0.6368265562729978, 0.20859778953467956`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3624549739140903, 0.42455103751533185`, 0.1390651930231197],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.5436824608711355`", ",", "0.6368265562729978`", ",", 
              "0.20859778953467956`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.5436824608711355, 0.6368265562729978, 0.20859778953467956`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5436824608711355, 0.6368265562729978, 0.20859778953467956`],
       
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1650, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.5502576047959316, 0.9988156952478551, 0.05519909326499395], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3668384031972877, 0.6658771301652368, 0.03679939550999597],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.5502576047959316`", ",", "0.9988156952478551`", ",", 
              "0.05519909326499395`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.5502576047959316, 0.9988156952478551, 0.05519909326499395]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5502576047959316, 0.9988156952478551, 0.05519909326499395],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1700, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.7095910255834188, 0.9332671972874065, 0.052705022852911565`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4730606837222792, 0.6221781315249377, 0.035136681901941046`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.7095910255834188`", ",", "0.9332671972874065`", ",", 
              "0.052705022852911565`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.7095910255834188, 0.9332671972874065, 0.052705022852911565`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.7095910255834188, 0.9332671972874065, 0.052705022852911565`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1750, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.5964905252213699, 0.7854232882746985, 0.0005451295928871058], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.39766035014757994`, 0.5236155255164657, 0.0003634197285914039],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.5964905252213699`", ",", "0.7854232882746985`", ",", 
              "0.0005451295928871058`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.5964905252213699, 0.7854232882746985, 0.0005451295928871058]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5964905252213699, 0.7854232882746985, 0.0005451295928871058],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1800, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.7354306350293238, 0.7706832421579728, 0.010092174004172616`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.49028709001954923`, 0.5137888281053152, 0.006728116002781745],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.7354306350293238`", ",", "0.7706832421579728`", ",", 
              "0.010092174004172616`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.7354306350293238, 0.7706832421579728, 0.010092174004172616`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.7354306350293238, 0.7706832421579728, 0.010092174004172616`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1850, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.3983036668984483, 0.783425564455486, 0.07443094528765726], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.2655357779322989, 0.5222837096369907, 0.04962063019177151],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.3983036668984483`", ",", "0.783425564455486`", ",", 
              "0.07443094528765726`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.3983036668984483, 0.783425564455486, 0.07443094528765726]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.3983036668984483, 0.783425564455486, 0.07443094528765726],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1900, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.07133340166769853, 0.8921894169406794, 0.25419007044048136`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.04755560111179902, 0.5947929446271196, 0.1694600469603209],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.07133340166769853`", ",", "0.8921894169406794`", ",", 
              "0.25419007044048136`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.07133340166769853, 0.8921894169406794, 0.25419007044048136`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.07133340166769853, 0.8921894169406794, 0.25419007044048136`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {1950, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.3613279246594756, 0.9559056100621954, 0.7523500136612113], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.24088528310631707`, 0.6372704067081303, 0.5015666757741409],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.3613279246594756`", ",", "0.9559056100621954`", ",", 
              "0.7523500136612113`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.3613279246594756, 0.9559056100621954, 0.7523500136612113]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.3613279246594756, 0.9559056100621954, 0.7523500136612113],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {2000, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.5701426197874235, 0.902368845343235, 0.6954682879776131], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3800950798582824, 0.6015792302288234, 0.46364552531840875`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.5701426197874235`", ",", "0.902368845343235`", ",", 
              "0.6954682879776131`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.5701426197874235, 0.902368845343235, 0.6954682879776131]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5701426197874235, 0.902368845343235, 0.6954682879776131],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {2050, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.4856280933303625, 0.19208654604975073`, 0.013481533280932156`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.32375206222024167`, 0.1280576973665005, 0.008987688853954772],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.4856280933303625`", ",", "0.19208654604975073`", ",", 
              "0.013481533280932156`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.4856280933303625, 0.19208654604975073`, 0.013481533280932156`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.4856280933303625, 0.19208654604975073`, 0.013481533280932156`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {2100, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.46324223754918603`, 0.28333107783830846`, 
             0.019442654729932896`], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.30882815836612404`, 0.188887385225539, 0.012961769819955265`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.46324223754918603`", ",", "0.28333107783830846`", ",", 
              "0.019442654729932896`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.46324223754918603`, 0.28333107783830846`, 
              0.019442654729932896`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.46324223754918603`, 0.28333107783830846`, 0.019442654729932896`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {2150, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.7478828933410211, 0.44673253658167345`, 0.24909747343703992`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.49858859556068075`, 0.297821691054449, 0.16606498229135996`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.7478828933410211`", ",", "0.44673253658167345`", ",", 
              "0.24909747343703992`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.7478828933410211, 0.44673253658167345`, 0.24909747343703992`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.7478828933410211, 0.44673253658167345`, 0.24909747343703992`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {2200, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.42612007175330335`, 0.4238572966582932, 0.10332777214184685`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.2840800478355356, 0.2825715311055288, 0.0688851814278979],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.42612007175330335`", ",", "0.4238572966582932`", ",", 
              "0.10332777214184685`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.42612007175330335`, 0.4238572966582932, 0.10332777214184685`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.42612007175330335`, 0.4238572966582932, 0.10332777214184685`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {2250, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.6351720848321258, 0.4344672721539702, 0.38199763768169825`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4234480565547506, 0.2896448481026468, 0.25466509178779884`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.6351720848321258`", ",", "0.4344672721539702`", ",", 
              "0.38199763768169825`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.6351720848321258, 0.4344672721539702, 0.38199763768169825`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.6351720848321258, 0.4344672721539702, 0.38199763768169825`],
       
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {2300, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.7463659418304378, 0.0065179010570348694`, 0.14826369583755739`],
             RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4975772945536252, 0.00434526737135658, 0.09884246389170492],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.7463659418304378`", ",", "0.0065179010570348694`", ",",
               "0.14826369583755739`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.7463659418304378, 0.0065179010570348694`, 
              0.14826369583755739`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.7463659418304378, 0.0065179010570348694`, 0.14826369583755739`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {2350, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.9997598351509964, 0.07342083465184124, 0.31382379879394295`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.666506556767331, 0.0489472231012275, 0.20921586586262864`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.9997598351509964`", ",", "0.07342083465184124`", ",", 
              "0.31382379879394295`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.9997598351509964, 0.07342083465184124, 0.31382379879394295`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.9997598351509964, 0.07342083465184124, 0.31382379879394295`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {2400, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.9844545455992038, 0.21242091139682073`, 0.32876434328478354`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6563030303994692, 0.14161394093121382`, 0.21917622885652238`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.9844545455992038`", ",", "0.21242091139682073`", ",", 
              "0.32876434328478354`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.9844545455992038, 0.21242091139682073`, 0.32876434328478354`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.9844545455992038, 0.21242091139682073`, 0.32876434328478354`],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {2450, 0}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.9689516735485106, 0.5397094435471064, 0.05824677614062379], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6459677823656738, 0.35980629569807093`, 0.038831184093749194`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            
            RowBox[{"0.9689516735485106`", ",", "0.5397094435471064`", ",", 
              "0.05824677614062379`"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.9689516735485106, 0.5397094435471064, 0.05824677614062379]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.9689516735485106, 0.5397094435471064, 0.05824677614062379],
       Editable->False,
       Selectable->False],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {2500, 0}, Scaled[{0.5, 1}]]},
  AlignmentPoint->Center,
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{{3.82731790878063*^9, 3.827317913247572*^9}, {
   3.8273179470674963`*^9, 3.827317984133156*^9}, {3.827318041085206*^9, 
   3.827318062277413*^9}, 3.827318252131365*^9, 3.827318339627302*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"0fec02fb-56de-425c-85f1-4da8ce1341ca"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Opacity[0], PointBox[CompressedData["
1:eJwlUm1IU2EYvV5LUefSzXkR9uPanyBSYgTRH3fRKKd9GgX+yFZkLJIGhl9B
9IJEJBU4LVAoL9KvUEKrYZ+7mJgYLMo2ER28TEeSyNQFNdfS+5x74fLw3PO8
55znvLf0kreuURQEwaG/VPWHp56aNb26r+2OO/XKPHuyFb2qm2e/Uc9ve2yE
q/aWCPpnz02Es6l7kQARJM4XEC7P2DYJF0a0YvDJ0p8AeAfXqcrlgUw6xw81
5hKuVVz/C72Mm0nC2QNXLnTloETVLb6cceL8jTB05BjmtIsW8PPg6CrOlX+3
0rzw4u4s+PydK1SVfTm/Mf/on+Hvkz0Bvt6xfPhLBj/DV2m7SD0bvpAB3eWa
X9jD1dxDuDJkloA3WGPU8/CrEPhrF7GPEncIyOfKxxR8hve2wsfXIvDxhsfw
o/kWdtKcYhehJ09X/wf/1bIt4L3KCvIqnEzB50RxFHn7k4Xw6/UhDx5qykJf
7Yrj/NiHKHwd6EjD91J9CelqbbF+fF9rhm/34A/o8/lVK/LvPrpI8+rA5Xya
l9Wmd5g/3V2EHBxdP5HP/YcW7HFw9jV689I85ionca/ujmn4EU6cgX+WF1kD
fudJNvT6NPhW68exl3r4iw25yVXwx47VJMCziyEH7vXh/pmp0vhet5BGrl3R
TOR8csiC/Dzie+xvGjB4z437DV/pPPwPBW/xv7LjIdyTOrp/CnojWYb+3HAM
ud9aloz+zQb2O3XEmJd2JJzbemH8RQ==
     "]]}, {{}, {{}, {InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.8535642814574338, 0.15772466147397712`, 
                   0.8580196841854286], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.5690428543049559, 0.10514977431598475`, 0.5720131227902858],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.8535642814574338`", ",", "0.15772466147397712`", ",", 
                    "0.8580196841854286`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.8535642814574338, 0.15772466147397712`, 
                    0.8580196841854286]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.8535642814574338, 0.15772466147397712`, 0.8580196841854286],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.8535642814574338, 0.15772466147397712`, 
                   0.8580196841854286], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.5690428543049559, 0.10514977431598475`, 
                  0.5720131227902858], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.8535642814574338`", ",", "0.15772466147397712`", ",", 
                    "0.8580196841854286`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.8535642814574338, 0.15772466147397712`, 
                    0.8580196841854286]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.8535642814574338, 0.15772466147397712`, 0.8580196841854286], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.8535642814574338, 0.15772466147397712`, 0.8580196841854286], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.8276288509368896, 0.9729515910148621}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.3443486080006981, 0.6422751001373053, 0.3360733638569886],
                   RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.2295657386671321, 0.4281834000915369, 0.22404890923799242`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.3443486080006981`", ",", "0.6422751001373053`", ",", 
                    "0.3360733638569886`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.3443486080006981, 0.6422751001373053, 
                    0.3360733638569886]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.3443486080006981, 0.6422751001373053, 0.3360733638569886],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.3443486080006981, 0.6422751001373053, 0.3360733638569886], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.2295657386671321, 0.4281834000915369, 
                  0.22404890923799242`], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.3443486080006981`", ",", "0.6422751001373053`", ",", 
                    "0.3360733638569886`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.3443486080006981, 0.6422751001373053, 
                    0.3360733638569886]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.3443486080006981, 0.6422751001373053, 0.3360733638569886], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.3443486080006981, 0.6422751001373053, 0.3360733638569886], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.894242286682129, 0.27087274193763733}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.3541926425397739, 0.2959611559659039, 0.9559830896868329],
                   RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.23612842835984926`, 0.1973074373106026, 0.6373220597912219],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.3541926425397739`", ",", "0.2959611559659039`", ",", 
                    "0.9559830896868329`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.3541926425397739, 0.2959611559659039, 
                    0.9559830896868329]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.3541926425397739, 0.2959611559659039, 0.9559830896868329],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.3541926425397739, 0.2959611559659039, 0.9559830896868329], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.23612842835984926`, 0.1973074373106026, 
                  0.6373220597912219], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.3541926425397739`", ",", "0.2959611559659039`", ",", 
                    "0.9559830896868329`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.3541926425397739, 0.2959611559659039, 
                    0.9559830896868329]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.3541926425397739, 0.2959611559659039, 0.9559830896868329], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.3541926425397739, 0.2959611559659039, 0.9559830896868329], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-5.352050304412842, 0.4602729380130768}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.08551083691438421, 0.6888746025398258, 
                   0.2239826140490866], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.05700722460958948, 0.45924973502655053`, 
                  0.14932174269939108`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.08551083691438421`", ",", "0.6888746025398258`", ",", 
                    "0.2239826140490866`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.08551083691438421, 0.6888746025398258, 
                    0.2239826140490866]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.08551083691438421, 0.6888746025398258, 0.2239826140490866],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.08551083691438421, 0.6888746025398258, 
                   0.2239826140490866], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.05700722460958948, 0.45924973502655053`, 
                  0.14932174269939108`], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.08551083691438421`", ",", "0.6888746025398258`", ",", 
                    "0.2239826140490866`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.08551083691438421, 0.6888746025398258, 
                    0.2239826140490866]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.08551083691438421, 0.6888746025398258, 0.2239826140490866], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.08551083691438421, 0.6888746025398258, 0.2239826140490866], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.583322286605835, -0.46153461933135986}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.9404816975363262, 0.08545272251318137, 
                   0.9223338849585192], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.6269877983575508, 0.05696848167545425, 0.6148892566390128],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.9404816975363262`", ",", "0.08545272251318137`", ",", 
                    "0.9223338849585192`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.9404816975363262, 0.08545272251318137, 
                    0.9223338849585192]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.9404816975363262, 0.08545272251318137, 0.9223338849585192],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.9404816975363262, 0.08545272251318137, 
                   0.9223338849585192], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.6269877983575508, 0.05696848167545425, 0.6148892566390128],
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.9404816975363262`", ",", "0.08545272251318137`", ",", 
                    "0.9223338849585192`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.9404816975363262, 0.08545272251318137, 
                    0.9223338849585192]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.9404816975363262, 0.08545272251318137, 0.9223338849585192], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.9404816975363262, 0.08545272251318137, 0.9223338849585192], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.091747283935547, 1.6303282976150513}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.2268596034228303, 0.11716717237446628`, 
                   0.3127299616437369], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.1512397356152202, 0.0781114482496442, 0.2084866410958246],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.2268596034228303`", ",", "0.11716717237446628`", ",", 
                    "0.3127299616437369`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.2268596034228303, 0.11716717237446628`, 
                    0.3127299616437369]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.2268596034228303, 0.11716717237446628`, 0.3127299616437369],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.2268596034228303, 0.11716717237446628`, 
                   0.3127299616437369], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.1512397356152202, 0.0781114482496442, 0.2084866410958246], 
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.2268596034228303`", ",", "0.11716717237446628`", ",", 
                    "0.3127299616437369`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.2268596034228303, 0.11716717237446628`, 
                    0.3127299616437369]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.2268596034228303, 0.11716717237446628`, 0.3127299616437369], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.2268596034228303, 0.11716717237446628`, 0.3127299616437369], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-5.688175201416016, -1.4431461095809937}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.6264411372209426, 0.6186228130246765, 0.8507188915090753],
                   RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.41762742481396176`, 0.41241520868311765`, 
                  0.5671459276727169],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.6264411372209426`", ",", "0.6186228130246765`", ",", 
                    "0.8507188915090753`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.6264411372209426, 0.6186228130246765, 
                    0.8507188915090753]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.6264411372209426, 0.6186228130246765, 0.8507188915090753],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.6264411372209426, 0.6186228130246765, 0.8507188915090753], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.41762742481396176`, 0.41241520868311765`, 
                  0.5671459276727169], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.6264411372209426`", ",", "0.6186228130246765`", ",", 
                    "0.8507188915090753`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.6264411372209426, 0.6186228130246765, 
                    0.8507188915090753]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.6264411372209426, 0.6186228130246765, 0.8507188915090753], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.6264411372209426, 0.6186228130246765, 0.8507188915090753], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.1021531820297241, 2.4683496952056885}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.7933200172738919, 0.39303139910037577`, 
                   0.9381684236762917], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.528880011515928, 0.26202093273358384`, 0.6254456157841946],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7933200172738919`", ",", "0.39303139910037577`", ",", 
                    "0.9381684236762917`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7933200172738919, 0.39303139910037577`, 
                    0.9381684236762917]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.7933200172738919, 0.39303139910037577`, 0.9381684236762917],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.7933200172738919, 0.39303139910037577`, 
                   0.9381684236762917], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.528880011515928, 0.26202093273358384`, 0.6254456157841946],
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7933200172738919`", ",", "0.39303139910037577`", ",", 
                    "0.9381684236762917`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7933200172738919, 0.39303139910037577`, 
                    0.9381684236762917]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.7933200172738919, 0.39303139910037577`, 0.9381684236762917], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.7933200172738919, 0.39303139910037577`, 0.9381684236762917], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.299426794052124, 1.5269153118133545}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.9879751467738862, 0.7514040058019009, 0.9708653011732282],
                   RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.6586500978492575, 0.500936003867934, 0.6472435341154855],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.9879751467738862`", ",", "0.7514040058019009`", ",", 
                    "0.9708653011732282`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.9879751467738862, 0.7514040058019009, 
                    0.9708653011732282]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.9879751467738862, 0.7514040058019009, 0.9708653011732282],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.9879751467738862, 0.7514040058019009, 0.9708653011732282], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.6586500978492575, 0.500936003867934, 0.6472435341154855], 
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.9879751467738862`", ",", "0.7514040058019009`", ",", 
                    "0.9708653011732282`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.9879751467738862, 0.7514040058019009, 
                    0.9708653011732282]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.9879751467738862, 0.7514040058019009, 0.9708653011732282], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.9879751467738862, 0.7514040058019009, 0.9708653011732282], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.5922865867614746, 3.285914421081543}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.7095910255834188, 0.9332671972874065, 
                   0.052705022852911565`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.4730606837222792, 0.6221781315249377, 
                  0.035136681901941046`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7095910255834188`", ",", "0.9332671972874065`", ",", 
                    "0.052705022852911565`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7095910255834188, 0.9332671972874065, 
                    0.052705022852911565`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.7095910255834188, 0.9332671972874065, 0.052705022852911565`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.7095910255834188, 0.9332671972874065, 
                   0.052705022852911565`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.4730606837222792, 0.6221781315249377, 
                  0.035136681901941046`], FrameTicks -> None, 
                PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7095910255834188`", ",", "0.9332671972874065`", ",", 
                    "0.052705022852911565`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7095910255834188, 0.9332671972874065, 
                    0.052705022852911565`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.7095910255834188, 0.9332671972874065, 0.052705022852911565`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.7095910255834188, 0.9332671972874065, 0.052705022852911565`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {5.951296329498291, 0.30780085921287537}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.7478828933410211, 0.44673253658167345`, 
                   0.24909747343703992`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.49858859556068075`, 0.297821691054449, 
                  0.16606498229135996`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7478828933410211`", ",", "0.44673253658167345`", ",", 
                    "0.24909747343703992`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7478828933410211, 0.44673253658167345`, 
                    0.24909747343703992`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.7478828933410211, 0.44673253658167345`, 0.24909747343703992`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.7478828933410211, 0.44673253658167345`, 
                   0.24909747343703992`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.49858859556068075`, 0.297821691054449, 
                  0.16606498229135996`], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7478828933410211`", ",", "0.44673253658167345`", ",", 
                    "0.24909747343703992`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7478828933410211, 0.44673253658167345`, 
                    0.24909747343703992`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.7478828933410211, 0.44673253658167345`, 0.24909747343703992`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.7478828933410211, 0.44673253658167345`, 0.24909747343703992`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.35079464316368103, -1.618438720703125}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.25284091191360947`, 0.2298353231965553, 
                   0.559911538749265], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.16856060794240632`, 0.15322354879770356`, 
                  0.3732743591661767],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.25284091191360947`", ",", "0.2298353231965553`", ",", 
                    "0.559911538749265`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.25284091191360947`, 0.2298353231965553, 
                    0.559911538749265]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.25284091191360947`, 0.2298353231965553, 0.559911538749265],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.25284091191360947`, 0.2298353231965553, 
                   0.559911538749265], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.16856060794240632`, 0.15322354879770356`, 
                  0.3732743591661767], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.25284091191360947`", ",", "0.2298353231965553`", ",", 
                    "0.559911538749265`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.25284091191360947`, 0.2298353231965553, 
                    0.559911538749265]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.25284091191360947`, 0.2298353231965553, 0.559911538749265], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.25284091191360947`, 0.2298353231965553, 0.559911538749265], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-5.517951011657715, -0.9280771613121033}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.5964905252213699, 0.7854232882746985, 
                   0.0005451295928871058], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.39766035014757994`, 0.5236155255164657, 
                  0.0003634197285914039],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.5964905252213699`", ",", "0.7854232882746985`", ",", 
                    "0.0005451295928871058`"}], "]"}], NumberMarks -> False]],
              
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.5964905252213699, 0.7854232882746985, 
                    0.0005451295928871058]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.5964905252213699, 0.7854232882746985, 0.0005451295928871058],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.5964905252213699, 0.7854232882746985, 
                   0.0005451295928871058], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.39766035014757994`, 0.5236155255164657, 
                  0.0003634197285914039], FrameTicks -> None, 
                PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.5964905252213699`", ",", "0.7854232882746985`", ",", 
                    "0.0005451295928871058`"}], "]"}], NumberMarks -> False]],
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.5964905252213699, 0.7854232882746985, 
                    0.0005451295928871058]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.5964905252213699, 0.7854232882746985, 0.0005451295928871058], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.5964905252213699, 0.7854232882746985, 0.0005451295928871058], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.955255508422852, 0.3676564693450928}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.42612007175330335`, 0.4238572966582932, 
                   0.10332777214184685`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.2840800478355356, 0.2825715311055288, 0.0688851814278979],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.42612007175330335`", ",", "0.4238572966582932`", ",", 
                    "0.10332777214184685`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.42612007175330335`, 0.4238572966582932, 
                    0.10332777214184685`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.42612007175330335`, 0.4238572966582932, 0.10332777214184685`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.42612007175330335`, 0.4238572966582932, 
                   0.10332777214184685`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.2840800478355356, 0.2825715311055288, 0.0688851814278979], 
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.42612007175330335`", ",", "0.4238572966582932`", ",", 
                    "0.10332777214184685`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.42612007175330335`, 0.4238572966582932, 
                    0.10332777214184685`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.42612007175330335`, 0.4238572966582932, 0.10332777214184685`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.42612007175330335`, 0.4238572966582932, 0.10332777214184685`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.8598282337188721, -1.252239465713501}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.8394027049148882, 0.1169867376132907, 0.9014114466742487],
                   RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.5596018032765921, 0.07799115840886048, 0.6009409644494992],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.8394027049148882`", ",", "0.1169867376132907`", ",", 
                    "0.9014114466742487`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.8394027049148882, 0.1169867376132907, 
                    0.9014114466742487]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.8394027049148882, 0.1169867376132907, 0.9014114466742487],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.8394027049148882, 0.1169867376132907, 0.9014114466742487], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.5596018032765921, 0.07799115840886048, 0.6009409644494992],
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.8394027049148882`", ",", "0.1169867376132907`", ",", 
                    "0.9014114466742487`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.8394027049148882, 0.1169867376132907, 
                    0.9014114466742487]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.8394027049148882, 0.1169867376132907, 0.9014114466742487], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.8394027049148882, 0.1169867376132907, 0.9014114466742487], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.246665000915527, 1.1945220232009888}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.6812925581818767, 0.23434002751010174`, 
                   0.6217439310077824], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.45419503878791784`, 0.1562266850067345, 
                  0.41449595400518824`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.6812925581818767`", ",", "0.23434002751010174`", ",", 
                    "0.6217439310077824`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.6812925581818767, 0.23434002751010174`, 
                    0.6217439310077824]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.6812925581818767, 0.23434002751010174`, 0.6217439310077824],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.6812925581818767, 0.23434002751010174`, 
                   0.6217439310077824], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.45419503878791784`, 0.1562266850067345, 
                  0.41449595400518824`], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.6812925581818767`", ",", "0.23434002751010174`", ",", 
                    "0.6217439310077824`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.6812925581818767, 0.23434002751010174`, 
                    0.6217439310077824]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.6812925581818767, 0.23434002751010174`, 0.6217439310077824], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.6812925581818767, 0.23434002751010174`, 0.6217439310077824], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.7151267528533936, -0.18600384891033173}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.8095080361074045, 0.5289308656879794, 0.9111074876326664],
                   RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.5396720240716031, 0.35262057712531963`, 0.607404991755111],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.8095080361074045`", ",", "0.5289308656879794`", ",", 
                    "0.9111074876326664`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.8095080361074045, 0.5289308656879794, 
                    0.9111074876326664]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.8095080361074045, 0.5289308656879794, 0.9111074876326664],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.8095080361074045, 0.5289308656879794, 0.9111074876326664], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.5396720240716031, 0.35262057712531963`, 0.607404991755111],
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.8095080361074045`", ",", "0.5289308656879794`", ",", 
                    "0.9111074876326664`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.8095080361074045, 0.5289308656879794, 
                    0.9111074876326664]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.8095080361074045, 0.5289308656879794, 0.9111074876326664], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.8095080361074045, 0.5289308656879794, 0.9111074876326664], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.308656930923462, 2.171717643737793}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.32764036213456627`, 0.45708545593282546`, 
                   0.4095544481672089], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.21842690808971085`, 0.30472363728855034`, 
                  0.2730362987781393],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.32764036213456627`", ",", "0.45708545593282546`", ",", 
                    "0.4095544481672089`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.32764036213456627`, 0.45708545593282546`, 
                    0.4095544481672089]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.32764036213456627`, 0.45708545593282546`, 0.4095544481672089],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.32764036213456627`, 0.45708545593282546`, 
                   0.4095544481672089], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.21842690808971085`, 0.30472363728855034`, 
                  0.2730362987781393], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.32764036213456627`", ",", "0.45708545593282546`", ",", 
                    "0.4095544481672089`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.32764036213456627`, 0.45708545593282546`, 
                    0.4095544481672089]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.32764036213456627`, 0.45708545593282546`, 0.4095544481672089], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.32764036213456627`, 0.45708545593282546`, 0.4095544481672089], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.8216440081596375, -0.0189906507730484}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.15498838166329398`, 0.15824303986515353`, 
                   0.6587804604002669], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.10332558777552933`, 0.10549535991010237`, 
                  0.439186973600178],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.15498838166329398`", ",", "0.15824303986515353`", ",", 
                    "0.6587804604002669`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.15498838166329398`, 0.15824303986515353`, 
                    0.6587804604002669]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.15498838166329398`, 0.15824303986515353`, 0.6587804604002669],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.15498838166329398`, 0.15824303986515353`, 
                   0.6587804604002669], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.10332558777552933`, 0.10549535991010237`, 
                  0.439186973600178], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.15498838166329398`", ",", "0.15824303986515353`", ",", 
                    "0.6587804604002669`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.15498838166329398`, 0.15824303986515353`, 
                    0.6587804604002669]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.15498838166329398`, 0.15824303986515353`, 0.6587804604002669], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.15498838166329398`, 0.15824303986515353`, 0.6587804604002669], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-5.764328956604004, -0.6586143970489502}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.22621905918162577`, 0.7193803548125817, 
                   0.8898197336276237], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.15081270612108386`, 0.4795869032083878, 0.5932131557517492],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.22621905918162577`", ",", "0.7193803548125817`", ",", 
                    "0.8898197336276237`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.22621905918162577`, 0.7193803548125817, 
                    0.8898197336276237]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.22621905918162577`, 0.7193803548125817, 0.8898197336276237],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.22621905918162577`, 0.7193803548125817, 
                   0.8898197336276237], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.15081270612108386`, 0.4795869032083878, 
                  0.5932131557517492], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.22621905918162577`", ",", "0.7193803548125817`", ",", 
                    "0.8898197336276237`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.22621905918162577`, 0.7193803548125817, 
                    0.8898197336276237]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.22621905918162577`, 0.7193803548125817, 0.8898197336276237], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.22621905918162577`, 0.7193803548125817, 0.8898197336276237], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.33916255831718445, 2.485983371734619}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.9844545455992038, 0.21242091139682073`, 
                   0.32876434328478354`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.6563030303994692, 0.14161394093121382`, 
                  0.21917622885652238`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.9844545455992038`", ",", "0.21242091139682073`", ",", 
                    "0.32876434328478354`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.9844545455992038, 0.21242091139682073`, 
                    0.32876434328478354`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.9844545455992038, 0.21242091139682073`, 0.32876434328478354`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.9844545455992038, 0.21242091139682073`, 
                   0.32876434328478354`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.6563030303994692, 0.14161394093121382`, 
                  0.21917622885652238`], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.9844545455992038`", ",", "0.21242091139682073`", ",", 
                    "0.32876434328478354`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.9844545455992038, 0.21242091139682073`, 
                    0.32876434328478354`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.9844545455992038, 0.21242091139682073`, 0.32876434328478354`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.9844545455992038, 0.21242091139682073`, 0.32876434328478354`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.0248703956604004, -1.7339845895767212}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.18189876666664495`, 0.6385491259797123, 
                   0.8368047767887115], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.12126584444442998`, 0.4256994173198082, 0.5578698511924743],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.18189876666664495`", ",", "0.6385491259797123`", ",", 
                    "0.8368047767887115`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.18189876666664495`, 0.6385491259797123, 
                    0.8368047767887115]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.18189876666664495`, 0.6385491259797123, 0.8368047767887115],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.18189876666664495`, 0.6385491259797123, 
                   0.8368047767887115], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.12126584444442998`, 0.4256994173198082, 
                  0.5578698511924743], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.18189876666664495`", ",", "0.6385491259797123`", ",", 
                    "0.8368047767887115`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.18189876666664495`, 0.6385491259797123, 
                    0.8368047767887115]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.18189876666664495`, 0.6385491259797123, 0.8368047767887115], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.18189876666664495`, 0.6385491259797123, 0.8368047767887115], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.005411945283412933, 2.1351613998413086}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.9689516735485106, 0.5397094435471064, 
                   0.05824677614062379], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.6459677823656738, 0.35980629569807093`, 
                  0.038831184093749194`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.9689516735485106`", ",", "0.5397094435471064`", ",", 
                    "0.05824677614062379`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.9689516735485106, 0.5397094435471064, 
                    0.05824677614062379]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.9689516735485106, 0.5397094435471064, 0.05824677614062379],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.9689516735485106, 0.5397094435471064, 
                   0.05824677614062379], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.6459677823656738, 0.35980629569807093`, 
                  0.038831184093749194`], FrameTicks -> None, 
                PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.9689516735485106`", ",", "0.5397094435471064`", ",", 
                    "0.05824677614062379`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.9689516735485106, 0.5397094435471064, 
                    0.05824677614062379]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.9689516735485106, 0.5397094435471064, 0.05824677614062379], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.9689516735485106, 0.5397094435471064, 0.05824677614062379], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.8621057868003845, -2.7327017784118652}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.9997598351509964, 0.07342083465184124, 
                   0.31382379879394295`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.666506556767331, 0.0489472231012275, 0.20921586586262864`],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.9997598351509964`", ",", "0.07342083465184124`", ",", 
                    "0.31382379879394295`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.9997598351509964, 0.07342083465184124, 
                    0.31382379879394295`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.9997598351509964, 0.07342083465184124, 0.31382379879394295`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.9997598351509964, 0.07342083465184124, 
                   0.31382379879394295`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.666506556767331, 0.0489472231012275, 0.20921586586262864`],
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.9997598351509964`", ",", "0.07342083465184124`", ",", 
                    "0.31382379879394295`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.9997598351509964, 0.07342083465184124, 
                    0.31382379879394295`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.9997598351509964, 0.07342083465184124, 0.31382379879394295`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.9997598351509964, 0.07342083465184124, 0.31382379879394295`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.251030445098877, -1.8927708864212036}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.07750063518124528, 0.4811878406264323, 
                   0.15957682423803132`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.05166709012083019, 0.32079189375095485`, 
                  0.10638454949202089`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.07750063518124528`", ",", "0.4811878406264323`", ",", 
                    "0.15957682423803132`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.07750063518124528, 0.4811878406264323, 
                    0.15957682423803132`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.07750063518124528, 0.4811878406264323, 0.15957682423803132`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.07750063518124528, 0.4811878406264323, 
                   0.15957682423803132`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.05166709012083019, 0.32079189375095485`, 
                  0.10638454949202089`], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.07750063518124528`", ",", "0.4811878406264323`", ",", 
                    "0.15957682423803132`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.07750063518124528, 0.4811878406264323, 
                    0.15957682423803132`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.07750063518124528, 0.4811878406264323, 0.15957682423803132`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.07750063518124528, 0.4811878406264323, 0.15957682423803132`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.9485867023468018, -0.8516334295272827}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.23229534277969988`, 0.5887634302236586, 
                   0.47684284435185975`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.15486356185313327`, 0.3925089534824391, 0.3178952295679065],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.23229534277969988`", ",", "0.5887634302236586`", ",", 
                    "0.47684284435185975`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.23229534277969988`, 0.5887634302236586, 
                    0.47684284435185975`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.23229534277969988`, 0.5887634302236586, 0.47684284435185975`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.23229534277969988`, 0.5887634302236586, 
                   0.47684284435185975`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.15486356185313327`, 0.3925089534824391, 
                  0.3178952295679065], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.23229534277969988`", ",", "0.5887634302236586`", ",", 
                    "0.47684284435185975`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.23229534277969988`, 0.5887634302236586, 
                    0.47684284435185975`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.23229534277969988`, 0.5887634302236586, 0.47684284435185975`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.23229534277969988`, 0.5887634302236586, 0.47684284435185975`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.7358564138412476, 0.5652791857719421}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.6500256230166142, 0.10453193228666158`, 
                   0.766119230916841], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.43335041534440943`, 0.06968795485777439, 
                  0.5107461539445607],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.6500256230166142`", ",", "0.10453193228666158`", ",", 
                    "0.766119230916841`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.6500256230166142, 0.10453193228666158`, 
                    0.766119230916841]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.6500256230166142, 0.10453193228666158`, 0.766119230916841],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.6500256230166142, 0.10453193228666158`, 
                   0.766119230916841], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.43335041534440943`, 0.06968795485777439, 
                  0.5107461539445607], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.6500256230166142`", ",", "0.10453193228666158`", ",", 
                    "0.766119230916841`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.6500256230166142, 0.10453193228666158`, 
                    0.766119230916841]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.6500256230166142, 0.10453193228666158`, 0.766119230916841], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.6500256230166142, 0.10453193228666158`, 0.766119230916841], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.493861675262451, 0.30581268668174744}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.7649309990830877, 0.23030815895749646`, 
                   0.45594811158433735`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.5099539993887252, 0.153538772638331, 0.3039654077228916],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7649309990830877`", ",", "0.23030815895749646`", ",", 
                    "0.45594811158433735`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7649309990830877, 0.23030815895749646`, 
                    0.45594811158433735`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.7649309990830877, 0.23030815895749646`, 0.45594811158433735`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.7649309990830877, 0.23030815895749646`, 
                   0.45594811158433735`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.5099539993887252, 0.153538772638331, 0.3039654077228916], 
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7649309990830877`", ",", "0.23030815895749646`", ",", 
                    "0.45594811158433735`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7649309990830877, 0.23030815895749646`, 
                    0.45594811158433735`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.7649309990830877, 0.23030815895749646`, 0.45594811158433735`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.7649309990830877, 0.23030815895749646`, 0.45594811158433735`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.8031423091888428, -0.977695643901825}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.3313846686731188, 0.5533027603000169, 0.8071226293648672],
                   RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.22092311244874585`, 0.36886850686667794`, 
                  0.5380817529099116],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.3313846686731188`", ",", "0.5533027603000169`", ",", 
                    "0.8071226293648672`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.3313846686731188, 0.5533027603000169, 
                    0.8071226293648672]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.3313846686731188, 0.5533027603000169, 0.8071226293648672],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.3313846686731188, 0.5533027603000169, 0.8071226293648672], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.22092311244874585`, 0.36886850686667794`, 
                  0.5380817529099116], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.3313846686731188`", ",", "0.5533027603000169`", ",", 
                    "0.8071226293648672`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.3313846686731188, 0.5533027603000169, 
                    0.8071226293648672]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.3313846686731188, 0.5533027603000169, 0.8071226293648672], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.3313846686731188, 0.5533027603000169, 0.8071226293648672], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.5856591463088989, 1.84209144115448}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.5502576047959316, 0.9988156952478551, 
                   0.05519909326499395], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.3668384031972877, 0.6658771301652368, 0.03679939550999597],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.5502576047959316`", ",", "0.9988156952478551`", ",", 
                    "0.05519909326499395`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.5502576047959316, 0.9988156952478551, 
                    0.05519909326499395]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.5502576047959316, 0.9988156952478551, 0.05519909326499395],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.5502576047959316, 0.9988156952478551, 
                   0.05519909326499395], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.3668384031972877, 0.6658771301652368, 0.03679939550999597],
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.5502576047959316`", ",", "0.9988156952478551`", ",", 
                    "0.05519909326499395`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.5502576047959316, 0.9988156952478551, 
                    0.05519909326499395]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.5502576047959316, 0.9988156952478551, 0.05519909326499395], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.5502576047959316, 0.9988156952478551, 0.05519909326499395], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {6.3377838134765625, -0.026265975087881088}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.46324223754918603`, 0.28333107783830846`, 
                   0.019442654729932896`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.30882815836612404`, 0.188887385225539, 
                  0.012961769819955265`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.46324223754918603`", ",", "0.28333107783830846`", ",", 
                    "0.019442654729932896`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.46324223754918603`, 0.28333107783830846`, 
                    0.019442654729932896`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.46324223754918603`, 0.28333107783830846`, 
              0.019442654729932896`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.46324223754918603`, 0.28333107783830846`, 
                   0.019442654729932896`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.30882815836612404`, 0.188887385225539, 
                  0.012961769819955265`], FrameTicks -> None, 
                PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.46324223754918603`", ",", "0.28333107783830846`", ",", 
                    "0.019442654729932896`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.46324223754918603`, 0.28333107783830846`, 
                    0.019442654729932896`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.46324223754918603`, 0.28333107783830846`, 
              0.019442654729932896`], Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.46324223754918603`, 0.28333107783830846`, 
             0.019442654729932896`], "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.6702808737754822, -2.728825330734253}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.479976372433194, 0.31835727234355793`, 
                   0.9145904192418854], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.319984248288796, 0.21223818156237195`, 0.609726946161257],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.479976372433194`", ",", "0.31835727234355793`", ",", 
                    "0.9145904192418854`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.479976372433194, 0.31835727234355793`, 
                    0.9145904192418854]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.479976372433194, 0.31835727234355793`, 0.9145904192418854],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.479976372433194, 0.31835727234355793`, 
                   0.9145904192418854], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.319984248288796, 0.21223818156237195`, 0.609726946161257], 
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.479976372433194`", ",", "0.31835727234355793`", ",", 
                    "0.9145904192418854`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.479976372433194, 0.31835727234355793`, 
                    0.9145904192418854]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.479976372433194, 0.31835727234355793`, 0.9145904192418854], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.479976372433194, 0.31835727234355793`, 0.9145904192418854], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.982284069061279, 0.6024864912033081}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.24622976506336514`, 0.707332548074562, 0.307702099741453],
                   RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.1641531767089101, 0.47155503204970806`, 0.2051347331609687],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.24622976506336514`", ",", "0.707332548074562`", ",", 
                    "0.307702099741453`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.24622976506336514`, 0.707332548074562, 
                    0.307702099741453]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.24622976506336514`, 0.707332548074562, 0.307702099741453],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.24622976506336514`, 0.707332548074562, 0.307702099741453], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.1641531767089101, 0.47155503204970806`, 
                  0.2051347331609687], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.24622976506336514`", ",", "0.707332548074562`", ",", 
                    "0.307702099741453`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.24622976506336514`, 0.707332548074562, 
                    0.307702099741453]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.24622976506336514`, 0.707332548074562, 0.307702099741453], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.24622976506336514`, 0.707332548074562, 0.307702099741453], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.6741325855255127, -0.10712624341249466}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.07133340166769853, 0.8921894169406794, 
                   0.25419007044048136`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.04755560111179902, 0.5947929446271196, 0.1694600469603209],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.07133340166769853`", ",", "0.8921894169406794`", ",", 
                    "0.25419007044048136`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.07133340166769853, 0.8921894169406794, 
                    0.25419007044048136`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.07133340166769853, 0.8921894169406794, 0.25419007044048136`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.07133340166769853, 0.8921894169406794, 
                   0.25419007044048136`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.04755560111179902, 0.5947929446271196, 0.1694600469603209],
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.07133340166769853`", ",", "0.8921894169406794`", ",", 
                    "0.25419007044048136`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.07133340166769853, 0.8921894169406794, 
                    0.25419007044048136`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.07133340166769853, 0.8921894169406794, 0.25419007044048136`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.07133340166769853, 0.8921894169406794, 0.25419007044048136`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {5.141913890838623, -0.7356197237968445}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.3983036668984483, 0.783425564455486, 0.07443094528765726],
                   RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.2655357779322989, 0.5222837096369907, 0.04962063019177151],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.3983036668984483`", ",", "0.783425564455486`", ",", 
                    "0.07443094528765726`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.3983036668984483, 0.783425564455486, 
                    0.07443094528765726]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.3983036668984483, 0.783425564455486, 0.07443094528765726],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.3983036668984483, 0.783425564455486, 0.07443094528765726], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.2655357779322989, 0.5222837096369907, 0.04962063019177151],
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.3983036668984483`", ",", "0.783425564455486`", ",", 
                    "0.07443094528765726`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.3983036668984483, 0.783425564455486, 
                    0.07443094528765726]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.3983036668984483, 0.783425564455486, 0.07443094528765726], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.3983036668984483, 0.783425564455486, 0.07443094528765726], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.639206409454346, -0.08531522005796432}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.6351720848321258, 0.4344672721539702, 
                   0.38199763768169825`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.4234480565547506, 0.2896448481026468, 0.25466509178779884`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.6351720848321258`", ",", "0.4344672721539702`", ",", 
                    "0.38199763768169825`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.6351720848321258, 0.4344672721539702, 
                    0.38199763768169825`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.6351720848321258, 0.4344672721539702, 0.38199763768169825`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.6351720848321258, 0.4344672721539702, 
                   0.38199763768169825`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.4234480565547506, 0.2896448481026468, 
                  0.25466509178779884`], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.6351720848321258`", ",", "0.4344672721539702`", ",", 
                    "0.38199763768169825`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.6351720848321258, 0.4344672721539702, 
                    0.38199763768169825`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.6351720848321258, 0.4344672721539702, 0.38199763768169825`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.6351720848321258, 0.4344672721539702, 0.38199763768169825`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.4357943832874298, -1.1109036207199097}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.7837045730705259, 0.2426188682642374, 0.4922797496712161],
                   RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.5224697153803506, 0.16174591217615827`, 
                  0.32818649978081077`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7837045730705259`", ",", "0.2426188682642374`", ",", 
                    "0.4922797496712161`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7837045730705259, 0.2426188682642374, 
                    0.4922797496712161]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.7837045730705259, 0.2426188682642374, 0.4922797496712161],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.7837045730705259, 0.2426188682642374, 0.4922797496712161], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.5224697153803506, 0.16174591217615827`, 
                  0.32818649978081077`], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7837045730705259`", ",", "0.2426188682642374`", ",", 
                    "0.4922797496712161`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7837045730705259, 0.2426188682642374, 
                    0.4922797496712161]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.7837045730705259, 0.2426188682642374, 0.4922797496712161], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.7837045730705259, 0.2426188682642374, 0.4922797496712161], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.8488643169403076, -0.8539190292358398}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.4856280933303625, 0.19208654604975073`, 
                   0.013481533280932156`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.32375206222024167`, 0.1280576973665005, 
                  0.008987688853954772],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.4856280933303625`", ",", "0.19208654604975073`", ",", 
                    "0.013481533280932156`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.4856280933303625, 0.19208654604975073`, 
                    0.013481533280932156`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.4856280933303625, 0.19208654604975073`, 0.013481533280932156`],
             
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.4856280933303625, 0.19208654604975073`, 
                   0.013481533280932156`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.32375206222024167`, 0.1280576973665005, 
                  0.008987688853954772], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.4856280933303625`", ",", "0.19208654604975073`", ",", 
                    "0.013481533280932156`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.4856280933303625, 0.19208654604975073`, 
                    0.013481533280932156`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.4856280933303625, 0.19208654604975073`, 0.013481533280932156`],
              Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.4856280933303625, 0.19208654604975073`, 0.013481533280932156`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.0539660453796387, -2.9519155025482178}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.026464853508305408`, 0.5987346259033808, 
                   0.7543774310939013], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.017643235672203605`, 0.39915641726892054`, 
                  0.5029182873959342],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.026464853508305408`", ",", "0.5987346259033808`", ",", 
                    "0.7543774310939013`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.026464853508305408`, 0.5987346259033808, 
                    0.7543774310939013]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.026464853508305408`, 0.5987346259033808, 0.7543774310939013],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.026464853508305408`, 0.5987346259033808, 
                   0.7543774310939013], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.017643235672203605`, 0.39915641726892054`, 
                  0.5029182873959342], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.026464853508305408`", ",", "0.5987346259033808`", ",", 
                    "0.7543774310939013`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.026464853508305408`, 0.5987346259033808, 
                    0.7543774310939013]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.026464853508305408`, 0.5987346259033808, 0.7543774310939013], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.026464853508305408`, 0.5987346259033808, 0.7543774310939013], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.30863043665885925, 1.734948754310608}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.7763492152028821, 0.8245392738689727, 
                   0.36960159759456346`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.5175661434685881, 0.5496928492459818, 0.24640106506304232`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7763492152028821`", ",", "0.8245392738689727`", ",", 
                    "0.36960159759456346`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7763492152028821, 0.8245392738689727, 
                    0.36960159759456346`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.7763492152028821, 0.8245392738689727, 0.36960159759456346`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.7763492152028821, 0.8245392738689727, 
                   0.36960159759456346`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.5175661434685881, 0.5496928492459818, 
                  0.24640106506304232`], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7763492152028821`", ",", "0.8245392738689727`", ",", 
                    "0.36960159759456346`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7763492152028821, 0.8245392738689727, 
                    0.36960159759456346`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.7763492152028821, 0.8245392738689727, 0.36960159759456346`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.7763492152028821, 0.8245392738689727, 0.36960159759456346`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {5.4485039710998535, -0.025646690279245377}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.5329967170451344, 0.5492791360986118, 0.8296542522115218],
                   RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.3553311446967563, 0.3661860907324079, 0.5531028348076812],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.5329967170451344`", ",", "0.5492791360986118`", ",", 
                    "0.8296542522115218`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.5329967170451344, 0.5492791360986118, 
                    0.8296542522115218]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.5329967170451344, 0.5492791360986118, 0.8296542522115218],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.5329967170451344, 0.5492791360986118, 0.8296542522115218], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.3553311446967563, 0.3661860907324079, 0.5531028348076812], 
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.5329967170451344`", ",", "0.5492791360986118`", ",", 
                    "0.8296542522115218`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.5329967170451344, 0.5492791360986118, 
                    0.8296542522115218]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.5329967170451344, 0.5492791360986118, 0.8296542522115218], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.5329967170451344, 0.5492791360986118, 0.8296542522115218], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.205639362335205, 1.9687646627426147}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.5701426197874235, 0.902368845343235, 0.6954682879776131], 
                  RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.3800950798582824, 0.6015792302288234, 0.46364552531840875`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.5701426197874235`", ",", "0.902368845343235`", ",", 
                    "0.6954682879776131`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.5701426197874235, 0.902368845343235, 0.6954682879776131]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.5701426197874235, 0.902368845343235, 0.6954682879776131],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.5701426197874235, 0.902368845343235, 0.6954682879776131], 
                  
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.3800950798582824, 0.6015792302288234, 
                  0.46364552531840875`], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.5701426197874235`", ",", "0.902368845343235`", ",", 
                    "0.6954682879776131`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.5701426197874235, 0.902368845343235, 0.6954682879776131]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.5701426197874235, 0.902368845343235, 0.6954682879776131], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.5701426197874235, 0.902368845343235, 0.6954682879776131], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {5.893004894256592, -1.203625202178955}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.7463659418304378, 0.0065179010570348694`, 
                   0.14826369583755739`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.4975772945536252, 0.00434526737135658, 0.09884246389170492],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7463659418304378`", ",", "0.0065179010570348694`", ",", 
                    "0.14826369583755739`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7463659418304378, 0.0065179010570348694`, 
                    0.14826369583755739`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.7463659418304378, 0.0065179010570348694`, 0.14826369583755739`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.7463659418304378, 0.0065179010570348694`, 
                   0.14826369583755739`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.4975772945536252, 0.00434526737135658, 
                  0.09884246389170492], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7463659418304378`", ",", "0.0065179010570348694`", ",", 
                    "0.14826369583755739`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7463659418304378, 0.0065179010570348694`, 
                    0.14826369583755739`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.7463659418304378, 0.0065179010570348694`, 
              0.14826369583755739`], Editable -> False, Selectable -> False]],
           
           Annotation[#, 
            RGBColor[
            0.7463659418304378, 0.0065179010570348694`, 0.14826369583755739`],
             "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.866289496421814, -2.485614776611328}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.526636095568116, 0.29981549021175025`, 
                   0.7426698353846952], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.351090730378744, 0.19987699347450016`, 0.4951132235897968],
                
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.526636095568116`", ",", "0.29981549021175025`", ",", 
                    "0.7426698353846952`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.526636095568116, 0.29981549021175025`, 
                    0.7426698353846952]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.526636095568116, 0.29981549021175025`, 0.7426698353846952],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.526636095568116, 0.29981549021175025`, 
                   0.7426698353846952], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.351090730378744, 0.19987699347450016`, 0.4951132235897968],
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.526636095568116`", ",", "0.29981549021175025`", ",", 
                    "0.7426698353846952`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.526636095568116, 0.29981549021175025`, 
                    0.7426698353846952]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.526636095568116, 0.29981549021175025`, 0.7426698353846952], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.526636095568116, 0.29981549021175025`, 0.7426698353846952], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.668272495269775, -0.10941172391176224}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.45180103939396643`, 0.5584025461085773, 
                   0.3608651056100971], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.30120069292931095`, 0.3722683640723849, 
                  0.24057673707339808`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.45180103939396643`", ",", "0.5584025461085773`", ",", 
                    "0.3608651056100971`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.45180103939396643`, 0.5584025461085773, 
                    0.3608651056100971]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.45180103939396643`, 0.5584025461085773, 0.3608651056100971],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.45180103939396643`, 0.5584025461085773, 
                   0.3608651056100971], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.30120069292931095`, 0.3722683640723849, 
                  0.24057673707339808`], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.45180103939396643`", ",", "0.5584025461085773`", ",", 
                    "0.3608651056100971`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.45180103939396643`, 0.5584025461085773, 
                    0.3608651056100971]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.45180103939396643`, 0.5584025461085773, 0.3608651056100971], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.45180103939396643`, 0.5584025461085773, 0.3608651056100971], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.726330041885376, -0.08890286833047867}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.5436824608711355, 0.6368265562729978, 
                   0.20859778953467956`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.3624549739140903, 0.42455103751533185`, 0.1390651930231197],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.5436824608711355`", ",", "0.6368265562729978`", ",", 
                    "0.20859778953467956`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.5436824608711355, 0.6368265562729978, 
                    0.20859778953467956`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.5436824608711355, 0.6368265562729978, 0.20859778953467956`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.5436824608711355, 0.6368265562729978, 
                   0.20859778953467956`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.3624549739140903, 0.42455103751533185`, 
                  0.1390651930231197], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.5436824608711355`", ",", "0.6368265562729978`", ",", 
                    "0.20859778953467956`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.5436824608711355, 0.6368265562729978, 
                    0.20859778953467956`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.5436824608711355, 0.6368265562729978, 0.20859778953467956`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.5436824608711355, 0.6368265562729978, 0.20859778953467956`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.4986627101898193, 0.4644813537597656}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.12107063893629055`, 0.5916075095543469, 
                   0.30365612533873554`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.08071375929086037, 0.39440500636956466`, 
                  0.20243741689249037`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.12107063893629055`", ",", "0.5916075095543469`", ",", 
                    "0.30365612533873554`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.12107063893629055`, 0.5916075095543469, 
                    0.30365612533873554`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.12107063893629055`, 0.5916075095543469, 0.30365612533873554`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.12107063893629055`, 0.5916075095543469, 
                   0.30365612533873554`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.08071375929086037, 0.39440500636956466`, 
                  0.20243741689249037`], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.12107063893629055`", ",", "0.5916075095543469`", ",", 
                    "0.30365612533873554`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.12107063893629055`, 0.5916075095543469, 
                    0.30365612533873554`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.12107063893629055`, 0.5916075095543469, 0.30365612533873554`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.12107063893629055`, 0.5916075095543469, 0.30365612533873554`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.479151725769043, -0.188986137509346}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.7354306350293238, 0.7706832421579728, 
                   0.010092174004172616`], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.49028709001954923`, 0.5137888281053152, 
                  0.006728116002781745],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7354306350293238`", ",", "0.7706832421579728`", ",", 
                    "0.010092174004172616`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7354306350293238, 0.7706832421579728, 
                    0.010092174004172616`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.7354306350293238, 0.7706832421579728, 0.010092174004172616`],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.7354306350293238, 0.7706832421579728, 
                   0.010092174004172616`], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.49028709001954923`, 0.5137888281053152, 
                  0.006728116002781745], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.7354306350293238`", ",", "0.7706832421579728`", ",", 
                    "0.010092174004172616`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.7354306350293238, 0.7706832421579728, 
                    0.010092174004172616`]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.7354306350293238, 0.7706832421579728, 0.010092174004172616`], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.7354306350293238, 0.7706832421579728, 0.010092174004172616`], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {5.256536483764648, 0.6774717569351196}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.3613279246594756, 0.9559056100621954, 0.7523500136612113],
                   RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.24088528310631707`, 0.6372704067081303, 0.5015666757741409],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.3613279246594756`", ",", "0.9559056100621954`", ",", 
                    "0.7523500136612113`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.3613279246594756, 0.9559056100621954, 
                    0.7523500136612113]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.3613279246594756, 0.9559056100621954, 0.7523500136612113],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.3613279246594756, 0.9559056100621954, 0.7523500136612113], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.24088528310631707`, 0.6372704067081303, 
                  0.5015666757741409], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.3613279246594756`", ",", "0.9559056100621954`", ",", 
                    "0.7523500136612113`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.3613279246594756, 0.9559056100621954, 
                    0.7523500136612113]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.3613279246594756, 0.9559056100621954, 0.7523500136612113], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.3613279246594756, 0.9559056100621954, 0.7523500136612113], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {5.977042198181152, -1.1703732013702393}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          TagBox[
           TooltipBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[
                  0.022680497248779963`, 0.7099025878591139, 
                   0.6062844254021029], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.015120331499186642`, 0.47326839190607595`, 
                  0.4041896169347353],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.022680497248779963`", ",", "0.7099025878591139`", ",", 
                    "0.6062844254021029`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.022680497248779963`, 0.7099025878591139, 
                    0.6062844254021029]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[
             0.022680497248779963`, 0.7099025878591139, 0.6062844254021029],
             Editable->False,
             Selectable->False],
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[
                  0.022680497248779963`, 0.7099025878591139, 
                   0.6062844254021029], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> 
                RGBColor[
                 0.015120331499186642`, 0.47326839190607595`, 
                  0.4041896169347353], FrameTicks -> None, PlotRangePadding -> 
                None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.022680497248779963`", ",", "0.7099025878591139`", ",", 
                    "0.6062844254021029`"}], "]"}], NumberMarks -> False]], 
              Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
              Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[
                   0.022680497248779963`, 0.7099025878591139, 
                    0.6062844254021029]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[
             0.022680497248779963`, 0.7099025878591139, 0.6062844254021029], 
             Editable -> False, Selectable -> False]],
           Annotation[#, 
            RGBColor[
            0.022680497248779963`, 0.7099025878591139, 0.6062844254021029], 
            "Tooltip"]& ],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.409332513809204, 1.188499093055725}, 
       ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}}}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.82731790878063*^9, 3.827317913247572*^9}, {
   3.8273179470674963`*^9, 3.827317984133156*^9}, {3.827318041085206*^9, 
   3.827318062277413*^9}, 3.827318252131365*^9, 3.827318340111226*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"191c2851-d63e-4da4-b963-343d0a846f18"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.8535642814574338, 0.15772466147397712`, 0.8580196841854286], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.5690428543049559, 0.10514977431598475`, 0.5720131227902858], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.8535642814574338`", ",", "0.15772466147397712`", ",", 
               "0.8580196841854286`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8535642814574338, 0.15772466147397712`, 0.8580196841854286]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.8535642814574338, 0.15772466147397712`, 0.8580196841854286], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.3541926425397739, 0.2959611559659039, 0.9559830896868329], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.23612842835984926`, 0.1973074373106026, 0.6373220597912219], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.3541926425397739`", ",", "0.2959611559659039`", ",", 
               "0.9559830896868329`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3541926425397739, 0.2959611559659039, 0.9559830896868329]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.3541926425397739, 0.2959611559659039, 0.9559830896868329], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.9404816975363262, 0.08545272251318137, 0.9223338849585192], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.6269877983575508, 0.05696848167545425, 0.6148892566390128], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9404816975363262`", ",", "0.08545272251318137`", ",", 
               "0.9223338849585192`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9404816975363262, 0.08545272251318137, 0.9223338849585192]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.9404816975363262, 0.08545272251318137, 0.9223338849585192],
         Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.2268596034228303, 0.11716717237446628`, 0.3127299616437369], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.1512397356152202, 0.0781114482496442, 0.2084866410958246], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.2268596034228303`", ",", "0.11716717237446628`", ",", 
               "0.3127299616437369`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2268596034228303, 0.11716717237446628`, 0.3127299616437369]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.2268596034228303, 0.11716717237446628`, 0.3127299616437369], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.7933200172738919, 0.39303139910037577`, 0.9381684236762917], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.528880011515928, 0.26202093273358384`, 0.6254456157841946], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7933200172738919`", ",", "0.39303139910037577`", ",", 
               "0.9381684236762917`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7933200172738919, 0.39303139910037577`, 0.9381684236762917]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.7933200172738919, 0.39303139910037577`, 0.9381684236762917], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.25284091191360947`, 0.2298353231965553, 0.559911538749265], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.16856060794240632`, 0.15322354879770356`, 0.3732743591661767], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.25284091191360947`", ",", "0.2298353231965553`", ",", 
               "0.559911538749265`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.25284091191360947`, 0.2298353231965553, 0.559911538749265]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.25284091191360947`, 0.2298353231965553, 0.559911538749265],
         Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.8394027049148882, 0.1169867376132907, 0.9014114466742487], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.5596018032765921, 0.07799115840886048, 0.6009409644494992], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.8394027049148882`", ",", "0.1169867376132907`", ",", 
               "0.9014114466742487`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8394027049148882, 0.1169867376132907, 0.9014114466742487]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.8394027049148882, 0.1169867376132907, 0.9014114466742487], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.6812925581818767, 0.23434002751010174`, 0.6217439310077824], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.45419503878791784`, 0.1562266850067345, 0.41449595400518824`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.6812925581818767`", ",", "0.23434002751010174`", ",", 
               "0.6217439310077824`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6812925581818767, 0.23434002751010174`, 0.6217439310077824]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.6812925581818767, 0.23434002751010174`, 0.6217439310077824], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.15498838166329398`, 0.15824303986515353`, 0.6587804604002669], 
             
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.10332558777552933`, 0.10549535991010237`, 0.439186973600178], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.15498838166329398`", ",", "0.15824303986515353`", ",",
                "0.6587804604002669`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.15498838166329398`, 0.15824303986515353`, 0.6587804604002669]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.15498838166329398`, 0.15824303986515353`, 0.6587804604002669], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.6500256230166142, 0.10453193228666158`, 0.766119230916841], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.43335041534440943`, 0.06968795485777439, 0.5107461539445607], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.6500256230166142`", ",", "0.10453193228666158`", ",", 
               "0.766119230916841`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6500256230166142, 0.10453193228666158`, 0.766119230916841]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.6500256230166142, 0.10453193228666158`, 0.766119230916841],
         Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.7649309990830877, 0.23030815895749646`, 0.45594811158433735`], 
             
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.5099539993887252, 0.153538772638331, 0.3039654077228916], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7649309990830877`", ",", "0.23030815895749646`", ",", 
               "0.45594811158433735`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7649309990830877, 0.23030815895749646`, 0.45594811158433735`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.7649309990830877, 0.23030815895749646`, 0.45594811158433735`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.479976372433194, 0.31835727234355793`, 0.9145904192418854], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.319984248288796, 0.21223818156237195`, 0.609726946161257], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.479976372433194`", ",", "0.31835727234355793`", ",", 
               "0.9145904192418854`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.479976372433194, 0.31835727234355793`, 0.9145904192418854]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.479976372433194, 0.31835727234355793`, 0.9145904192418854],
         Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.7837045730705259, 0.2426188682642374, 0.4922797496712161], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.5224697153803506, 0.16174591217615827`, 0.32818649978081077`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7837045730705259`", ",", "0.2426188682642374`", ",", 
               "0.4922797496712161`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7837045730705259, 0.2426188682642374, 0.4922797496712161]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.7837045730705259, 0.2426188682642374, 0.4922797496712161], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.5329967170451344, 0.5492791360986118, 0.8296542522115218], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.3553311446967563, 0.3661860907324079, 0.5531028348076812], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.5329967170451344`", ",", "0.5492791360986118`", ",", 
               "0.8296542522115218`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5329967170451344, 0.5492791360986118, 0.8296542522115218]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.5329967170451344, 0.5492791360986118, 0.8296542522115218], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.526636095568116, 0.29981549021175025`, 0.7426698353846952], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.351090730378744, 0.19987699347450016`, 0.4951132235897968], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.526636095568116`", ",", "0.29981549021175025`", ",", 
               "0.7426698353846952`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.526636095568116, 0.29981549021175025`, 0.7426698353846952]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.526636095568116, 0.29981549021175025`, 0.7426698353846952],
         Editable -> False, Selectable -> False]},
      "RowDefault"]},
    {
     TemplateBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.3443486080006981, 0.6422751001373053, 0.3360733638569886], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.2295657386671321, 0.4281834000915369, 0.22404890923799242`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.3443486080006981`", ",", "0.6422751001373053`", ",", 
               "0.3360733638569886`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3443486080006981, 0.6422751001373053, 0.3360733638569886]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.3443486080006981, 0.6422751001373053, 0.3360733638569886], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.08551083691438421, 0.6888746025398258, 0.2239826140490866], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.05700722460958948, 0.45924973502655053`, 0.14932174269939108`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.08551083691438421`", ",", "0.6888746025398258`", ",", 
               "0.2239826140490866`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.08551083691438421, 0.6888746025398258, 0.2239826140490866]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.08551083691438421, 0.6888746025398258, 0.2239826140490866],
         Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.7095910255834188, 0.9332671972874065, 0.052705022852911565`], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.4730606837222792, 0.6221781315249377, 0.035136681901941046`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7095910255834188`", ",", "0.9332671972874065`", ",", 
               "0.052705022852911565`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7095910255834188, 0.9332671972874065, 0.052705022852911565`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.7095910255834188, 0.9332671972874065, 0.052705022852911565`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.7478828933410211, 0.44673253658167345`, 0.24909747343703992`], 
             
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.49858859556068075`, 0.297821691054449, 0.16606498229135996`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7478828933410211`", ",", "0.44673253658167345`", ",", 
               "0.24909747343703992`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7478828933410211, 0.44673253658167345`, 0.24909747343703992`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.7478828933410211, 0.44673253658167345`, 0.24909747343703992`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.5964905252213699, 0.7854232882746985, 0.0005451295928871058], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.39766035014757994`, 0.5236155255164657, 0.0003634197285914039], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.5964905252213699`", ",", "0.7854232882746985`", ",", 
               "0.0005451295928871058`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5964905252213699, 0.7854232882746985, 0.0005451295928871058]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.5964905252213699, 0.7854232882746985, 0.0005451295928871058], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.42612007175330335`, 0.4238572966582932, 0.10332777214184685`], 
             
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.2840800478355356, 0.2825715311055288, 0.0688851814278979], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.42612007175330335`", ",", "0.4238572966582932`", ",", 
               "0.10332777214184685`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.42612007175330335`, 0.4238572966582932, 0.10332777214184685`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.42612007175330335`, 0.4238572966582932, 0.10332777214184685`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.32764036213456627`, 0.45708545593282546`, 0.4095544481672089], 
             
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.21842690808971085`, 0.30472363728855034`, 0.2730362987781393], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.32764036213456627`", ",", "0.45708545593282546`", ",",
                "0.4095544481672089`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.32764036213456627`, 0.45708545593282546`, 0.4095544481672089]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.32764036213456627`, 0.45708545593282546`, 0.4095544481672089], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.9689516735485106, 0.5397094435471064, 0.05824677614062379], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.6459677823656738, 0.35980629569807093`, 0.038831184093749194`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9689516735485106`", ",", "0.5397094435471064`", ",", 
               "0.05824677614062379`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9689516735485106, 0.5397094435471064, 0.05824677614062379]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.9689516735485106, 0.5397094435471064, 0.05824677614062379],
         Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.07750063518124528, 0.4811878406264323, 0.15957682423803132`], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.05166709012083019, 0.32079189375095485`, 0.10638454949202089`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.07750063518124528`", ",", "0.4811878406264323`", ",", 
               "0.15957682423803132`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.07750063518124528, 0.4811878406264323, 0.15957682423803132`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.07750063518124528, 0.4811878406264323, 0.15957682423803132`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.23229534277969988`, 0.5887634302236586, 0.47684284435185975`], 
             
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.15486356185313327`, 0.3925089534824391, 0.3178952295679065], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.23229534277969988`", ",", "0.5887634302236586`", ",", 
               "0.47684284435185975`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.23229534277969988`, 0.5887634302236586, 0.47684284435185975`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.23229534277969988`, 0.5887634302236586, 0.47684284435185975`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.5502576047959316, 0.9988156952478551, 0.05519909326499395], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.3668384031972877, 0.6658771301652368, 0.03679939550999597], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.5502576047959316`", ",", "0.9988156952478551`", ",", 
               "0.05519909326499395`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5502576047959316, 0.9988156952478551, 0.05519909326499395]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.5502576047959316, 0.9988156952478551, 0.05519909326499395],
         Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.46324223754918603`, 0.28333107783830846`, 
              0.019442654729932896`], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.30882815836612404`, 0.188887385225539, 0.012961769819955265`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.46324223754918603`", ",", "0.28333107783830846`", ",",
                "0.019442654729932896`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.46324223754918603`, 0.28333107783830846`, 
               0.019442654729932896`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.46324223754918603`, 0.28333107783830846`, 0.019442654729932896`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.24622976506336514`, 0.707332548074562, 0.307702099741453], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.1641531767089101, 0.47155503204970806`, 0.2051347331609687], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.24622976506336514`", ",", "0.707332548074562`", ",", 
               "0.307702099741453`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.24622976506336514`, 0.707332548074562, 0.307702099741453]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.24622976506336514`, 0.707332548074562, 0.307702099741453], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.07133340166769853, 0.8921894169406794, 0.25419007044048136`], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.04755560111179902, 0.5947929446271196, 0.1694600469603209], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.07133340166769853`", ",", "0.8921894169406794`", ",", 
               "0.25419007044048136`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.07133340166769853, 0.8921894169406794, 0.25419007044048136`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.07133340166769853, 0.8921894169406794, 0.25419007044048136`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.3983036668984483, 0.783425564455486, 0.07443094528765726], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.2655357779322989, 0.5222837096369907, 0.04962063019177151], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.3983036668984483`", ",", "0.783425564455486`", ",", 
               "0.07443094528765726`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3983036668984483, 0.783425564455486, 0.07443094528765726]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.3983036668984483, 0.783425564455486, 0.07443094528765726], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.6351720848321258, 0.4344672721539702, 0.38199763768169825`], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.4234480565547506, 0.2896448481026468, 0.25466509178779884`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.6351720848321258`", ",", "0.4344672721539702`", ",", 
               "0.38199763768169825`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6351720848321258, 0.4344672721539702, 0.38199763768169825`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.6351720848321258, 0.4344672721539702, 0.38199763768169825`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.4856280933303625, 0.19208654604975073`, 0.013481533280932156`], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.32375206222024167`, 0.1280576973665005, 0.008987688853954772], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.4856280933303625`", ",", "0.19208654604975073`", ",", 
               "0.013481533280932156`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4856280933303625, 0.19208654604975073`, 
               0.013481533280932156`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.4856280933303625, 0.19208654604975073`, 0.013481533280932156`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.7763492152028821, 0.8245392738689727, 0.36960159759456346`], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.5175661434685881, 0.5496928492459818, 0.24640106506304232`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7763492152028821`", ",", "0.8245392738689727`", ",", 
               "0.36960159759456346`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7763492152028821, 0.8245392738689727, 0.36960159759456346`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.7763492152028821, 0.8245392738689727, 0.36960159759456346`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.5701426197874235, 0.902368845343235, 0.6954682879776131], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.3800950798582824, 0.6015792302288234, 0.46364552531840875`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.5701426197874235`", ",", "0.902368845343235`", ",", 
               "0.6954682879776131`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5701426197874235, 0.902368845343235, 0.6954682879776131]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.5701426197874235, 0.902368845343235, 0.6954682879776131], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.45180103939396643`, 0.5584025461085773, 0.3608651056100971], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.30120069292931095`, 0.3722683640723849, 0.24057673707339808`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.45180103939396643`", ",", "0.5584025461085773`", ",", 
               "0.3608651056100971`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.45180103939396643`, 0.5584025461085773, 0.3608651056100971]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.45180103939396643`, 0.5584025461085773, 0.3608651056100971], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.5436824608711355, 0.6368265562729978, 0.20859778953467956`], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.3624549739140903, 0.42455103751533185`, 0.1390651930231197], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.5436824608711355`", ",", "0.6368265562729978`", ",", 
               "0.20859778953467956`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5436824608711355, 0.6368265562729978, 0.20859778953467956`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.5436824608711355, 0.6368265562729978, 0.20859778953467956`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.12107063893629055`, 0.5916075095543469, 0.30365612533873554`], 
             
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.08071375929086037, 0.39440500636956466`, 0.20243741689249037`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.12107063893629055`", ",", "0.5916075095543469`", ",", 
               "0.30365612533873554`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.12107063893629055`, 0.5916075095543469, 0.30365612533873554`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.12107063893629055`, 0.5916075095543469, 0.30365612533873554`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.7354306350293238, 0.7706832421579728, 0.010092174004172616`], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.49028709001954923`, 0.5137888281053152, 0.006728116002781745], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7354306350293238`", ",", "0.7706832421579728`", ",", 
               "0.010092174004172616`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7354306350293238, 0.7706832421579728, 0.010092174004172616`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.7354306350293238, 0.7706832421579728, 0.010092174004172616`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.3613279246594756, 0.9559056100621954, 0.7523500136612113], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.24088528310631707`, 0.6372704067081303, 0.5015666757741409], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.3613279246594756`", ",", "0.9559056100621954`", ",", 
               "0.7523500136612113`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3613279246594756, 0.9559056100621954, 0.7523500136612113]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.3613279246594756, 0.9559056100621954, 0.7523500136612113], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.022680497248779963`, 0.7099025878591139, 0.6062844254021029], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.015120331499186642`, 0.47326839190607595`, 0.4041896169347353], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.022680497248779963`", ",", "0.7099025878591139`", ",",
                "0.6062844254021029`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.022680497248779963`, 0.7099025878591139, 0.6062844254021029]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.022680497248779963`, 0.7099025878591139, 0.6062844254021029], 
        Editable -> False, Selectable -> False]},
      "RowDefault"]},
    {
     TemplateBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.6264411372209426, 0.6186228130246765, 0.8507188915090753], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.41762742481396176`, 0.41241520868311765`, 0.5671459276727169], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.6264411372209426`", ",", "0.6186228130246765`", ",", 
               "0.8507188915090753`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6264411372209426, 0.6186228130246765, 0.8507188915090753]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.6264411372209426, 0.6186228130246765, 0.8507188915090753], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.9879751467738862, 0.7514040058019009, 0.9708653011732282], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.6586500978492575, 0.500936003867934, 0.6472435341154855], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9879751467738862`", ",", "0.7514040058019009`", ",", 
               "0.9708653011732282`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9879751467738862, 0.7514040058019009, 0.9708653011732282]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.9879751467738862, 0.7514040058019009, 0.9708653011732282], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.8095080361074045, 0.5289308656879794, 0.9111074876326664], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.5396720240716031, 0.35262057712531963`, 0.607404991755111], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.8095080361074045`", ",", "0.5289308656879794`", ",", 
               "0.9111074876326664`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8095080361074045, 0.5289308656879794, 0.9111074876326664]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.8095080361074045, 0.5289308656879794, 0.9111074876326664], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.22621905918162577`, 0.7193803548125817, 0.8898197336276237], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.15081270612108386`, 0.4795869032083878, 0.5932131557517492], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.22621905918162577`", ",", "0.7193803548125817`", ",", 
               "0.8898197336276237`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.22621905918162577`, 0.7193803548125817, 0.8898197336276237]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.22621905918162577`, 0.7193803548125817, 0.8898197336276237], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.18189876666664495`, 0.6385491259797123, 0.8368047767887115], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.12126584444442998`, 0.4256994173198082, 0.5578698511924743], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.18189876666664495`", ",", "0.6385491259797123`", ",", 
               "0.8368047767887115`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.18189876666664495`, 0.6385491259797123, 0.8368047767887115]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.18189876666664495`, 0.6385491259797123, 0.8368047767887115], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.3313846686731188, 0.5533027603000169, 0.8071226293648672], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.22092311244874585`, 0.36886850686667794`, 0.5380817529099116], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.3313846686731188`", ",", "0.5533027603000169`", ",", 
               "0.8071226293648672`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3313846686731188, 0.5533027603000169, 0.8071226293648672]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.3313846686731188, 0.5533027603000169, 0.8071226293648672], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.026464853508305408`, 0.5987346259033808, 0.7543774310939013], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.017643235672203605`, 0.39915641726892054`, 0.5029182873959342], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.026464853508305408`", ",", "0.5987346259033808`", ",",
                "0.7543774310939013`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.026464853508305408`, 0.5987346259033808, 0.7543774310939013]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.026464853508305408`, 0.5987346259033808, 0.7543774310939013], 
        Editable -> False, Selectable -> False]},
      "RowDefault"]},
    {
     TemplateBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.9844545455992038, 0.21242091139682073`, 0.32876434328478354`], 
             
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.6563030303994692, 0.14161394093121382`, 0.21917622885652238`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9844545455992038`", ",", "0.21242091139682073`", ",", 
               "0.32876434328478354`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9844545455992038, 0.21242091139682073`, 0.32876434328478354`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.9844545455992038, 0.21242091139682073`, 0.32876434328478354`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.9997598351509964, 0.07342083465184124, 0.31382379879394295`], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.666506556767331, 0.0489472231012275, 0.20921586586262864`], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9997598351509964`", ",", "0.07342083465184124`", ",", 
               "0.31382379879394295`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9997598351509964, 0.07342083465184124, 0.31382379879394295`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.9997598351509964, 0.07342083465184124, 0.31382379879394295`], 
        Editable -> False, Selectable -> False], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.7463659418304378, 0.0065179010570348694`, 
              0.14826369583755739`], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.4975772945536252, 0.00434526737135658, 0.09884246389170492], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7463659418304378`", ",", "0.0065179010570348694`", 
               ",", "0.14826369583755739`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7463659418304378, 0.0065179010570348694`, 
               0.14826369583755739`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.7463659418304378, 0.0065179010570348694`, 0.14826369583755739`], 
        Editable -> False, Selectable -> False]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.82731790878063*^9, 3.827317913247572*^9}, {
   3.8273179470674963`*^9, 3.827317984133156*^9}, {3.827318041085206*^9, 
   3.827318062277413*^9}, 3.827318252131365*^9, 3.827318340423607*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"32339de0-bacf-4352-a7ee-ab94754ed881"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["23. More About Numbers", "Section",
 CellChangeTimes->{{3.827415832824008*^9, 
  3.82741583577001*^9}},ExpressionUUID->"7a668a46-487a-4500-9e60-\
38be6dcafb0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Pi", ",", "50"}], "]"}], "-", 
  RowBox[{"Round", "[", "Pi", "]"}]}]], "Input",
 CellChangeTimes->{{3.827415922170699*^9, 3.82741593683004*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1c3175fb-f589-4060-9b97-7183b040faaf"],

Cell[BoxData["0.\
1415926535897932384626433832795028841971693993751058209749445923078164118876`\
48.653890848257205"], "Output",
 CellChangeTimes->{3.827415937569249*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"73149197-4b16-4db1-8d52-97c0ffca1f60"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["24. More Forms of Visualization", "Section",
 CellChangeTimes->{{3.827415956451128*^9, 
  3.827415960182893*^9}},ExpressionUUID->"ed6da7e4-5655-4707-9af0-\
7c174444b992"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"StringLength", "/@", 
   RowBox[{"TextWords", "[", 
    RowBox[{"WikipediaData", "[", "\"\<computers\>\"", "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8274161945142527`*^9, 3.827416198412056*^9}, {
  3.827416242014029*^9, 3.8274162993119497`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"8462f33f-c7b9-4893-9b97-635745ed8e0a"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {2., 261.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{34.100680544435555`, 53.279152733951875`}, {
           56.65909761659193, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 261]& ,
        TagBoxNote->"261"],
       StyleBox["261", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[261, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2., 0}, {3., 1449.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{52.779152733951875`, 
           71.95762492346819}, {-93.21187822121726, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1449]& ,
        TagBoxNote->"1449"],
       StyleBox["1449", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1449, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0}, {4., 1507.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{71.45762492346819, 
           90.63609711298452}, {-100.52881138501601`, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1507]& ,
        TagBoxNote->"1507"],
       StyleBox["1507", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1507, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0}, {5., 1202.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{90.13609711298452, 
           109.31456930250084`}, {-62.051835265039756`, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1202]& ,
        TagBoxNote->"1202"],
       StyleBox["1202", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1202, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0}, {6., 849.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{108.81456930250084`, 
           127.99304149201716`}, {-17.519466181919682`, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 849]& ,
        TagBoxNote->"849"],
       StyleBox["849", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[849, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6., 0}, {7., 673.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{127.49304149201716`, 146.67151368153347`}, {
           4.683641349607598, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 673]& ,
        TagBoxNote->"673"],
       StyleBox["673", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[673, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7., 0}, {8., 788.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{146.17151368153347`, 
           165.3499858710498}, {-9.824070957924434, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 788]& ,
        TagBoxNote->"788"],
       StyleBox["788", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[788, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8., 0}, {9., 705.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{164.8499858710498, 184.02845806056612`}, {
           0.6467127075117247, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 705]& ,
        TagBoxNote->"705"],
       StyleBox["705", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[705, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9., 0}, {10., 521.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{183.52845806056612`, 202.70693025008245`}, {
           23.859052399562984`, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 521]& ,
        TagBoxNote->"521"],
       StyleBox["521", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[521, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10., 0}, {11., 380.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{202.20693025008245`, 221.38540243959875`}, {
           41.646769228797915`, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 380]& ,
        TagBoxNote->"380"],
       StyleBox["380", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[380, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{11., 0}, {12., 212.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{220.88540243959875`, 240.06387462911508`}, {
           62.84064459980123, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 212]& ,
        TagBoxNote->"212"],
       StyleBox["212", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[212, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{12., 0}, {13., 187.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{239.56387462911508`, 258.7423468186314}, {
           65.99449510143863, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 187]& ,
        TagBoxNote->"187"],
       StyleBox["187", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[187, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{13., 0}, {14., 61.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{258.2423468186314, 277.4208190081477}, {
           81.88990162969112, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 61]& ,
        TagBoxNote->"61"],
       StyleBox["61", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[61, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{14., 0}, {15., 49.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{276.9208190081477, 296.09929119766406`}, {
           83.40374987047707, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 49]& ,
        TagBoxNote->"49"],
       StyleBox["49", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[49, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15., 0}, {16., 22.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{295.59929119766406`, 314.77776338718036`}, {
           86.80990841224546, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 22]& ,
        TagBoxNote->"22"],
       StyleBox["22", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{16., 0}, {17., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{314.27776338718036`, 333.45623557669666`}, {
           89.45914283362087, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{17., 0}, {18., 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{332.95623557669666`, 352.134707766213}, {
           88.70221871322791, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{18., 0}, {19., 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{351.634707766213, 370.8131799557293}, {
           89.20683479348989, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{19., 0}, {20., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{370.3131799557293, 389.49165214524567`}, {
           89.45914283362087, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{25., 0}, {26., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{482.3840130928272, 501.5624852823436}, {
           89.45914283362087, 90.08529685368637}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.6599999999999999, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{1., 18.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8274162724501963`*^9, 3.827416300207755*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"82613675-00dd-47e0-9a17-2e84c0647bc9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["25. Ways to Apply Functions", "Section",
 CellChangeTimes->{{3.8274164235287523`*^9, 
  3.827416426853613*^9}},ExpressionUUID->"40bf5d0f-4527-4ea4-a935-\
95f255ab1734"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Histogram", "[", 
     RowBox[{
      RowBox[{"StringLength", "/@", 
       RowBox[{"TextWords", "[", 
        RowBox[{"WikipediaData", "[", "#", "]"}], "]"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"WordList", "[", "]"}], ",", "3"}], "]"}]}], "//", 
  "Row"}]], "Input",
 CellChangeTimes->{{3.827416481086008*^9, 3.8274165852390747`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"c593a3a1-efc1-42ce-b874-61b8c92b5a8b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.5529999999999999]]], 
       RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.5529999999999999]]], 
         RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{0.5, 0}, {1.5, 201.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 201]& , TagBoxNote -> 
             "201"], 
            StyleBox["201", {}, StripOnInput -> False]], Annotation[#, 
            Style[201, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{1.5, 0}, {2.5, 300.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 300]& , TagBoxNote -> 
             "300"], 
            StyleBox["300", {}, StripOnInput -> False]], Annotation[#, 
            Style[300, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{2.5, 0}, {3.5, 287.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 287]& , TagBoxNote -> 
             "287"], 
            StyleBox["287", {}, StripOnInput -> False]], Annotation[#, 
            Style[287, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{3.5, 0}, {4.5, 211.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 211]& , TagBoxNote -> 
             "211"], 
            StyleBox["211", {}, StripOnInput -> False]], Annotation[#, 
            Style[211, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{4.5, 0}, {5.5, 224.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 224]& , TagBoxNote -> 
             "224"], 
            StyleBox["224", {}, StripOnInput -> False]], Annotation[#, 
            Style[224, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{5.5, 0}, {6.5, 131.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 131]& , TagBoxNote -> 
             "131"], 
            StyleBox["131", {}, StripOnInput -> False]], Annotation[#, 
            Style[131, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{6.5, 0}, {7.5, 139.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 139]& , TagBoxNote -> 
             "139"], 
            StyleBox["139", {}, StripOnInput -> False]], Annotation[#, 
            Style[139, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{7.5, 0}, {8.5, 106.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 106]& , TagBoxNote -> 
             "106"], 
            StyleBox["106", {}, StripOnInput -> False]], Annotation[#, 
            Style[106, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{8.5, 0}, {9.5, 92.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 92]& , TagBoxNote -> 
             "92"], 
            StyleBox["92", {}, StripOnInput -> False]], Annotation[#, 
            Style[92, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{9.5, 0}, {10.5, 42.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 42]& , TagBoxNote -> 
             "42"], 
            StyleBox["42", {}, StripOnInput -> False]], Annotation[#, 
            Style[42, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{10.5, 0}, {11.5, 27.}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 27]& , 
             TagBoxNote -> "27"], 
            StyleBox["27", {}, StripOnInput -> False]], Annotation[#, 
            Style[27, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{11.5, 0}, {12.5, 14.}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 14]& , 
             TagBoxNote -> "14"], 
            StyleBox["14", {}, StripOnInput -> False]], Annotation[#, 
            Style[14, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{12.5, 0}, {13.5, 12.}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 12]& , 
             TagBoxNote -> "12"], 
            StyleBox["12", {}, StripOnInput -> False]], Annotation[#, 
            Style[12, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{13.5, 0}, {14.5, 3.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , TagBoxNote -> 
             "3"], 
            StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
            Style[3, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{14.5, 0}, {15.5, 2.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , TagBoxNote -> 
             "2"], 
            StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
            Style[2, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{18.5, 0}, {19.5, 1.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , TagBoxNote -> 
             "1"], 
            StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
            Style[1, {}], 
            "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0.12, 0},
      FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Small, PlotLabel -> 
     FormBox["\"a\"", TraditionalForm], 
     PlotRange -> {{0.5, 19.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.595]]], 
       RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.595]]], 
         RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{0.5, 0}, {1.5, 7.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , TagBoxNote -> 
             "7"], 
            StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
            Style[7, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{1.5, 0}, {2.5, 23.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 23]& , TagBoxNote -> 
             "23"], 
            StyleBox["23", {}, StripOnInput -> False]], Annotation[#, 
            Style[23, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{2.5, 0}, {3.5, 32.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 32]& , TagBoxNote -> 
             "32"], 
            StyleBox["32", {}, StripOnInput -> False]], Annotation[#, 
            Style[32, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{3.5, 0}, {4.5, 19.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 19]& , TagBoxNote -> 
             "19"], 
            StyleBox["19", {}, StripOnInput -> False]], Annotation[#, 
            Style[19, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{4.5, 0}, {5.5, 24.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 24]& , TagBoxNote -> 
             "24"], 
            StyleBox["24", {}, StripOnInput -> False]], Annotation[#, 
            Style[24, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{5.5, 0}, {6.5, 15.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 15]& , TagBoxNote -> 
             "15"], 
            StyleBox["15", {}, StripOnInput -> False]], Annotation[#, 
            Style[15, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{6.5, 0}, {7.5, 23.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 23]& , TagBoxNote -> 
             "23"], 
            StyleBox["23", {}, StripOnInput -> False]], Annotation[#, 
            Style[23, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{7.5, 0}, {8.5, 13.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 13]& , TagBoxNote -> 
             "13"], 
            StyleBox["13", {}, StripOnInput -> False]], Annotation[#, 
            Style[13, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{8.5, 0}, {9.5, 10.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 10]& , TagBoxNote -> 
             "10"], 
            StyleBox["10", {}, StripOnInput -> False]], Annotation[#, 
            Style[10, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{9.5, 0}, {10.5, 11.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 11]& , TagBoxNote -> 
             "11"], 
            StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
            Style[11, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{10.5, 0}, {11.5, 7.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , TagBoxNote -> 
             "7"], 
            StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
            Style[7, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{11.5, 0}, {12.5, 2.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , TagBoxNote -> 
             "2"], 
            StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
            Style[2, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{12.5, 0}, {13.5, 1.}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , TagBoxNote -> 
             "1"], 
            StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
            Style[1, {}], 
            "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0.24, 0},
      FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Small, PlotLabel -> 
     FormBox["\"aah\"", TraditionalForm], 
     PlotRange -> {{0.5, 13.5}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.567]]], 
       RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.567]]], 
         RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{1., 0}, {2., 87.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 87]& , TagBoxNote -> 
             "87"], 
            StyleBox["87", {}, StripOnInput -> False]], Annotation[#, 
            Style[87, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{2., 0}, {3., 588.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 588]& , TagBoxNote -> 
             "588"], 
            StyleBox["588", {}, StripOnInput -> False]], Annotation[#, 
            Style[588, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{3., 0}, {4., 636.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 636]& , TagBoxNote -> 
             "636"], 
            StyleBox["636", {}, StripOnInput -> False]], Annotation[#, 
            Style[636, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{4., 0}, {5., 559.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 559]& , TagBoxNote -> 
             "559"], 
            StyleBox["559", {}, StripOnInput -> False]], Annotation[#, 
            Style[559, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{5., 0}, {6., 374.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 374]& , TagBoxNote -> 
             "374"], 
            StyleBox["374", {}, StripOnInput -> False]], Annotation[#, 
            Style[374, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{6., 0}, {7., 237.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 237]& , TagBoxNote -> 
             "237"], 
            StyleBox["237", {}, StripOnInput -> False]], Annotation[#, 
            Style[237, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{7., 0}, {8., 273.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 273]& , TagBoxNote -> 
             "273"], 
            StyleBox["273", {}, StripOnInput -> False]], Annotation[#, 
            Style[273, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{8., 0}, {9., 246.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 246]& , TagBoxNote -> 
             "246"], 
            StyleBox["246", {}, StripOnInput -> False]], Annotation[#, 
            Style[246, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{9., 0}, {10., 164.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 164]& , TagBoxNote -> 
             "164"], 
            StyleBox["164", {}, StripOnInput -> False]], Annotation[#, 
            Style[164, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{10., 0}, {11., 82.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 82]& , TagBoxNote -> 
             "82"], 
            StyleBox["82", {}, StripOnInput -> False]], Annotation[#, 
            Style[82, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{11., 0}, {12., 52.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 52]& , TagBoxNote -> 
             "52"], 
            StyleBox["52", {}, StripOnInput -> False]], Annotation[#, 
            Style[52, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{12., 0}, {13., 39.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 39]& , TagBoxNote -> 
             "39"], 
            StyleBox["39", {}, StripOnInput -> False]], Annotation[#, 
            Style[39, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{13., 0}, {14., 17.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 17]& , TagBoxNote -> 
             "17"], 
            StyleBox["17", {}, StripOnInput -> False]], Annotation[#, 
            Style[17, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{14., 0}, {15., 7.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , TagBoxNote -> 
             "7"], 
            StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
            Style[7, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{15., 0}, {16., 4.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 4]& , TagBoxNote -> 
             "4"], 
            StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
            Style[4, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{16., 0}, {17., 3.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , TagBoxNote -> 
             "3"], 
            StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
            Style[3, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{17., 0}, {18., 1.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , TagBoxNote -> 
             "1"], 
            StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
            Style[1, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{18., 0}, {19., 4.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 4]& , TagBoxNote -> 
             "4"], 
            StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
            Style[4, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{21., 0}, {22., 1.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , TagBoxNote -> 
             "1"], 
            StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
            Style[1, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{24., 0}, {25., 1.}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , TagBoxNote -> 
             "1"], 
            StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
            Style[1, {}], 
            "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.6599999999999999, 0}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Small, PlotLabel -> 
     FormBox["\"aardvark\"", TraditionalForm], 
     PlotRange -> {{1., 18.}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.827416521522678*^9, 3.827416586612734*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"ef744353-3aab-434a-905c-f385da6e582e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["26. Pure Anonymous Functions", "Section",
 CellChangeTimes->{{3.82741659553172*^9, 
  3.827416600977788*^9}},ExpressionUUID->"939ccd6c-e30d-4700-8ab2-\
894b4d435ef2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "^", "2"}], "+", "1"}], "&"}], ")"}], "/@", 
  RowBox[{"Range", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.827416706334313*^9, 3.8274167127797327`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"1155881d-c576-4e10-84f9-f97fabe7a108"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "5", ",", "10", ",", "17", ",", "26", ",", "37", ",", "50", ",", 
   "65", ",", "82", ",", "101"}], "}"}]], "Output",
 CellChangeTimes->{3.827416713172615*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"82f35c32-4c19-4c39-9452-a0c390964085"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], "^", "2"}], "+", "1"}]], "Input",
 CellChangeTimes->{{3.827416732128083*^9, 3.827416745501955*^9}, {
  3.8274168630586452`*^9, 3.827416867849925*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"a0db2fec-921d-4990-8bb6-8d267f86f801"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "5", ",", "10", ",", "17", ",", "26", ",", "37", ",", "50", ",", 
   "65", ",", "82", ",", "101"}], "}"}]], "Output",
 CellChangeTimes->{3.827416868074259*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"fda0655c-2450-4ffe-bf93-a5a98af6846e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["27. Applying Functions Repeatedly", "Section",
 CellChangeTimes->{{3.8274168736978683`*^9, 
  3.827416879108135*^9}},ExpressionUUID->"74dd862c-2288-4e66-a932-\
90609e5b933b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"59", "#"}], ",", "101"}], "]"}], "&"}], ",", "1", ",", 
    "100"}], "]"}], "//", "ListLinePlot"}]], "Input",
 CellChangeTimes->{{3.8274170836854467`*^9, 3.827417128389134*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"c8daeca4-005e-4230-9a0f-6857d90cc5ea"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxllLlOQzEQRS0qSgoKCgqIEEIIISDsW5ywhR0CBGiRqPkFf5o/KZ/A8s6x
FBMpObrx87Nn5s7Mf3wNPidCCJ8/3182n1FnnCH+/abbhmESfYGeguppOIQz
PH+KnoVvcK5iCz7ChYZxgF5EP6CXeL/vW4Z7cIX1O/QqdP8a6yfo9Yb5Cb1R
7WtzvuubPO/5W/AFbkPj3oEtuAv3q3u3q//JQzjgfN9/yP2N5wjewGNo/jqQ
uoTI/kuIDs+wy//sT90qjh48Zx2drZ957bOu1jf6wnPQ2fjO0NwnoVO/Ovce
oqP315fGiU7ez3sNq/fqd/ISXUeHd3g1fs+kvh5nqlh8ap3wZ1LbR9wjvrKO
LnXS1/pA3YPkpfStWv/qG/JuX1nH4iv2ZbW+Jo+JekXziq9LnpkjxRf0mb5M
xFf63HjRuWKyvsSRqU/pS/sarW/ta31SfE7f6Jvs+a5Td334r8+rviznqqlr
8bV9qa/wjT6LzBN9ad6N07lmnpxT+kRfmlf70LicW85h6+a5zokyV5m7zjn7
sPQBcziqR51vktKXSw==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 101.}, {0, 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.827417128791752*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"e1149540-8864-4064-81ae-08b72cafd2ec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["28. Tests and Conditionals", "Section",
 CellChangeTimes->{{3.827502043204198*^9, 
  3.827502049831382*^9}},ExpressionUUID->"221af7d6-7d1e-4bdb-82c1-\
8bd646fdb6a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Range", "[", "25", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"#", ",", "10"}], "]"}], "\[Equal]", "3"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827503969654932*^9, 3.8275039880726213`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"98279a29-7b6d-48b2-a8e5-5c4c7581f06e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "13", ",", "23"}], "}"}]], "Output",
 CellChangeTimes->{3.827503988535408*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"0edfaede-834a-49c7-9058-ee4dd6b030be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "\[Equal]", "j"}], ",", "1", ",", "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "5"}], "}"}]}], "]"}], "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.827504000932205*^9, 3.827504031941266*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"f467b9db-2e8f-4487-90a3-7d76ecb9c862"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0", "0"},
    {"0", "1", "0", "0", "0"},
    {"0", "0", "1", "0", "0"},
    {"0", "0", "0", "1", "0"},
    {"0", "0", "0", "0", "1"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8275040212937193`*^9, 3.8275040323031673`*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"0aced990-a044-48f6-b10b-321ab2755e39"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["29. More about Pure Functions", "Section",
 CellChangeTimes->{{3.827504050142362*^9, 
  3.827504053800871*^9}},ExpressionUUID->"5b7c266b-ad3f-4acd-9bf8-\
717d6f29c945"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{"Prime", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.827505070235148*^9, 3.827505074655117*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"130831b7-052b-4d96-b7ec-11a187636a7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
   ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", 
   "73", ",", "79", ",", "83", ",", "89", ",", "97", ",", "101", ",", "103", 
   ",", "107", ",", "109", ",", "113", ",", "127", ",", "131", ",", "137", 
   ",", "139", ",", "149", ",", "151", ",", "157", ",", "163", ",", "167", 
   ",", "173", ",", "179", ",", "181", ",", "191", ",", "193", ",", "197", 
   ",", "199", ",", "211", ",", "223", ",", "227", ",", "229", ",", "233", 
   ",", "239", ",", "241", ",", "251", ",", "257", ",", "263", ",", "269", 
   ",", "271", ",", "277", ",", "281", ",", "283", ",", "293", ",", "307", 
   ",", "311", ",", "313", ",", "317", ",", "331", ",", "337", ",", "347", 
   ",", "349", ",", "353", ",", "359", ",", "367", ",", "373", ",", "379", 
   ",", "383", ",", "389", ",", "397", ",", "401", ",", "409", ",", "419", 
   ",", "421", ",", "431", ",", "433", ",", "439", ",", "443", ",", "449", 
   ",", "457", ",", "461", ",", "463", ",", "467", ",", "479", ",", "487", 
   ",", "491", ",", "499", ",", "503", ",", "509", ",", "521", ",", "523", 
   ",", "541"}], "}"}]], "Output",
 CellChangeTimes->{3.827505075049024*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"818629d5-d1be-477b-b07a-32a41ce268ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#1", "*", "#2"}], ")"}], "&"}], ",", "1", ",", 
   RowBox[{"Array", "[", 
    RowBox[{"Prime", ",", "10"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.827505084556069*^9, 3.827505101835371*^9}, {
  3.827505195832241*^9, 3.827505225681395*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"988fad80-2709-4693-9f92-8efdaed7e6eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "6", ",", "30", ",", "210", ",", "2310", ",", "30030", 
   ",", "510510", ",", "9699690", ",", "223092870", ",", "6469693230"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8275052261105547`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"78c9d70c-1a3e-4bc3-b7bc-96a2baf1913a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#1", ">=", "#2"}], ",", "1", ",", "0"}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.8275052358458633`*^9, 3.8275052363842583`*^9}, {
  3.827505313724448*^9, 3.8275053652860813`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"1377cd3d-d276-4597-b96c-8784baa00dbe"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"1", "1", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"1", "1", "1", "0", "0", "0", "0", "0", "0", "0"},
    {"1", "1", "1", "1", "0", "0", "0", "0", "0", "0"},
    {"1", "1", "1", "1", "1", "0", "0", "0", "0", "0"},
    {"1", "1", "1", "1", "1", "1", "0", "0", "0", "0"},
    {"1", "1", "1", "1", "1", "1", "1", "0", "0", "0"},
    {"1", "1", "1", "1", "1", "1", "1", "1", "0", "0"},
    {"1", "1", "1", "1", "1", "1", "1", "1", "1", "0"},
    {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.82750534271985*^9, 3.827505365569501*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"6b8fb8be-46a2-45f0-b232-f2fb1600ce19"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["30. Rearranging Lists", "Section",
 CellChangeTimes->{{3.827580540795698*^9, 
  3.8275805443445387`*^9}},ExpressionUUID->"d8c1f415-f955-4f3c-b625-\
f701fd4323ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Thread", "[", 
  RowBox[{
   RowBox[{"Alphabet", "[", "]"}], "\[Rule]", 
   RowBox[{"Range", "[", "26", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8275807451142187`*^9, 3.8275807563288097`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"59a32185-fe29-44c2-b36a-ecb68d5b4b87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"d\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"e\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"f\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"g\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"h\"\>", "\[Rule]", "8"}], ",", 
   RowBox[{"\<\"i\"\>", "\[Rule]", "9"}], ",", 
   RowBox[{"\<\"j\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"k\"\>", "\[Rule]", "11"}], ",", 
   RowBox[{"\<\"l\"\>", "\[Rule]", "12"}], ",", 
   RowBox[{"\<\"m\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"n\"\>", "\[Rule]", "14"}], ",", 
   RowBox[{"\<\"o\"\>", "\[Rule]", "15"}], ",", 
   RowBox[{"\<\"p\"\>", "\[Rule]", "16"}], ",", 
   RowBox[{"\<\"q\"\>", "\[Rule]", "17"}], ",", 
   RowBox[{"\<\"r\"\>", "\[Rule]", "18"}], ",", 
   RowBox[{"\<\"s\"\>", "\[Rule]", "19"}], ",", 
   RowBox[{"\<\"t\"\>", "\[Rule]", "20"}], ",", 
   RowBox[{"\<\"u\"\>", "\[Rule]", "21"}], ",", 
   RowBox[{"\<\"v\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"w\"\>", "\[Rule]", "23"}], ",", 
   RowBox[{"\<\"x\"\>", "\[Rule]", "24"}], ",", 
   RowBox[{"\<\"y\"\>", "\[Rule]", "25"}], ",", 
   RowBox[{"\<\"z\"\>", "\[Rule]", "26"}]}], "}"}]], "Output",
 CellChangeTimes->{3.827580756846299*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"df1b9769-65a5-4f58-b4d2-8f0df8cc0e14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StringJoin", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomChoice", "[", 
         RowBox[{"Alphabet", "[", "]"}], "]"}], ",", "4"}], "]"}], "]"}], ",",
      "1000"}], "]"}], ",", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"WordList", "[", "]"}], ",", "#"}], "]"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827580823661067*^9, 3.8275809167717657`*^9}, {
  3.8275809659634*^9, 3.827581028319632*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ceaa9b14-d236-4022-ab64-8f0df1648615"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"rung\"\>", ",", "\<\"haft\"\>", ",", "\<\"skin\"\>", 
   ",", "\<\"fang\"\>", ",", "\<\"burg\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.827580917426179*^9, {3.827580968089472*^9, 3.8275809980681467`*^9}, 
   3.827581044450849*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"7fc2a344-1245-4a32-ab3c-e2de1a3f66f9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["31. Parts of Lists", "Section",
 CellChangeTimes->{{3.827581055613283*^9, 
  3.82758105762815*^9}},ExpressionUUID->"a3f8b988-0dec-4dec-ad26-\
0e2b89a93d09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeLargestBy", "[", 
  RowBox[{
   RowBox[{"WordList", "[", "]"}], ",", "StringLength", ",", "10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827581252620179*^9, 3.827581296288974*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"38aa8963-354f-4c6f-a483-0f3d43dda378"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"electroencephalographic\"\>", 
   ",", "\<\"electroencephalograph\"\>", ",", "\<\"counterrevolutionary\"\>", 
   ",", "\<\"buckminsterfullerene\"\>", ",", "\<\"compartmentalization\"\>", 
   ",", "\<\"electroencephalogram\"\>", ",", "\<\"internationalization\"\>", 
   ",", "\<\"uncharacteristically\"\>", ",", "\<\"magnetohydrodynamics\"\>", 
   ",", "\<\"incomprehensibility\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.827581297042351*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"5bab57c4-02f1-4edc-92a7-4e6ac6819a0f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["32. Patterns", "Section",
 CellChangeTimes->{{3.82785345558891*^9, 
  3.827853456821701*^9}},ExpressionUUID->"37bdb6bf-9231-44bb-8a43-\
9674ee20854e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "_", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.827856223520755*^9, 3.827856232567889*^9}, {
  3.8278563527479343`*^9, 3.827856401525139*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6a9ea114-84bb-4f07-8a4b-535a365e4dbf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.827856402130995*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"816415eb-6e6d-40c0-8a82-cf139416aab4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "x_", ",", "x_"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8278564093171263`*^9, 3.827856419294174*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"c12ad9c4-e527-4b81-a76f-010b3edefae4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "9", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.827856419733087*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"965d8624-99c5-4245-b048-969e7534f6ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"Range", "[", "100", "]"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"0", "\[Rule]", "Gray"}], ",", 
    RowBox[{"9", "\[Rule]", "Orange"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.827856450469995*^9, 3.827856463107223*^9}, {
  3.827856522043222*^9, 3.827856560612173*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"092f4083-5b57-472a-9372-ce68f844f45b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "6", "}"}], ",", 
   RowBox[{"{", "7", "}"}], ",", 
   RowBox[{"{", "8", "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.5, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0.5],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0.5],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0.5],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0.5],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0.5],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0.5],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0.5],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0.5],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0.5],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0.5],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0.5],
      Editable->False,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.827856561299775*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"427a88dd-816a-43f5-a5ad-908fcbdc6484"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["33. Expressions and Their Structure", "Section",
 CellChangeTimes->{{3.827856569574973*^9, 
  3.827856582861071*^9}},ExpressionUUID->"c1b12b5f-634d-481a-bf5b-\
60321d6b198e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"{", "0", "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.827856860796427*^9, 3.8278568674476233`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"9b9945eb-9065-4d5b-8d7d-c91fd4ec8c5f"],

Cell[BoxData["Graphics"], "Output",
 CellChangeTimes->{{3.82785686368758*^9, 3.8278568680415297`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"acf53bed-9441-4dea-9051-c2a78411c522"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"Range", "[", "100", "]"}]}]], "Input",
 CellChangeTimes->{{3.827857236892103*^9, 3.8278572394425983`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"6879f80f-8584-4863-ad1d-2b80dd7f9b23"],

Cell[BoxData[\
"93326215443944152681699238856266700490715968264381621468592963895217599993229\
915608941463976156518286253697920827223758251185210916864000000000000000000000\
000"], "Output",
 CellChangeTimes->{3.827857239846719*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"81e8af60-0ed6-4804-a994-c1d83200ac80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "@@@", 
  RowBox[{"Tuples", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8278571170588017`*^9, 3.8278571569422073`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"47a023d7-2b59-4a7f-ad74-64d0082a30bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "a"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"b", ",", "a"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"b", ",", "b"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8278571338606358`*^9, 3.827857157181869*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"e86496cb-9bc5-48c9-aef8-38e6a50c02fc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["34. Associations", "Section",
 CellChangeTimes->{{3.8278572433857603`*^9, 
  3.827857246878587*^9}},ExpressionUUID->"f10fd236-5c50-459c-8bd9-\
a8998ff82572"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "@", 
  RowBox[{"KeySort", "@", 
   RowBox[{"Counts", "[", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"3", "^", "100"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.827857593065572*^9, 3.827857661706705*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"f7943f77-a905-45c1-8a8e-6112ffc37075"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7", ",", "9", ",", "9", ",", "5", ",", "1", ",", "5", ",", "4", ",", "7", 
   ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.827857600281622*^9, 3.827857662018435*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"45cc1fe4-80a1-4afd-bcea-534973da2131"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"aiw", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Text\>\"", ",", "\"\<AliceInWonderland\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827857715282795*^9, 3.827857745836154*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"100d73e5-e7d0-4b15-8870-e7cf290f6cd2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"Reverse", "@", 
     RowBox[{"Sort", "[", 
      RowBox[{"Counts", "[", 
       RowBox[{"TextWords", "[", "aiw", "]"}], "]"}], "]"}]}], ",", "10"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.827857813714842*^9, 3.827857860589389*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"8d81a659-8d47-412a-8beb-ec97a6986d0d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"the\"\>", ",", "\<\"and\"\>", ",", "\<\"a\"\>", 
   ",", "\<\"to\"\>", ",", "\<\"she\"\>", ",", "\<\"of\"\>", 
   ",", "\<\"was\"\>", ",", "\<\"Alice\"\>", ",", "\<\"in\"\>", 
   ",", "\<\"it\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.827857820538637*^9, 3.8278578611585503`*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"d6570e79-c2ce-42e5-968a-0574d9e24a1b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["35. Natural Language Understanding", "Section",
 CellChangeTimes->{{3.8279147414862003`*^9, 
  3.8279147452026167`*^9}},ExpressionUUID->"bfe6c418-d04d-4918-bfda-\
6b1d255093ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"$InterpreterTypes", ",", 
   RowBox[{
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"#", ",", "\"\<math\>\"", ",", 
      RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827915371104663*^9, 3.827915373109644*^9}, {
  3.8279154811064157`*^9, 3.827915547097494*^9}, {3.827915599781402*^9, 
  3.827915603654581*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4d784d63-c9b5-41a1-9f7d-8c7a9e35f852"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ComputedFamousMathGame\"\>", 
   ",", "\<\"ComputedFamousMathProblem\"\>", ",", "\<\"ComputedMathWorld\"\>",
    ",", "\<\"FamousMathGame\"\>", ",", "\<\"FamousMathProblem\"\>", 
   ",", "\<\"HeldMathExpression\"\>", ",", "\<\"HeldMathFormula\"\>", 
   ",", "\<\"HeldMathMLExpression\"\>", ",", "\<\"InactiveMathExpression\"\>",
    ",", "\<\"InactiveMathFormula\"\>", 
   ",", "\<\"InactiveMathMLExpression\"\>", ",", "\<\"MathExpression\"\>", 
   ",", "\<\"MathFormula\"\>", ",", "\<\"MathML\"\>", 
   ",", "\<\"MathMLExpression\"\>", ",", "\<\"MathWorld\"\>", 
   ",", "\<\"MathWorldClass\"\>", ",", "\<\"XHTMLMathML\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8279153735975637`*^9, {3.8279155396868467`*^9, 3.827915547612173*^9}, {
   3.8279156006985607`*^9, 3.827915604007099*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"0ce4566c-7265-43c9-a600-aab3cfc30c2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Interpreter", "[", "\"\<SemanticExpression\>\"", "]"}], "[", 
   "\"\<location of the eiffel tower\>\"", "]"}], "//", 
  "GeoGraphics"}]], "Input",
 CellChangeTimes->{{3.8279157444198217`*^9, 3.827915750376614*^9}, {
  3.827915783158613*^9, 3.8279157995566893`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"65eadb88-927f-45e4-bec1-59d9ffffa287"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJzMvet3XNWZ//lbM2/m5fwL80/MmpV3sxarIYt0CAmBkNDkZkII7fQ0Dtck
rElnAjgh/BYG52aT3wC+EMumY+tidLETSVUSUknu6Fa2SiV1W1UlSyXJK7aF
wcZNz2fv76lHW/tUlSRjyGg9qnXq1Dn77L3P3vv57uf6v33rn774nf/pv/23
/7brf+Hji9988v987LFvPv2l/5UvX/7+rkce/v5DOz77/R889PBDj/0f3/qf
OTnNtWf5d8dD5zsPDJU6zw5zUJ9mu7oGj7a+fWD8zMDU5Dj0kf+bnS2MDGdf
fmn3bbfd1tayb36sQ3Q2d7Jayv/2N3vvuedLu3c/x6+vH+s41dV671e+zPEd
d9zOybXLKxBl3n33XZzh4q/efy+fnNy1a+czzzzxk2ef5jwl9PeeWijPcy8P
0l3P/+xHX/vaVy9dLEHFwhQ0WChxL0VR/hfu+nuOqRh3cXvLkYNT47lTp3o4
PnxwP7c88r3vUD6P40qqOv3n/eeyh5cXpvtOtXM7T1ldnqH+0HC2hzPPPP3E
1OTE44/tfPSRh/66WuHkg9/4mmvI7bc/9eQPSnOTywuFocH+HTu+zUmecuQP
ByvzM9Sqen5itZK/8UGlOZULudLrnyn/v/87NH3ovssrs+Gv16+Wpsayfac7
/vPGh//l/6gMzaFRS6Wz1fJZPu2Az2I5xytbmM9DoyPD9AM15HqI18exLhNx
zOPWLpU+JlVXpjRUTmXfyU5028gpLZyhE3ioesOokB/JZHqX5vxPvsJ8qiF0
5pXLs2Hzw6/h+bDtIppMB6onJ488HPYMxLNaW/bf+PDD1ZXqe2tXutuPFCay
/Ko+0ZWUoANeKL2n0cUFdJ06UBdwhgsgDqwnRer58I3oPO2l1Vbb2fGj0MxE
j1V+tVpkdEGVaiGcfaPz/cnxXFdfrptqDM50NZyqDaj73CBECbwpeq+yMq7z
xaUctK2iJiv94S3v/OnQdN4tCAvl88P9HWOlP0UXV1YmIG7heHS+t06Zc9tu
DqUlY2A53z/Sw5t678ocX43qTjSuWb00vel8rEuZTB8viJIp5Erm26Kl/OFw
FjTvyfHZLGOJvmLYzE6P+qEy1ejinoHjI8MZLbPcwvGZoZ7WYwdYyWwI2ZDT
GTp/tjjN9efPtE7/aR90fqo3mjIff6ZvhehkhgHd1XH84NKFkuMUxWlqXmfd
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
e0dbi5UkbwvzkZ/0XA6qPgyIYgjocTOFLDhE+XZtfzFhGXb8AYBQSEZQRw9K
dF5/3p89/dvKyrrdMmhh9VJB96oJitAubKBrrlyeM/elc9nDsr5w4qbZJFZb
JOLgq6RA1JyaAHJC2RHl0zRLYWOSkLRSPtq8RAeNlMgUwkMtoWqoZDHZgh3c
BAKJtDbgBCBHWjtzLvsWq0GEPQAkZh/yXz4FrQvFdumcclTJiaZz4Oi0t6g3
kN+oJnVFJU2gSKSgkaO3Mb5Zn85Y1eM1ienXhYJ2bCap9MBE596x028yf0Nd
TF2mWZdZ012RE/R6Apq2r16YaOUaGZ65OCRegRLJQCQGUZ8rBZ5OWidEIMoz
hcQCx7x+wqYtldahCBRKQsJXsNY4lnXofApRecl2wjhsil3G1HDgM0LXNalF
E7aeXtJhuKCLusZy8sCVES8IR8jKdi4RX77lFIUfEbtR3AxFSDD9kXOX8Fbo
iShjdmTh3V+Mn34DEHITiXS1daXMSKAaWqhy3NZzRAIHaUBCECLDUUlCvvPt
B0JJiHJwf+Hzn3vgga9y5ot3fx4wwGUCIVpLaZqMRt587dWnnnqC87wgs58f
7u+As0sLA/bggs/ecTvPkuMwq1mIAWQTwuO++fUHIB5nmMRsQgznUCyVuYUg
JJKBhAao/BRGY2uuo0wPy/QZiQ2TzH3leTgpsAE+yyfPBVHIvNlIkTrCV2z7
Jt2VsIacC5YubxpLLl+XRtr2gFIaYSo7rzLtV8FmjWdGjoEQRXShLdlMH4/+
j6leaLk8PjBTgZuXlzdO0pWitT3h44vDpUN/t4HFHPo7TgKonJjiUkkgxPLp
OH3W1FvnT/2skn9HIpQrmW9fPd9x3SdrCJm1c7n13i5hahWTMDjPX8/cXTbh
wT4pbngicGWw4ODTycnpCR8GJ5zpIBC5+4njO/tGHxTRDG8Ghg6H7Gl1ecbu
FQ6RpEKka8K8Mzz9imvvLLVSql8JcOoqWcz4FtThnGdrzu+SCEkpppx6bBKT
ZG0pE4W6YpBGUcot4oouNgZx3adIg7zfXGaopnzZLghJX6/R6KwuO/dpRw8n
hWku9v3wvYqziP7w6jKbuNaW/VDH8dfCzGXasMsBSh4T7n3VmLVKbhRVvnnN
G5mL2Da/GiSplzWOQtIx9pQXxokdNkK+pY1mEoYBOBD8kBjk3WJ7k4o1X46Y
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
PG+ZQAgbyRRKEfyQRsIHoa8l44kunhAaPPO1s5nC4sloIowxOjLosEQ+OxrA
spiY506x//e/7SzP9Cc6kPUsL8CPmUozTEQy88RSpppFfUxaDho52dcu9KjA
ONKEmCfy+HFmYJ4pMKPGLFGvxkjj2qumYavMT8auu9p+/5TUJop4f466IvN8
tISQ0Sy8mIMQEAhDUatXerhneG0I2fO9IBCZjCeXph2BjCxUE+wdb0gL0SSB
dPyYpU1e0CdzckuEr/cO+LEeCFmvDf7TtHCdzXAxSjTDHa3HS0m0NC3bLBAi
3WlMfE1q8A1ksewUi4tlZ5LkX+GWRpn4Bv3FcS2QVl5yhBGLWwjEAneEv2IM
xr13tO3a33uaSoRAZNMBunAYMIBZiKYWunaDB6SRYCewxByrp4rMtCAQ+W77
DKMWxrYzphcOEAjhrjXRteztBpa40pQ4sYVFxANXhsyd+IFsTH6Y4efqWZld
mDRiiYNoPjNq61wmPU9i6/8y2qulBnuZtYwLOAWW1MwfqAKdwhssupFQsb5d
8eethwMI0dI4ZkEwfdEArarMxWCqEN/41bC49sifdFEDql2s7u6ZbJu4IBWW
DhZ5UvM/zfZ4p150a1KGWDDJMI2LBeG+IS7Z2V9bOTNV/W1C+qIUOl5oqg3b
n+VadM54qX/qyNYYVPgTEdFU/tGTJ3YgtRfKRTrq3MDLoA7O4pt+qJWLRknK
QMiZ3pe5KRAIOy0szJG93KD63CR4wHtgCVCBeLl0hSQyyJB/PTwdj0DUDreR
xY84z8yRDoTKqXN1LQeePomjqDkGK4Y1r1brAh7uxuJgw4tQihIrB+7Be8Ee
XtTmjUHI+ynKeh/85UsrJ7c2HGQO35kcxsygGCCNd3C8J3jAvceLSqcn99j8
hbJ+W1O/Lq1kdqvr6D3c8sKsfvZSkTJqCv8x1zq2nJkpcWKLuFQrPGtT1Hzn
248P9x0SLaSrs/3JJ5+g7Nn1HPCDsvNFW6mFiajec/zYM888VQkBVJ0nr2nK
w7Zfr/KeQcjIzGGByQ85QkhS5i4VYgRSK48jL+STe/VKvfvY7vjgyQtDerKj
UTyQhImaPGIKdbKeldCPU7rkTTCx2I21iGtYE2GoKNhFJXJ5kyUiD2DyF5LZ
IgZFDWrK8rSCgcTXysOPfLNXQupqBS6uh9Do+dXH6lrNRmCaHWIOpJNNNk0V
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
j77+2iFgA4ckeonuV+QFajtDMUQx3j4zbnEiifgOESUUoQjX1SiCuJqSVGSY
xsPaapPw0uGeK4cTVSNS0K1EnqK5lTrnG0lqHpXxyeJw2wGPsJZnbOLyGq7a
gFYqvp2EbWXwGS2fpdRiucrZszle9zwqbZXcXD1n3Oefftzd+mpyH//h2GO6
172G4tcwebMahbfIjWEr96S/rQhybFNheeCZpaM3Lhy7/cKZfbFJwuWsVNMu
1hntWBXgWOVvRiNX1pcEQtTbhoaYjB4m3wj3VHdcuXcz//J2WCbZAC0YZGAG
cMuTPQmYcbhXYIM67FQsjHc7Tp0Tj0/79LKDkK0QyPJaaSNlxuUZKT3iwqwL
JgEkfGj2+qW8GkQht/wLDpF2AqigUBq+5fsq9g8qmP6q6zU9cvJlzaAaOYTI
jiOXFRoBhwjJrNeqoAsm7Uq5BPagWTvdmtGwfPHF5wIhHA72UOwM2MNjf+bP
jsYgBClcra9mRoO1KsJCr+HkSNdI2wGmd1vP5sQWLwtCYbLjBaYyRJsGMB8O
842UIbrj9ZQLPUY4GViiIJFN+o2UTmQrc4/QQuwKYiEkM1OiI1O0ci3NBSMI
4ak3uAokbOyJat7jlYpQXGJpWlnU4QppkQVHi3S3QUgxgpjmYQZ4gBm4EAEG
wSc2br3j+9wFP5DrEvs9x/Iy8i/ghDf9pRf3sZOpVcYIQI7xcU0lYSkcQgU6
w35ACCJbXqbni6e/+PwT2nn/4szydIc5KvTsK/Ua1NSd5aeWk4r/1TC6ekQZ
cDYS6c70GaVYNGu57kizk0mQwK8eG09lIWIQ6BKDQLfdg+Va4M2QcwvPoWjr
hId5FEGJIBBlshPwWzRSjgPCHpTxtv0KUPKMgX536oE+d2F1PH4wXOY2zAXj
RVlIJLMsV3ilnF+/88q7/6d0KdOTA6ys8+wWtf4HLr5zQv6iIJbaepm1uZlj
uo868l8utkoNwl8UbXPXWLlLEwIUQURemDi1DY5yODEaaJcydbQnjiDO06+p
yEGiAQjpPyq9ClBHktoPyUQbaQ/DKISJfG/oTlmNUqsEZFtyYGNq9tSJZbzn
IMiNv3pnLL7+zaKpDY1Vtdgpb1sHIQx10JemeV5mR5ke8yAEDGbLmcA/Fmfs
VZIaHUtnlqqz+T5vU+R2Yk/LzBRjtRFUG8xqy6UOGdQ8JS4TKeAkYZvJNeV9
/qZIQ0QlKhkEopjcTZWXzHVwbXWZwoa7hViGoOBAkkcOcSjr38Ctkcce7l6y
HpljRIs9Zsh/w9pSiQwx6ykRa6Y1TxPDlAtsaAh1lhZKna1HmFQ9jHctmBWk
G4ldxLkLnIXKGbL3GIzF/Wc8ASFuJnB/1E3r4sszGfePynoxA0LMxWK5B3Ai
OOEKEBWtFAAJEiIe4MxbJiWGRKqbWgRUZJphBWcmtrEOd1UVVpE+xENmZJcB
rTEsH119F3QxMz0hHFINcawcBer47NNPhE9migNSmPA9XeiXvytT+vHmI9VK
abnUXp74o0BITCPmk7O5FkyOacyBH8q4mqYhSBn5ImOl1PugkbHeQxmWs79N
H1IPfh3eHzGox+SctRA4o9CYeHmrx2ArNYj5gi4mlCCKyWXmkQ6En7Uo+Zrj
EIWN8I3sO19d1X5ZXjR0X3ycsGl5Cl13ZEVYv/d+VaiD3spMoJ+IEgAAwyLG
e1kuLKvIyjn5cH71eV3bZrj5pI6k3rlzJ/UVyspPQIWjFGlX3ISh/VQwLoiQ
kZD67JQDBg0uD/zqo0q3v1Yf/udbyqNHmWt5YOnMT8qDh1yzrVS5EuuiFjGj
Uiq5MiSuefdgQJHMQzqXRXmwqh3qlNeoq8QZBxnrB3pOUgQ/EhVc+pgBQpSt
2B8D+pb05C1DLJwojn8xjPHXamwy23AFSRtB2ElxsZUE98L0JY8CUQFvubRc
NiFiFsPuo3n7CwtzCzIFJq2XJUalLXn54PNAi+JAq/w2TSrNT2lnV3url9W6
MVkN9Hby1+OP/Zx/jzcdznBbqc3Ys0Wa2BhuJe4uISufqNVkoDH2j0YgJJC9
bMIM0vN7kK9joXjQ4v6oHYtgDg6B+XGrbU4zl8GEOpdbjmaWzG41u7jobl3g
kFqgeTH33d4NWvj3B3YDVJBT3VMLbBQulMcmhxm9+NmjbMQchVhmz9gbFsKj
IhbWQ2K0J5sRgmAGnRGBGIUTqXDgeNtzpi/abCnjFoOx77j1Zm4i1wU+4QJ3
774r7kkMRWif14EKgMm8WfB6sBCXzOGxAkq+THkdF0Jz/75nb7n5ezfs2HH7
bbfQpbXeR4RDLhaaG+IQV03wbx4D/M2AJJ12ysbl/teqkttmgog9Iiaji4gb
8eQIheHujH9ppiwGjBqH8botBnBCyx1tTaxBMl4fKrFDbB5ZMaqbMMZaMSYl
y/ug5jUhFFlnRLUaIxB+Dg8NgBOCV8+EEYLZ6m+Od7Y0VUhZPefrES18Pdw1
k/UBhwwPdg33nby8XBK2EQiRGkTOrhS5grhfhzOEWJbA05YLjxnYrDDhLzYo
DkgkN42YpbLwxRefU4RkTpxo4eXdCgMgCEDI8wsWF2zL0tEhmUgqgSOLhbOx
TQZPuYwxWvYa5UVSsOo2OKQWIq3cZB/bcVya19P8L4U0tatrQphwBEUqwTC0
FLxx8pjKy1yl4joQEAUVFAvz2lCi0Khv5v1wiwzbIalugjeqaXCux9t6/VpK
U1ZNOdtjd4Wbvvsd93kAYIM92LN//7PShIhpVv8qPU0GhCBA5cDJgTqKwt0H
QgjeSMqrNXMCrJv2TPWfeWavCtVMB9txELDx0YXjpqJcmDP+rqEmMD4L1YmJ
41MnHweNAEVMIBZOVgPriAJzpOQx0f+WuSvzVBhn2uyofS+Oc6diYwd9iLUf
Zqkxz2qbxrmieDXKT1lk5AjK4+cWwPG2/e6Y5IjIGi+cFMGvLIaGXlJDXqwK
i4HHJm+QsN8NIg0VILEoNOqPEK5raeZ4m7a2s08s9A63HUgUIJEaRDxdwah0
cGL0sHKzmrFmvEWOqSf/8GJ366vMcsAMhk7qEcVuIETAG0zF+/f9iseDJT+I
hX85UCBkU2jPellEYdqZRL5vTnkT/5wZTBQaTqeWYYL9WhAiohIfNyCQaEny
upe8AkTgoSECcTjkbF2KR0bcgzocgQiEgEyMd3RligogPadsNft+sBG4vw1w
i/F8co8lmj/c9DuQiSCEisXXVM9xF3gXxPXtIAQEAmTVlQpyeDfYUOoWQA4A
YyN1iwKFIqcd9tMHbrT8mrjX9Ep0rNxcv3BjWF1blMaJn7yzDz/8EBciVWEl
Tazs9+jKujHD8y0+Ok1NzD8825SnfrnnW4EkVi1LDaJgUolU8WvxraUKI8PG
jx+4n+22//ni6olbQ5rv3cxaqzppKmQBCfJlZSNji2kojjNajuu01CAmPIQn
hhyxIWa9kVcq95FpRx4dZoy7jnOVJgcAG6COtdVlrst9Y5R0LyZBjUvGV9av
bm5xUfqZPNIAVOR1IA3VICrADOkTXDtRKSeWF3l9yENSyhAEroJ5+VZ6O8Ww
iF1EypBhJaDv7TAQMtjFhjxUZXmpB75W6UMo5p0eglwAD8zV1Oft8GS467Vq
jeGamdJOTeZatbEtkSraECETvql8rGesqbCyjS5C2IM38bNPP1ZwBEMaYwnN
IYGLKZewIJUakx0vWJrLVD2iGOG4KJa2a+oCwMBBiOCE0njVI5fXd6qDrmN3
W4xy74pFIQYhMQ6RrUQKELCEXEE45I3+t8VI5m6o9WBtkWYjEWFhgW9alIUF
BefGqpL08dhEgiqXVHlK6KXmjjA5aFvqC8V9sAeMIa4t14Rop4MQRL+YweZX
C6WpohxIQALUB28AS4Q0QBdffP4Jz6E8P40g4vJsrV5WfRqkPiDEUi1UFiZH
uixJXOeRmZOPmOPiSVvs8A221FCPL3ZPndq7EMVgci2CRvJLAXiYQ2AEPks9
L4vmxXO+AL2caoapQC5h1ZA2KA9CaiERoYVpd254Wo60HeCWed5eNjQBJllg
0scMEK6wODEoZkqsQIvBSdCwJSTtng4sow+J3STCa1i+lmQJ35KUkkHImGBq
/Q8sl4xj1gkf2HD+BwchcQGB8OodeHGffrJk5vYhXLraW90xFTFq+QdTELJR
AghRtnrGRP6ueVXPBmYol1itSxlSnunPgzGLgq9kA1gQjhcmTukuSBMS61jM
zBSNYcZXZDR4QsrYkYEcmb4JNrjjSu8I69xNOhBK70zZyc/Z6J5aKHa/4haZ
i++cSPKJRLYnIJyxVG22TClNIbd45vwFegheuvrBe7xHc+XZlfUVSnH5LDDD
FR1GnD43E6I4z3IjaNBC1Xo75Qbs6mKpkXkA6Hmq6l/pDNQ3fO684zaePRGS
AEKEPXiYgUn8NOSZptPlYRAIYQCf/sVjgqNs8zbx/PDAyJzEc2IwdX5KXKwG
zNaLVBYIYSeN8xNYcrK7CeQQx7ZcWV/aE3jsuS6J4BBAdAT4QRk9fPfTTz2m
bgi0MCfwL3X273t2MM1snkcgDVFHfmOrUk0z2sTEIKImyxwrEFKLnDQ4SmoQ
s6JuzfiRKeYb2duhsF/LO7lQoog3XuyX3h9NOxaxGwUpx6USyPBNh9Mo6ta5
yzJF5Kj5Ih2FjC9AiJGpfqCFVJ0yx4S0JhOV8hyTvJQY4Ac2hFI4BOwxvTLM
IyHKEWMkG+vQszo10BLUTVPuQ+LfTLA85KJLBRhwFPiH+ZyHjRPJRSTmA5Fn
iFQlHBvm23nlreOjUCPZYjqnV7ZSGmgnglKug7w1pm9Z7HZWdhGzJ7NKtTg1
3zHWewgZkQCSzR77isVQVh2El3ionLeE+wh4QMQjZGtpDjuZY7xjC6vjjkBU
IY6gCVbvISWX2QpTyRAjHYgwg9QgzspejZLhUkEEGu4IQeEyF9fmaSdWldTT
JLmuA3EQglC+eGq3uCw6OttDfoTiPffeLZjBJdxxx61iMpejKSO8GuYiAyHB
yiMQcu7SpJQbVC7OJdElt9xys/LycGtE6mXApv3Y7NKouDKQLIAQsIdUMbfe
8X1lgXFBwIs21/IAvRoe6Ioz5S0cu41bWVjqe3v+BHeTdZxpvcIh3BRpwDbg
hyXVOqAAK5EGg0Dog/nn9JzMaELMEf2sBcIgIl9tOpRRieulNsq11N4nBPLO
+bJz+S4EOl/HJHJVpUvKKCTFmlh2tyoOSPTYbGTOjZLIZMS03DwkqhCawk5K
ltQQhMQhosAPS7aSrujPFTo30nyk74gnNlVxFbqhC2MIPMul6acABkt+W2sP
tFoS9rCTUTVi6oGu2aJ5+yMNpycH1GcJ0zzwyOyRMkT+mfk6NMJJ8xoM57Lg
8FgbY8ag9bJDi8yBCily9waBgRjsxQjEAnCCuybjxiiBAShUkzcIxfQYKYss
CIT9Whm5J7AlxwnWB3cENbKUEPIToywLR01zJVOm0+AIIBx/gUzOV5k6VpSD
kmFPUrUOdClGHoDKHdmAH2kZ62nm1nS3Wj5BRSjrwkWeA5IU9mAQtAFIoM0b
b9xxy803/yRYaRHxlqUxELoCNmjh2zt33n//D6h8065dbNAl4CiHVEPeGepT
QSMPCDHCq/WKgxCeJf4F+YBj2dP6ZpPkl6wYgBD2yAf+kZ8/BMAQGrlYaH71
l3ew/5EHvnf3vXfdtOs7XD7794QsPA8++NNbbv4eh2RMIQ2LxHS1Nt1QZG+l
BpEDbawJyRhivGasCWHkP7x6hUU3paOt6TpPJ/RimGq4O+/FGkOjEISehCpv
RY2iwOf1RjYX+aluQwmST13nxpfR2b7Cxd7hEFgtawt/gT1kWRAIqV1ekBJD
dB/SgQBROGqsMDS/VpCdheKLI2N9DyEwII3CSPf82VEOmS70K+WcuZgOdgE/
3C2W8/IvNZl2BFQcfuij+nUzdVk/2UOF9rajPFd6fyfKf90GhCRKht4OpYzh
Meg61TQ61xcN1KBPLPXguaH173zhJJIiqD1/m+EicO8RSw0508dweb6zM6MT
4IGMA2qMiGoRP1gcFxMrVbYKzkXw6ZKr9VUr5udWfKP/bfaAfOTdIaOD44rV
PycBv3L/cL+CehoXFrvTiIxdjGfsRywiyqdO7VVkR8ubzaJEEPEpP5XfjZrc
a+pYCHywxdCCeC1EKqI8xecumZnj2KnfAydoQY3Ij0Jufp99+jGNdHa0Kpyc
e9Q+8CYIROhIniH8Cyrgp7Owmric62XwbY6NcuSpsMcoR3oPmfdp6vYZqz6c
Nwms4pYRZZfgWtwT9YvPP/HULeaM2mZUDMqGA1jas+dRCtciS4q8TF3pYY/o
QuJfWurdeIS8D9SRG6pASD11D3ME2xCE+ONkQ5HzCWnoECKIogWpnENkmt8K
h1A+nHy0PPxExsSPGEWqOuuU1CCxhQLxLYb2WDmgPXJXKK+Mvz13QjdFIW/0
B0Ep6aYQVPF/Ist6Tp9CeNlTpHTJW4OQakStBrTIXHsmRNctMhZOInPMUFMG
QiSQKRdXQlcpyFzplK6lIZN5TQhPSEzzjnxXP98srqgaG0q5IgQyuTAilYjQ
kWtCKmd+KhAihGBE+uPtHD4aokISTw+LqhuWj4TWtpPDSeYgW+sFY1a9fk5Z
Xcz9tf+o6VJ6mtnYiMoJjYtEZbztOaY4xke2MNmnADYGSML94nS2NunpAoeA
HxiNb4UkNfwFrth107erIRvvgbDiMANlACEvH3xe6AUIwc0VQOIFZ/tbIfEN
fQZj0A7IJNBtjUo74SAEiPKtQCNMBRq5885bl5YQTOO9p09RKsZKtAIOuf/+
+zai7zst/G3XTTsfvPfbl3p+uFQ4ccOOHdKHBOD0LC3QQzbGDPHOOM1IQ6E/
u7SxRrh+NYgH58rvImN28UZEYOL7eczAbyAQ2dQawqF8kYn/+t1rqylXW8O/
PGD5+hGISv3yOUcgHggztzYyOW+UnlSQWkN+p2wo/wuYIdBMmYQSwJBzqbZd
kaIAGZpKIms6X0q80ztfsnw3gZV0vWZRjQAG9rgGAyxBI2rQjTWKnVleK8kx
T8oQprXB4N0ndxRmKuWaUbDM+OK8JPLU8jv1KLy0oRVjIGQhVJQlkxtCJPHy
XR2PjTLCIRmnjrWFSWRHqedlhIWvZGNjjYJrQF/UZADHikPeQh4X1UJyFsMt
KU/I6RlbJscVPLVuQzWInEulZJAa5PTsBaS2OEjrgS9UcEKhqY58JLAcAtXT
aFzXw1RDRIzsMpMjXXMtD4x1GBW2TB4XevbJoqGkLdRJwfMUPy2J6tUVdy8R
26qYRtQ42GPv04/v3/+ssgEa3/viOC2HReUQIr4S/DndcwY0KFdeg4XrRd3i
Kx9Y4VhbGYWI40oghFSUR8/AMW5EHopUm/+JznODLElQIIYCX8kJZANYFk5y
19xqr+QsMeE/FwvWSh29Pu5qfaUagsHZSTXBqvCsnjMVR5jPaU2BMPGj6D6o
OpEAj98CGWLqacbkahQUs5U+xO5gKitdLmccJ/JFkZ7S8XIHkVbcKSauhmJ6
w0KxODbWbv6fSCJblY+3uz9VeSYRc/I62MpoIoMRkMCX2yzn1zbHHMVu/FrF
y22SDSaEzrYmXn86wCXkfXFjajVHBVJr5KNjkpJSx5d6fuvtUF8XXm0Uq6tl
AqW79dXPP/1Yqh7GMMZ++nbTSayfoXFd0Xp1I40OxQgSZ8puWaNjIEDngmN4
bcDTICC1nzAtb3ZZEdGldKrgBE4kTCsHGLHZO6tS5AV3MGh6TaMldYpOIT25
uh1bpmiQeyGdJxWQ6VKJgDG4a6AIfkplLQL5402HBUKob05fAVF8K+QLlgUH
uHLLzTcDKkRfz9vKrPKTNL8kh+sQxl87qUz5dvBPW1tdlu+H2gc/mCmnbgFH
oBFAyA/uu4f3nX//2407gCI37/o2HX7k5w/JoqRLkHuGjFOiHBFOECBJ34Vg
nqgWrxN+uMYj1jMAQgJ7Z9YQo5JhjEdy6Y0A+DVsPGMnEsjJG5W2KbUQIpFx
TYnVIN7zPMzI8JLF4OTKB2XXhChCVmX18szIlL1BojAVVbtvy6NDmhCKx+cK
M0iLIocQAQnZdIYDJ4yxf7x1pDJ6FJxgC+Q0Od1XXxpJ+1dffWlE8SPdHjij
YGEZbhzq0AdAi6hCutqbqpUNRQH7pSQxB4zZjs7pxJmqcLEX8eEajIyyWoUL
LM4NWCa7gX6pT7v7mmJ9hbwmHIfkkYO+eYwRynmKeAckCGtjRU6Ti+V7ovL+
xZngImhafRAIK+WMMqQh0RniTCCkWl+Vt4aCYuZXC6nG4KJDkdi84sBDOMQh
RwxRuHDqh3C20ZmTj4hjdqLvTcqFrj0KdI2ghfl2Kg2u1IzyPwEheAUneKdx
mSriKBJLatzbISkjrQg/TXVzeXaLR9ruL/9qSM13tF5211laYJbom/jj/EIi
MjQLVQonlHNWCMSwRxQIw7GOKlkF86a4xQSg6EIQjGEx+D0nLW4lzZmC3AGH
0Cb/KjKXbVNsFk76s9HR2S4zmRdAnatfpAPJPGbCn9qWejnvBJIvLuilZIj1
DxnsYR6PqclGa3kRqhvJyakjH5ePi58zj0OoP1doMyE13hv4oEYRZ0hJIySP
uMIsZGZrt9gYloidYzlkHZICBDBpqrC2JgrzLV1CsiNA3erhH1FdBWKWVl5q
ZfARBOLypXnwkFsXzUIODXGIbBwe3utgqWF90bvVUkdfpYG4ZjTanXIc9eJ5
bTQ4m0BRACG1wMfiJpjJhQ1AAjjhWsoDh9w3lbE1BrahJtCCo68kO3DQL2VU
TxTpahhYM7j0dgLeNnl6pEoP+nmuYJ6l7ltbS916a5EtzHf6hSjMDYzBk//0
Lx4TBjjw4j5G4557d+/efZcg5eGm38kKI9ACnHACWAVPsZOuAkL4KTBz5x23
KRUygIT6FDmBmJ/Y3MyTex6lmtZEXBrSxxyNOqh5hIII/s53d91+2y2r5j2y
RNm9+85bbv7eanmSowAwxdOvFNtf6GhrEqGZAadDv6EardH5wcCcL7uJmFRj
TBLDkq30JBl4ICWDtB+abDOYZH2zp2ttc7yw0/vwtNdy/rG+vbRQUg5f85e7
br8RL9swxMrMF4MQgMf5S2PSgTQEIfzlSeucPcwLP0UyLKWHPL1BIMIYstcE
yiYzMQgYeJittr1Bi/kNzi20Jr9TM52MHgV1yOzCLCEn0pCWYoh1onQpis3x
GGHPfSPOearRAY5iBl6c3ZDFnswOaM3CfwOEpOymfGf01V7M+Xaub6TUzkSk
5S33S64mXuIJJ4YQeXuK1CNmeIqjfYMpymKBB183HNJrCx9mjDi4Ji4NbTH1
yKM1sxNpjkQTQZmMEYyPUtRV1ouCH3wrW7eUISJIl57HQUgtkLUiK017c/IR
L3MtD6hMndobpqwOOXxenDwaww/PW8e5pMbnr+A3OKboVyd7V9G15B04uSMu
UziXTNJBx3JRN1TM+eNL/RkoIlOR+9ByUcsDv+JZtcC0gWMZeSHIwV2gcfcJ
2bAalEsOQrjYaqDzotpfiq3VuV71jUex61STrCQ8Yx1tR50qxK+ISb6vq0WJ
XXzlO9J2gDtlNs3QTx6DDSeQiMLXvZ2rUSTpknnoj4n0TDqxjPbDb2Vtc/Y6
2WW2AQD8K8ONRoBXScEyNssFBJIo/yOopvgFW4YPNWkSRrizWJ4t9ifc7DP9
bnEwsqyQzTbuQEaoVQK1LzLROKgXJhk9pZjhp/i43LgwPTkgJ0mmXxlTPAdN
/AEQKgsG0GW41FEcSFxnJffVAS3nt7I6KfSD+rXNccENlSEaBFcI8LJ4fkA6
4I43sQevWNQy+goZYmITjCMQLyCEjZsyvF+oxvEM42+xt5EmxEdeZqbhtgPG
3jbbK9zr/h7Se4z3HARY+rFSdGSKTDzxfRRQUQe4doEQ6eJADjLHcEOBE2w/
/tjPWXTI/YPxcU2IdCNP/XIP2w8//JAQhXxZhWQ4XL7K8nGVZ9Fzzz5pfmLV
WRlugCKAExr/15/95EqdGa+swrYMQHffe9f+fc9KQ8LG6tkOOawe3L9XfiAg
FibMH9x3z86dOznkwQd/Ktd6GnFLhPwlnH9VFB8qDVUlMTKppWloJOLlhqpD
qsEtcyxQ3+RBhfQk0opo4WOpTIa7G4IEJf+Va25YWibjcP0IJKZvbfiv+8nk
dSANQUj98jkHCRk1iIS+KD6UJ04sYUEFUc2AEIpibBURI2WIZ5lRU8oUI2rT
9Vp1utDP2rO+VAQw8FelXOpu/31Xe9P82VHdBYXMOJ1I3JQ26A/AQxYZGoxx
QnvbUYEQo3Bf7mkqJCCEQWBdHIOQvFjXFLSwOi7aKM1dnIX1eAZjxKu/PPzI
q1nYQGzJe4RXUmRZ4BBnzZL3iBKd+FFal2WMR/HPzL/1KE0MGwIh7pLKHXcE
4kUqEYEHaQyM7qbjBWAG0IIlubgspIJISsjup4gevk0BEtLYeTtuYXnv/apA
CLLJc9XJlKAcebIW0QizCht5EOJKBkQ8jbx/cUYyN4lqWeo/PlFGiOeTGi9c
mjANxqrddJGPTZ18nDZLU0Xk/vhitzkG18uiXLMnuXCC28GDtAmczPRxdex3
543xtv08w3L8MM7/oAzhhlKqKTXH6to0212trzhhSDAWjBmFb3ANcgTCTX9z
eAoQxSPHfksTHKnluQv5SBl/tKRFHysOcSHKoVyNUvxIjZaFJZEc2cY3db5a
iAkiZAjo7mtGToFAWGu7G2R5+IkEpwVNvkzn1ZDzqzzeAvyQxKQFiWlRqqZO
tgeRv3kljEWvBDdIGrRXrzexWDn2yMeVyCYlkcrT2z9maARBD96Qm6vfiM+D
MopvIA1ymfcxMVv0H3WzxTY54kXfQWcsM2/qOeMDmLfFSDMgQUzLojC9Fhxs
WIvRwrlCpyMQmhV1SeamADzAIQpUycMPFUY1JqfVU6QI3/XAB5I4M6edqRjv
7tHY4BIXYQ9z85jpF2uZDpTTcow9vKtSgziM5I5MLPTqQMZqZrzX4q97zf1G
3C9ifVFM0+uvHQJ7gEwAG2uBLIvRA5bwGHDjGEYq7959F3WAoIIxLKCEGQz2
b6aOUYg3h3B22ueQn/z4h/fcu/vJJ5+Q5HWhaThkfQl4c//999155600yDY7
ed/L463P/nLvD+6+mdL63G2rFu1ra7Snn3ps9+47abCro5Vjt9I2SBxLQ2Lm
m4A9jLQ/BSSZogoxpbz0J96gAlLy7qC1lDvdedcbOoSI1iP2H+MyzwYFBd+Z
C4mLhoh5+8OrS8YGv22inK18Qt6p/un8pbE8CGGKdrHu+pCMoAcJDIeQecCA
onER/R+8V3X/VaoJhHD2DLV7ZluwAewhVrHlUmKynBtukslm+fL0lQ/KIgkR
FUl8bJ61VYRmnlmGjTD3zsehMYAQLtxByMKapV3T5dfSLGyxBLdkaqlugScf
eRSTmFl44GbEEk84W2nCG+Icy6ka1CNAjjw7a+w9ouSGDdUgDlFk1PNLEEUq
clkcF6JIfbXVIn3SYJYVRyCyg8h5Q0aHqVN7KQIerPrNbJQCD/CSLC/0WUl8
HNinjVxU+zKyOCxJfJjXzUpCHT2r4BP+kqotYBI7RCRjsTnmWsg409Fm2TpM
7xro1AQRLclgddBzCPqz7TFN8hUpJHw4C3T+o0q3UswwvFIOiMMfEMXEK6OS
LEpxAWxcnDzKtymaokRO9HkhjWFxhKDT2QMTBctwlJxUTUAPvu7TPsgK+GTA
eKkPBOL6FksXG9rMRMroiaoE3gOBwOLcAJdZTXN9xo9frAbRgQ3tL/mdLnRU
kHEIlFLH3oSJImVlZ8UNVkHAmQ5kdUVJ4ZUy3nmiuGT3RLXRDk6n7txobpND
TTppULROyjlBPifs9KhYDnGHFmt/M4gCTriBgy55DLIwCejF8nC1NclwozTB
fmssU16wspkPSYj+2MoWYyBkvF2+qXlzUuYoXg3hosSqEigOpEPjMdbSpjjQ
6phT4TANPXPEzmEBs5EJJnYRYZt2Yo44Z5h3SlIRLDOMIr135BMXy5lY6hhu
O6Cj8s+Gs6PE7sfsZFRjNYgUIPOVxF1E1B9SVgjDyK9Djq+1QPohJYbJyiEj
krIIi4DW4o9CxeV7TLV//u63AQNqRGdUnj6QjFQu+ksbwfB6NkYgjhnYaQhh
piiBy55i+wsLQ4fPF8+s9T5ibCEnbpWmVBVUMgqEhtYWUyYvlDzE1fGGpk0v
2iOzzv/P2ts4x1Vdab//1vwBmSIZ8k6GwEDCQG4loWACl1RNwjdk7r1JyGsH
hnqD7dwhNlOZWDYgIb3Rp62WWkHftFoSsT5sS2p5kFrqWDJOAQlOMI7vfdb+
nbO0e5+W7CSj2tV1dPr0Ofvs87GevdazngVpbT8Tj6cliaEAMEiN0ShpwXEC
xA+wTfIrK02uF/KqSX9vhxg963Vqwhuytp9eq8fpKlqv7h0cvsHTUgQhB5BR
3bInQZkYRQSFkKW52crC/HQ85QcG4CEBh3isRFiiuCsCKFR40Z+wRz6v/LHv
0Bu5wEUY40EZmCEmlTbS39jacCLrbkiN0c8pZodsiIOQ5dpsESfEUYxGrsjR
CAxV8i7RfrlpmdftuhXTgEhzBdjktV+M0dSb683pphLUIQ2zyGVV01tRQAUu
axGE5DWmZ0Nh08ngO6ohD3JmwYrDyujjBnljejXEYprcIDG1A78H7o4MeAx2
atZ/sf9ZtdWRoxZtqbydSIYSWKmH3BlASF76dtMV4LWN+ibQKzuLU8KxR85W
veQRHG38s7ajZJGgBAI9WD/Rq5vYym547oAuOkf4qMtbFaBIMTRD06HtKe58
Rn2DGkqGtYadEQaBqO1FYc4+ulH+0VpeUctIvJ82CRrrlsBDEngCx7lGBnTX
h8p5ASm9OfmVzlQHXa50+oUmEKPeWsZ37xFfrwVLR82vss/WtZ78XC++zDBy
dvhGKB/ZkhDi4ZjE0tWbSZseCqnnRFPZcZfDAodcHn/GjObC8E5Qa0eTM27F
aikLFy7Ob4zKIshS9Pd0wAuVFaZqLZV5s84nZIlQMQFWKvNo46JszjqpFX91
/ENAVEsfCykbwiSmqR4m3TZtr7xdX7SwWggHj+nb/XRRcMugtpoMXbplHouh
J+SLMZjOFwIqZGBsoiPprRt63CCxNoiDQwchQkfCHg5CXDFMu62HXGkBjyZN
j6iZ06PnFe3hZii0ZwI+zTGXOIPJZdn4Cs156grFfU44zzFoSUJvLX+i4Z0Z
6x/oPqU+F9EIMZTP33GH7iWhEa6FluP5i/6N91nOp/D7oQVdIDeguR/p1fqp
v80S+UeP++v99oMXcbSFNFjvQ/FuCQIsaXGEmAHikIMSwLFHQr8tnelmcGCl
Cg/givEtiz3Xa7PeyGblRuD/aCUBHhn8+GgFKBUjkJbjAGWXr24HhAA8ik4G
liGaejdCwGs2t6TL+D0SZ4gplAY8A7wp4pn5yjASZNpY2GMlz5EhpTeujqed
UJDXHSy+ng5oe5J2BTl04lS4q4wP7BZSY2IQMrWWUklj94VzL83VLyNSHoaP
KkNDmXgTMQvSkUUwkNw5sds8OZxrsXowpZ6nn6ytTaXskXdOEKxxXVYTHomC
NaRF7OZ+MDUtc7LzG+ctfXVi9K2x2ddHaxfqW7g7yFpt7K6CPfaestP3wf3Q
8mz3C6bJWR6GUNqy5UySPdeHLzjtBGQCs0hwaHptAgV42BqQGeCpegRHdlyQ
I5b80vhn1XVDWeeYr8L55jV8N4VzdAid9X73PKmyOjsBKp0vMunwcwiQsRwm
TTZDkcUXALOUmf5nhUaExNRbYkMwQBohQdvBgy6QfrIbGGK6/UJNis3+jtec
WCsQ4mEdMmKWajUuujtA5gaPQf9wDTSdMkEZIxEFJcN6VCdXl7i6VMan5xC3
JQgJL4fWNFRfI3Mmm+L2AneEkx4dhKzkCTuycUPdJ5AX0wzUG0xRoAgWExuq
dx3qlMISsjICIQiAIOXtnclkQ+qWMyKEMNDxs+9+9zu1kGip02fZO+/aXI4K
nB6wn7cHDgNmTodeCeolNwNph3iNoKM6XySHTPYcATO4ytme3WzeMglPWO5J
ruMqFKSdf/LxRlyfLkFfbKnNSgsZMRVPyPSKoY56LjbosESG2EGIIOL0xHFP
vHK/h+G93O+qNQIe+mpm8i12S/RZI0/yTtKAH47u4rsoy/bN4ZBHqRLHWnIV
Wh4iwS1cUMEJHh9zEQRAgmrNxx/9VpcJgbW+rrbnmyO5pjcS8VVyJf+D0ALM
+ZWtKZ5HG7TTX+H1uF16kst6m8DDP1nYWp3Rs0w3iuEM7bZY1KbYHAJhpKwA
SlDkwN+if4WodeJWCDhEXmIds2L73cfrsgJ6Hpe2x5e3K/2Dvzx+6mhvV5vV
aNipnqv/CiFTwRIt+7GSMxWGoTrVTs6q3QMkt0Ig1KeLQzCJz8EBhmejIIsU
xmEZzOA/x1uiRiJM0Q3CrvRmxg2ihd1LWbKbHsCtlYmWHg9XGlk9P0d0xvXn
IaySfROXrtuNWKnqrX6obZyYiliZp5oWcQj3jImJLQ0510KfJO0SF5DpcT9G
kqKbeEWgGiaOC8rVeVymZagF9sgeGmkuxOBKaGTNxHEZ3cZ6yXQMmDKbpsaT
1VFq1Z1ZyDQ9zI5fOa/fFrNTY8UMpuHhRToaqhM2PR2O1qB/eOTltx9m2S55
/u8lIIoRm4PDRC1QRDZxhmhjsFM9L4HnRY3504xMVhunDVnk+nSHUj1XUKnn
+Ts5IjIYDDcDQghBGZKsuSJWhCUALSIjGlLymByEWMgm+EXVH40GShf6FPwg
ycXyaILgqhX7CyK68dWhajAlcY3YMJ7V5tCh87nnq28Ovzv+3lJ14DXc+6yk
POturlaH96YRqsYQBdOnUIqgmt+cGR2iWdcupo40tX2EQRo5HZSUGRrvPTdt
e4pkC296NofGgZC9LAXc0axtZlrZmHITiFuZ0c7PX66OzfXOrIxrAxkvPbOr
U+3jA1ZbxLTQg6C32kR4i1qNtqn2i9PdKKlaxeEgyevLuPf7gjIeP4QcG+qE
9s3OTAi0AEViE5/AMHduCE2R5PtpVF7Qqoj+4RMEmWXv1MOs2E0esGiJQAQ/
MjQYZdz4sOvfsa5XvXifRdmaXVJcC5TKfL1JrNcXUWtfrley6E8gGGuNxir2
VplGXPN7A9Bo8buB1wT8CJE0ck0Y/VzX6Gbg7prcRAEYFEN4NKg747NDMUEl
0aUn04plokhJck0CRRDT83/1htcdRRkjqD52bzRfJv2ldfoiEDKRaYzfwolh
boGQaIZKDyBEcxCrcLRY1msQqHD7OIRXU7weP0aCQxL59wOigYnzhChPFnPM
k3RC0YFbd/LKtuUMXt1Z16Hvv//ez0V/Lx15UbAEqABvJFFFy8bKqR1bU8Va
e7cTi4k9Dy1JFw4ztCzMQM3csXDKngLjP3GGatEBwoHqNVMXETZobG3oFXHd
BUPeOaGFYmfi4AvvVTRCqVmjnmB5K+MDvlst29M90u+EkI3tOeGl6dXfuOIx
ghgY7g8vZZlTbsd3M7/ZrOu3+FfCHnAR9VoDhyR8Em/1tN5TdjhisvHh9pMa
i5vMjeUalI7vqbNGkRpTkgzMAVz0evT0tAp19M9eNNbE7NzPzr4XyCGbGH3t
cKn9kf2wh1vV5lu9qpHHJYIyqls357KCK3BHQDRthAxffBRwYDJOUVBn5Scg
Fm0GK1WW2t3U+pP1H5r+pQZZCGTryiLt6kdZLRuODr1EfeNNyHiyf0CIB57Q
D2nkUvM0S8ee7a8vlYwTEioEaXiREdM+1SVdaK3Xt9ev7epGdTeI7hwuwaXu
BzRosEpcbVtNx+IshEa4l4Rjt4P9whyQkxuLsRshOQr2qfNIsSHHqiEykkm+
MaUB/EKgUugOEDrf0h8S25FidMaNAhQCzYhrZx9LfCAIoq4uDDNbFEIAhBw7
8rIuH3KUJi+5ucb6w4d+lImuP/+cpXbuLj3z9BMvHzmk24l8h+//69MUp9OW
VHWnhK5W6tvJwVOjZ950dXfhDV9GB0zb0PQrYMn3fvCsfstOzD+fEw/2a4AQ
cAUpBrpYWd2u34SqJUEijz8Zvo253hiEZKa82UDAb3eoTGVb7wbVeJvYRAV0
VFpYBXV4Pz1XV3ZcwMPYOBS1CdnW9SC/5lcqRiBUb1ma6gmgfczJvX6tuRl0
ygE5/9YKkecSKHHwpRHxmSGHcLndDRKHh5yxox8u12amV0omQrs5G29TRCDa
IOa6UJ1Ztw11fplp7gTWK2nX+nRF3yS73xXgSZTOD7FvxMSn9sagGGrnlsAT
IhBCMTvsftGVcYDDofgVcZk4nlIsCtPUpf0xicCGYw8v+3L7uh9QXIRA7rzz
zv5eKzQzNtv74Nf/SThkaLp7+8rip9fqenPqXQRrhV/pJzKjQinnL8+oLdcy
yRRLc941nQE4MwcjkF/Xf1WMv7R0X/gGAiFZeOhKLbxkKkUaCSBEPSl6VNSE
EFBct6BJiNfUlwbjlFXfkhRgb55oA2e1HjKFdV+tLU7297SBQFwuVTt31RFS
Y65eqbt8KDLmLd0gMRjgnQ9JPl6pV5MXO+7r7SAJwqfbWogLhxVvmCQQg1Zh
SzfIfthmLaT/4yHRS8YrrmoN0RNMZFtXz9kJI/AIjQiEQOaEm7Fy+r5EsdxE
OEO+Blph+93q+MFAHfg0IiBxKUcgl1z6Iw/NXGJ7jD4ZHOATp44AY+JcJBJh
xud6fl0fcY+KgxaglKf5kGJcz/VdPb6D7DzFrQzGBJ9VvVl+jdQettd+NubN
uBgJp2KC8/rcmw4HKm/WvWu7Fs0J+Bl9s43yjyw/KETTPI72x5B/UQ4kMa6O
l6iDCpIJtgcVViGQGA+DoAAhk9XRPQZIVMPO3CY5bwTGmu+h7kXcCvSkorvb
AQnAg7ZU6RL8+Pidr8UI5MPyA0IgjUAWpaIfJdplXpNCMIYHdO45OHFAQg1c
ByHH2/5dK8kq+vGLz2tZ+6esjF5r2lIr1WSD8H6YBv6uOedteWFWF9dDP3qU
KEAjc8OCuej7evp7OiC7Ot+1Hklw0LyeHbxQd1YYSWDU4nRBstvcO8Ik5yt9
XDJt7OCh+Mgk+bBIfYIfNLYHJORayCMKwSRAUbDE/QkxuQJ1Ml2UPd3UscMe
i1mt7knCBh3jmcS5wdUf6D4FyjKViQimmvZpyNfGoaEGOEGeNNMp3bBEGF0R
fTqE0E84xMzKuEAIgaSkueeN/hSzjyH/9HW1OeEhhi44cIw6Eqywrruw7vNB
lLieJ03nbJA9EJIQLRKcQFiBZzn2GJMzhXBHbOXxCSxtj7fcrT5lzRMuK3cX
fFG4KC2RQ7K3LAy9vlJLEW+VjGB9NTYycEsqSAxCSiGF+djRl9RJQjPvrk2S
eqw3Hupt0G8OH3qRs9DG+vfvTDjuRX2rf/VcfOW+ezTyuTTclw2dHghCtq4s
BLbJKgxSmvs9YvH2681y7r4e10SMXuCdOkM1RiDsWRb8sxt/IhbjO3dnCJ5w
SuDtWrjqkuuhFcGS1gsPqwNIiyBKlsViuk56qbuRwc53a3217ap25REZUzIv
OB8SLVDMUxIrwUOC6KVzFRzDyMaprWxNOSapBEESB7HsrZYn0cAnLMKPg70i
DlGERjKV+HyyYzTL8X40xwRCTOyivvXm8LvTa/AlLml9jEC07E4DEIjFB1sh
EFc9zRRjtvdExhyExHIf8D1Yqbk/1BFHHfgfcGL4TmDdLK8syXCrkUWi0eNX
AW9c4rrQE63HaeCFbhk67RDCqmOksMElUFDi9WKuGtT/qplTZalEggxyqe8H
dSy4QBpedD9Ms6W2kumidD+gkRQCqQXaqhZmu1+wGrgBGQrS9HdYMosGQYAB
8klgYh+27Omht7h8xkEdbdvDruH+AX4s1ap4kBbXJwi8sjdcLkSRHL1AUXaw
4cTdYjgmdvj7v0idy7DKeO2e/ack/mL6V2cfIz2T+NFKLmOiNxUgBJEo6JdC
BQ5CyqU+VLC++93vvPrKoas7NdwUlCHTBrgvWBYIwYMB01WvNVYCPGTLzl+e
ArrUgiwJDhZtqe21f31qPb8CC+nohGM4X6/n7ppacTjGk1PqkfRrLBuiX8Gk
NRBS7WMAi4ptS6uLHothPxoi/q3O9nsxHZi9SUSMEEwRKSU+qz0PTJ5pyy3h
IEQLhnaqwwl/Q6eAT6a4q1B5XL1fQCCdZuzGmbHx2SEaYTJAndYv1ytag3Ia
ZQRRH9IyEAIM0xJ+eEucIbEnxNtgOQuIoyofg6haSIVGJcZnDbBE6oGxrOVo
/7f2VFh8pHRc1twerpwy59xUcEitWRPVbWsRgQiiXN3NshGLihzuyoAgR0Rj
Pz9G0lV3kmxvbajFQfPwfsuSYoq1bmMQQo3RcqnXSKqXlvp7O2i4AQUqhDS0
/OQTVnnHEF2oYP797z2tgWWl9qBT+9Jdfy9kwm8pAHTLcIyOWMyRiaMnwif7
oRGwytxshQSWuKHingRljNdam0PQ4+oHu5XxgTjUAg7htTbT+/LGhXf1ChVs
QHIk4coCS+Yrw+4AQesMkZCFqrFHvJRMY2tDW+pX5BQ7DsEZgh+jkeuTOwLB
SKEPFkdPGkFKIiYt6NJYpLtQJ1cNx8iea53CgksLHuCIYz1/Votj/TLEnlMj
Q+YT7Yy+2PVqX6/NlHFcxAhE8N5L1WPTW8IPVEkdhJDDmylB5WIgRF5AJrLj
po+xVPL4EbnGMlsW0cg9JPBUkXxX92TcdRGBdiTC5NDlkt5mQU7tkkMIOqMT
V9Nm7n7hziTZBx4L1jAmdMXDmJFar1hMB0IFJfyo/gNXZCUIgOjnRN+4H8qB
oOVIxrTfzz4qvMGBrCrN2UcvDh7CQOsSGDzofHIllx3T9q+P1kxzPkcgOlAj
YiVRDk8NB0h1qaxlgjL6dEeHfhWzYZH3d/F2j9HoTtsPhBBHFlDXJ6CrMfxI
gj3imnTYu73iJiFjRWuMFri0YIGSrjZdrDpVrs5Nzs+UZcsIoBgI2VwDJOAJ
ERrRxsAJQAgwQzAA+sdAx89oQ90nZO41w81BSJVfLdfMVQLS0CF0LKTA9D40
CY5yv2GYZ5/CZ5LEm/DPe0JHDEJiv1A+d5jAi4KzzjjMQ52x26T44JhRDjTI
LBixkLEis/p0ng6Ty7Tu1DPOJyGYJEBWZGLQQ1wfe/UBw1tUGDIOnKFXH7sa
sMvJgNBkxIk9EYoyhdvwqNIgM6A3a8UiQ5iGhyLjgewuxepD7gw5AH4UCST1
KOUnbmNzvbCqakG/LkZWAahbtEV9003oRBGLK4VyQmRnD3SfUhPQokxb0fsR
+zEAIdUzrzXFrN++t3it/clK6B/ePCgsKNISCSAMQpTHU1pAI0XUUfy5HmHq
xQRGRMpihapB0krxt2ikCDOUznRrWTbaaSEW2PqorpmpTMlLR16k5KhwzqtZ
yXLrGzr2v3j9iE5NIOTxxx/D26PlJ7/7+MEIJNEMgQQLWhD28G+1ABQBAMSF
7UAIKKnGeEObJbIhhFF6uk7+/uMPPv2jFV4XIIlhjwyB56mpnRs4gnLIbqRU
lgAh86V89plXyBXw8JIxOgp16/jUloAQU6Hf3auFvVSrxT7qOORRD9mm5L3G
EROndsxVyrGImVqCE2QsvNCMQxokYkAg9lAHQHKbro8D1jRygU0KnbhXJOLA
m+5HzAMRtrdM0ivnKaqS3Lru/UDv1Gu7eLUXKBwmURtIFMi9wlfx8rJup/wT
uubc4DHKzsImXVubEuRwFSkd1wJewXGhHuq4zKp2I1ck4AQEAoZMIjX6DMIU
C0SRoPc4YwTHAs0gdDi73cCKb5rjv3NCY6iuqsMCJDBdESep5wxYw0Lby/jQ
dOLCHrXK2/bsn/rbnfFnnLRpZXRGjjpa6J+92DvY58U4QCDxfdjIiaYWEFwf
QoJetxO+EatJXc/ILTEbVnu2LO/xfi8os5sHZZLadm509GauBVlRvZ+97EgS
fKmdfWy9eoqfhMPt2TvoEzjwhTEAA4hmCzD093RsB3+91n/vB8/KRoAitF4b
C4QIjbQEIdub2ULnz1+plju+/69WSF3H4uedA22aemcbDLRpYx1Ue5P11KUR
5GB6LrSj7euXssCNT/xjbgMeDAIKFGXTTqhr7Hhjwsp2TABCgrCDqZ0U3SbF
x8dcBHksBhoGeTFNOVC5NhoSGUbfDQ6Qlqgj9lm56yMW+vBiLho0d4bo2i2s
Z2GgJmdLns4cD4vBiVIf8im6N+q54nrc8qIh5134XYPjlFSBqCIIObhBskV2
Hp+Jf2VFc6LIjrbROw1usJndvOc813F0RsBVRlmbWVH1mSqM4j1Kj5U73OBV
09dxYm4mC6zEBKqdPEW3yN53+55c8fjnCZ4xT8jO+n6ekFogb+/kWmTkwDZC
tssBaMSbNvPMO50aD3XcHGKxN11B/SSLva6YBw8gEVyUhh+0kgCNQMji+uT9
999771fvEQh56gVzeqhPDkJw3cQg5MknvkO85p67vyxAcjspugkssQjIR6vF
Oncrl6cJjsSgAmeITL9elXHQJA7KQA7R27snTHXN3760oBGDPIOEO9kr2sNc
309iyqX9O5nFu4vC8mTZCPv1tL9e35OIzITLAol62iMyja0NgZCrV8yAeq5u
wgzZzYMyNADkeHWIRF1uKkAIMRe97WMRs1hMFQG02A0Sq42ZBnUuRxPfwC19
HU4BvWWb6DuxG5iQABJUL2IkIBMpU8gztXL6vuVK59WPVvaDHy7ZgfGtL5Vk
Xh1sgCXIaU1KBqctAiEJS99K3QU1Ek/F1cjI3DvN1VXOAAlu+lmAUVzfS4rZ
dP5J3nPoIpdcHx5KDL4UMlac06LtKU9DV0mEQVFfn8R0NA7MggW9dHQqFWo0
ABLjXa/C1iBAY4wRLxqbIxDBMLwoMXLw95VfepCDHg0PyixvVYjRWLLM+kTM
O7Icn0heFUILXGXL6FmccCp+7AnB6BBk18OiN3/R9bFaPrqS1YC2RM6prh/H
9cssiY9KHIOdpLImnBDCJXhIYJ+ygLffQYgDjxiEaBm5Swu1PPuUjLVRUAIB
VWuGJ/s0KWY5qCVMCOSwMeSTxs4q2EYNNKIZuhtcjF3sBwiFs/uC7+7EYnUY
pJHY37ie3R6BJGikFJ8gzf3jvBhX8Yqrw3h9Or9pL9Q3E4ufgIT9XB/2PA6f
RCgDp5aDkJUzz06vlByEeMKyBi2ORnEIRMAIeWjBA1JxoCSQ5caQp2ONzpRQ
C5GarNz8b+q3CUJib0nsMxHUxGrrasIJ0bFAvDdDGeKdPOfF+R74Kr0Yn5fp
cQN9s/CnlRqcsZGB3q42ARLdzBeqZ/XUbK3OmFjZr5piMZkPeWVuPxzi652J
weMcux2KKKKey0eDKBI1MCwR+AGOYoJG1GdPCKJkzE5BhGR9fcWPBREFbENp
PM3UHnjg/qC4cgLkQ91hPa39g79Er/785ZkXfmDlfqyyfIi2HD70ovbDlgIh
hGMAIUIytwQh+1WyO4DF6gwNJ5BQJ1cLrioWM1Q9U0ZNwACmKPXr5yvDQgtU
oxP8WD0/5yNcGR+Y7H89tlnnBo4IjeglX1sskedCvrBuwt9//MGNG58JWkAf
mi8dVxNugVIyN/jTD/9rAUES9dCdIRe3dmJnSBGEOBQJ8xfjbBBbX17JqIzu
4oj1MMtBGno3isLIcOh8M9yVv8Eom3uqUi9dqDQKzNUDmCoHu0e03N+dsbaG
+tvPTkzLvPb29ZTbX5K900zcAwSUiMUyFsuj6OkjWQMyG/TX/QrwZQIm0cWC
ooCYCU1YBdyyp8MWba+fk/pK2ThcJdpydaodR43LjHgJGP513o4vOHPVZeEb
We7MnmgJ+TIwUiClgFV0ICgW1p+g72S15knaKh0XMtFKKycq1JRz1dIxCXiD
yncQht0NwsLV0Ud2xp8xV7mZsF/kU9dXNeCxj8KDRM5e1s0G6gCKqC3VqskN
AEXEE3NIMaYPXAvjxJZ6BZszOm4QFNWBmDTpnrlWL8UIRJZrX1QZZtyTg6aJ
2rIyS/y21wKeEM1Gtcxs1BmezHMJt+EKYBlDacqZC8Ma9o25Xl0OGVlybzVx
Pn95Sk1GylItQnRej1gjaKhqP+hrmTjJZijinGtyunKFJtSJq0HNSlmV++Nw
TBqnKA+76CtuW+TQW7pBZEPJxqXBSRCOismo7ojAtSsEghpYEX7shEQkAZg4
98pdHyS8NPJ6uKbJOXwyBpOETuJTBm94iMo9LVY9vHyaIsVWzC4vc6wB5NLQ
7G22OEEVPGIxCIzYFHt1Du8xb7zbCcSAPVC49Vxjfbo7RUf0cXBuqhYy1BSu
C8E1qD50A0efuwW0JeULSXraCgp18U3LzSk7hTrQ5FA7F2ut75liFuH7Xd/Y
Lj158ewhuyLnJg8Q96g3V4cp8jFwjMTaGkUc4ngG/ICzDjRi8qSj/eq25uPq
/+8+vhp8RHs+liRsxK4W1yfjLqkPeh8SbfG/f/n2ozqETu2uL90pdPHNb3yN
DfQmubq7CRVEfyy09IQ8+q2H/3oQgm8EdBFzRGOld+IvY6NlD8p43AQc0tja
IDIiwIBcZEs9kOtB8aO2mgESnanxTsvtnv3BjAxMoqahFmIx/ZDpX75ffdsf
TC3rWLrBKNGrBWEVj8ggv4akOarmLY0+81w1J4QAJCxIulWJJ60uYqbpvJZR
z97N2SNshk3BATI3W5URmd9IA0BFt95+gZiWaAQ24M2Q4N8xcFYHkm0lL+a3
H9YJxFiq+9lH1WxkKm/HpTGshuxUno92gFujGWyoCTxYpObart4VCI3uWibL
pleNiSrImK2nEN6e8sn+XhTHMw5pbGo/2mZwJQRi4IT4WMGwBW/wb54d7NTZ
TdwgeKU8xyeUGd3zJMDQML2F6pmV5sAWbNW4h8AP16VsOpecmGqf5R+5UbAw
TX4/mzxmM1uDVzqvF50CcHdre94JIdx+8e0BYAaKqM+InqGuH3dGPbf05+DF
UofRBzMc0n1CQ2F3TuUlWARzvS/seat6XlFD3orzner68fxMueWkkje54YRA
lJKZ0EOqTxJVRkJZYde91JaGx9Yniua+yfk/kuWxyu5ndjZYK28zK+OMWGLB
nQgRr0TYs+XhZOJ1rFh/LMEDsEcyEFI6wesImm7yqtdJjc8Oyeo1cjaIfpuR
UfNENtd7n17dpDUKorUQSMAecdgFx5S7PjxoouuC4HycpasLakIry014g17R
Qx8N8oZmxvoBIbpYjKHO0fPLaPzWDaJOFmXpWBqOO1lA8ZYIBEwI/NjJU2ME
e/xw3meNBhnEuv1QjMTdEYQIhnQnxPo2DrqMo7U658J3tnLTONi9XW1q+AHW
11cmJ8bAyaARLdsMYvS4WkscUmx6wZrb5O171/se2yj/8EL1bEITbUkXwWQn
Ob+1IFwGDoFfiuq7c1Z9jQwlJTJ1mkUQUnSJAEX0YinCIXWjr6/ntX8/ZmJl
C1UcGvrUnjveahsbMe0LLdhwBWF2LQOHcJUIhABEOSPiHQe4NW4TgTiiwOOB
CyIWWY3xQxys0fJC1VQRdhp1gTThEF3ZsZH+mI/asu2ps9bmJkqnTMk5nMse
IGGiFyrwLo21AVEEPIQ3QB3aQEijvjTor99Pr+0S7ncccmahTpn7TNi82aYL
gWy9N0Xz2rW6cOPvLUEUJMXPPecm/hA0BHSO/d1twhiCJY5AiJrxqwMQRaNV
JvjBtFX39e0GcU6eHb2Fzk5M67caQ0BIfXcLj+J25z/KGsbPhe4uc9cz6z8Q
CeCgmBs8NlcyL0F9qYRimOyaTtmdgQa0Bjvdw+D1c12aTE17yIx+eCFTR3gv
apPY8VYQhV45ZgCimK+s8vba2hTeEkc+cRYPCERPjYw1OHOvUm3Yrf7VSjwt
Gh/E4nQIdVJQxGZ8wbIzJjoRoYiQvGlBZyJWeD+0wVTXYW18sd9cCju5bzyG
Iu9XO1Ab8+vI/NHvt0ZIk2Eho6oG1TJW7kYkmWIUz+ILwWmDL8tGZvykLhYn
QnVUyrJfHn9G8ONPn36gy6QFFzHObGWYQhrLYvAUtcwS70cIr+8JaEAv8RxY
vfa1B7iO1AQhhJf99g+f1CJZ+CIawflPsMldB42NptQJYyNMj8eug8bG+Rhp
+CfqFsyRk2/VUMUHhPjKpDANgYY4HNNolZyrXrkQRyPPzI3JqOcrli27Xlul
HExCQwVXXJzu3qN85E8Brg/9PIYrWDc42BoKXY7rn3ygy+rlBWW7XabVj5KA
EOfNzucV0GBS8RMHIcIGBLbM9TE7hDCR3m/6dyeqYJvp3AZny21SUoU9WCAX
WHvI9Alz5LBYtdLJetXoHuOehCqcJN24m8ubdz6qcNdEqJibsdhEf29H5kVZ
X8GrsIOo4Ohx4YrbASGt29v3rpaPJMUQE99II5RacNdHNh9ZmQPjkTVTjMI0
ggi85e/MziCRiicnASEehWm6S4OUREu+q74lm8bXeJld6vnKtOmgJOE++cR3
Hvz6P33+jjusxG1zNV7q1OyHLi5cnryd+IspO+XS61k5mH0SZn0BafeerpPC
merqjRtGHP39xx9sWSmrlZin2hJ+FFf+zlImB+dLxyf7X3dAYhel3O5P9Fzf
T/TmfOd/H1Mb7Hh5+dyEjiikcfnCOzy8QibmqxnqdBByoW7OEH2CQ5xuygvc
6I4BgchO8WjzreDK9IrlkOqWQFzCioQGmI1AN/eAlh08ZOWiDoQfSWsZZ/QK
74mtYcHLN1uJt6AbCclBHR6fnVOHNR8vlgTVD9HEwKcRezb0wAqcTPYekWHV
IJC7qu1j5qe7OGSyh/rbPSyld6CNRgQDvJSM9pYpS0R2f6LvBO4Fj8XcViQo
tD3Syz7xIEiz5tKf79VltbSm8rB6a+S60vE4uxlL7cX1GCJE1SzrZKkEktSu
1AgVYei1N7fCsvLl9pd0RsJCJv1a6fSwzmznMx+OPBjjEAHCHQMAr9Tz7Nqi
rEcTkSNgEpghMSekEaXVxHeFp+uqt4PdpkRqDpCB1wSNBEKYMuuTbNP16qn6
YsmsVeVtK+X2jpUs5JTJidA1xdUW4w3ZAtkFbJZMKviExAq3ki5h6kZTV0F7
853UIun1YpSkkTM540CJgxDLGB0tF+vY+tFjJmpWyzU4Q9DIavKEDJKpdMwr
2GIN9zYIVWC4MTSSqKzvFFJjFtYnZBZlHBt5IMZ4rQUyqoCH3jwCIRq3WFi+
ZvHQNOwC/BDyaVld10eV4mgM7ObID3Vly2H6tjBVwofT5GIK/FIwjHo4kdWI
N9SHJphsN3plfhEdyOGssHBY2AmjtJMXifOacUHubyZJtgVs+EotkJ81PNkn
mKFl5+X6frRyoNskX3RrkdA0eKZbm+kV1zKT1/tD83hcdDOkxE7qxRDPQqeu
r+PE5FC7noXt0pNFjwf17DK/x8kvFHkjLSM464G1nqAR+oB9j8HATpAvS2TS
ExyiBw27o04LGNzMpW5bR3+C5l7cWkaIGAdSdZhN+KFdGqWvr+fwoRefffqJ
R7/18EMPfePY0ZeoegN04bdTM+/8ubGYqVqp5cZXP1p1XQ70Q8iLKeKQK40V
wY+F+WmEO0hdaWxtjFj1t3OUlSlWxT0AgRRbvWbBsoXJ3uXJDrULlc73l99x
893T/jqhsSxv90od94ge4Ssbc8ZLuZKBkPru1qmKmUgvNRsHPpgjs2xaHHlN
UiEQtVj7lOlDljJf6tUnwW7EQ7hqLavM3E6EJZF/b4lMfBKkG4xKCq5r2mL7
kDDiYYs4UOL8z/Jgp7Nttb1mzeCZohJI7GqwYnAVcwVDMQWJkZDrtWAgcMbv
1amuwzLuMtZWHzB3U8cHIoKjbYgyQC+JwQnT6iIUSSMmYQFehMwHONPZGjhA
KGezcnl6l8qSYcQ8B1mNaw1HpRa4PRooCCr9Ha/9MU8J7O+2sguGulfnsmq8
4yfV87fGzLM92/2CgMfV0UegiGQO89FHVscPk4pVxBIJ2ACHwFaNGa3xTxzN
xqgmY1aHMNNSpYtUXM2XZa1Wy0eNgxr8Th/+16SAgSwjFk3mSe80U0dv1gul
Ii3WgZVE2wnT6ETsTdhs5ePJOzVtHbXGDMnixpTQTUqryBTGCCRpCZjJnPmb
9sAiZxGjCw7nERYZelcolZ11W09UJQYhQgV82/SghTpueB74SZGMWlpY1WtH
n41QjF6Hs6mH4MfgT5OytkTEtIe4pE5ypg7MnFMq+KFLyfW1cOFUD1cTrwVi
thMhZxPnG6WHfdCcd+EZKOxfQ6cxx+6jWkaBYOGHWijog+vDKRxOO2HwkXiF
ODoz1k+oTveMjD63HNQOrdfK+ZkykIwNcPMuLy1oM91y2onT5qm5ps8YkLhC
2j6tyebGauSx+bZwWwFLGFv1/AKzctkaCrXgX+3taoOFUj3z2uzbT3vFmQTA
bJR/mBQArYXsGC+cV+xJuD+Pe2x6cfSU9iDsBPBQNzQmLG9vbVTGBvbjnxRZ
Ii0jRH5Q11LTsSDH8lWijS9AspOX8eUGMwb1/pSPlrGYwQsz//vXyy0JIYh1
7FcIxj8bm8uyvAAAhMLQ7jDx0is1y43dX9F9v6BMstKq5Zo8RWubbnY/FNL9
7MafdNMKDgmT7K5XeZaFRvRDc5KQYvOJOUCMDvfRCs4QoQuPifAad1oI9dGI
zv/6wmrLnBrzjJ2bdBGzWqg2goz2X4BAbhmmSZpx/HLEAjWL8u5Gh1tZUp9l
47Y7/9EiMhEwSKTGkNfQAtnH3GOmbjrYGUuQNf98D5boegWiYzuvC40DGUMy
7omiGkbfAjpBWEzNIokBSGgzbZ/gHAGDte3lrSuL6L9pgZ5oy7WFIY+StHSe
xLDHhcLi0I96YsVKtuehsxLKMZ3VwJOJozk8knCVecpcOGU36Jy4jR48Y+98
AR6URtSfjoGzdgrb84zD6sjRRunRJDpjxIbxw4nrw+GoryHrChxSCVJ4LUMz
jVwNj67u5mm/XJFEDOTq2MMWLAjDImMhi2AV3CJyKfNi/pWZy2zHmGllyHAA
JAwNBipI5hSaHMaOuKFMCA/GPQjARvuXZXGWZtG8yhKRDEJERvNlfQrD2O1d
mynmkCY/j6fAMr6ZplYz2jF8mJVMNa6p77Me5ahSWpekNsaqOvCaJSnPl/xJ
RASMMIdGWz2kTPBKTkZVh+MQTCMwhIUJk4SXOPISn0LsX9reXCNFpZGn3AqE
oI8x1H1CBjRLkJl56mf/91c+97nPAQsDnWCWGgpMXevNGcFagBaiN4CuoGuC
yawfO/Ky9tM33CFspuOCMYRAAiXg+EdXt++5++5vf/txC9kEqowXyqFZMG6o
k7Qv7T+O65F1G6NcdMbAJ+40M+naIRMfjkSBNnxZ7YC4jPNViiDEJ/i8bGVw
jWtagBDCD6YZsjozF0owC7fwrpPVI3xzM1AyNG568wsVQIKyAjSt0Mh632Pu
GNGrBgnWlqjgQvWskE/yTiN3YCekQxqom8y0prdCyaQExjQKcihFr/h+UGQn
r9hL5ghclOeeK1YJzNksuWjbuf1ZH7dJSdWb350eRT5qEogBgbhSusBAX0+7
7pbEYeLl7WKYcZs+EBDIfhwJ2KE3bnxmtWOmxy0YdGVhanXgnTPt9aXBT6/t
mvfDdJkmyAWW4ThVqcsuCIQIfoBDkte4QAgL1Cf1fNsDAiuxiBlTjINJHX8B
IGnk+SCOOsxWWoqlBd9DIdEqnhDLSw0QS2fqqe6y2kVvBnTNOMgimO3WRAeS
oU/cILEjJW67gZ3is2btpwg/UP+I0YuVBOo74VNF13L3g5o/JJTpMX7m1jjr
PY1X/Y/r2u8GJqdFoKbaIUV4TrE6g5SKeScqZcRvvT8cEQRCA2iRJ4W4HAEO
4lMOWii6pxHTiesS6NJrxPyl0d/dNm/VuAadKUpa7qWZkw5FoLxeHX3kw5EH
BUW8IFESdwNIOBQhbxdJ3v1CdV4mwCvcrZ9twj8CJHviY786Ptb1qqZyFqwJ
pd/gKGICYqUFCKgegxsJqWFAC/2KldqP8yJazt/dc0JQphiI8eYRGYRKyGQJ
1/SnCUEibngY4oiMg5A4AhIfAv1S4RBBC+3ZCvuG4IiGSGtkBI0eEz6dXWwZ
T4sTuqPQ7tC4gR/UyXfP/Nw9G1rTO1T6X6f6CMEY/GiV8JKRToPrAyGOYtva
XdKpCQmgow6byGiKg52Y7NEzbwJpYhCiq+8jHLD0mKe9EEPxCAg3f1BUWBUO
cVcGklZUCSQWadisNjN4plv/xiAEkol+zs51743YpGwiARvZjaSnJoRabjb/
OQzWT6gRY3fy9pr7Zj30E2GSS+4PScrnZYGzcI1mz/6UQC3NCJ9Dx01OMBSq
2y+YcvHsIZNwr7yNERcU0Q2sF69gefxoeM+1nuRf5NFm3366RbbvyS/ozoFi
Ssm5hDcSosbHoKZwszkIye6Z0QyQCB0xbZyzS7YvotgPihzgEgHGQIvFa1Qo
0HPCt7wdruntIJBKVNvOQzD+b4Ic6jVjROADgRVTGR9IqCP8xMVDiiLwB2MS
/XBkf4O+UC0LnwiBhEhERfNQSu7qFNYWrc6dvhIOeX/5nfnKcLbPEIhZqpkp
0cnKTLdkqOLTJkfmADiBWjtvfpk2GSBAiOyRbJz+jUuS/ZWN4I5e+NotgESH
4M5vf+uUTgoAia5FY3f19dHaG9OrLpS6NNqWuEFo+okQSwwt1GdnOulB01Fi
5MD+W2ISk/Ma7MwSWJpDHvWlUpKugt3X6VyonuGxEk4Q/POv/ChYVUrKRhGi
zdhZoQfQcYJeifFR1HlTHotYDTov3TCE0mDIgy62rizWcokzJxXragqINjbP
+95ouGUMhOQMPeob6kw58fGuV4VyDYGsGceGlXqxOKgQFNkZfwafyZ5E2MiD
Wum01RiE4PrgBQUCifkhMU5mDWPSCOkAlqp5IAKZ6vqxG3RK0MbvVYIyPgOK
/7Re2+tlKwON7jf2Bc95EYRkICHYJt9DQlqIf+X+BF7IOooziyxMM/hTWZak
/Ir/PJ7jN0IcJzbuljkyb+q+gAHIuvpMwiJNrUCfNuZPSNAm58gu8fBJcxP9
ymX6jsma6yUjEOIVXuJDEHbRWRRzc4qhJXS9qN7CjecI0BNbuKwmnZqDEF1c
d0kR9H+j7fi9X/nHL955p2ayABJd4oce+uYXvnDHl+666/ChH1HGzj0JgBAN
Po4UeyVurwlafO3rD/T3dMQgRP351iMPac//4x++qDXkkLa/eer+r96nnT/w
wD/p0FrZF+IXWiCvx+YvOej1v/lg6yHD0LIqDAGB0GIcoiaQlmCPBmlW7f+8
9fO/Ca3JvzE51C4EcjCjY677hdyd9W8y92643Yhb6ZbBTr3zMc3JWfzu46vr
66YMMNFztKh+pn0SL5vM4320tcXy6lQHSEOPAAIm+lwcPZVh19Hothw1Snz1
zGtrNla3BiE7+yTO7ERVdcztUzouzKYhQkFlJ9dhpp6CmhAIACauqHsw3bQl
G6RICKFgXIIlilESAQA88EIgOw0TEGtsLreMrfBDQEhcmyaRhS8ehfxfCua2
BAkmnXrjs+vXP21sbfR0ndy6sqBuW+mQK5ajMVE65e732eE2wjGyI7BMOVkZ
iIShmro4WhV58Rc+URu3ArGIGXhY7wRNh4VPDvCi3CYC0WgHed5P1FXt09gU
502NR/dPx8BZzkhwInsYrywKhKj5I6YFN+txMZeckLnZhEPWptRnHigdtLfr
pA6nxz/Y90ueAJt4SGqVt/dSTnKmx3KlMw7fZJc4dz4Q5oj1u6IgEcVlLqFX
ZoLwgdMSQyAgiv8ENzhpTe5OiRGIvtUwWm3cxQkGAULaZHWU7CeCWfTKhP2v
2IR6eauCbok7QFAjQXIE9rIRUwc7DYEEO6Uz6p+9yD2mHeIU0kpnHDl4ML3H
yiu/a86gSaBIgjGAviipFiM48cakb6tXSQzIuIsgkHCZHIHopY34efIi1YRX
sERWSdBCtkPDGH/LfeJoxG+bkVC8bz94oI3htd4M1NZkS5gSXhUlNtmeHx1n
jsyVTiTUzf2aNjOabs8r+tUBzOci9tB7XpBjY65XTSjC/q32meekam4TjU/a
sbCgsV1cW5M93U/rw/05CWQqQqm9UzBi0hj8E0zt8rlJrppREINzRud4efwZ
QMhc7wuufCsAI0gQ9KZ+JPwgyCFr8sFuXQhETQZR6wUtrCRroIUQAAKEUFMG
F5NWIpgpUKGfA0L0fvjeD57Vslb++MXnLYLT16Mbg8PpuKjMeXCkEQXs0L6j
UrBOUNAXHwgIEyVbhx+NjfMtcYgezBiBCNetnfqysEdwRKQgRG327aeFMQ5A
ICunvyL7u1e9+uxPHX7EOISgvPqvBknDqCZ5TjohG1KA1/seM8GECI1oxido
YSGPsQHY754gbDikoENSt0qmZUGOvUjNaAZFtOb2cUiRJaIm7KHzJbptyDx0
DOEUdl4LGTSx86QR0n7/YjdISxBSxAbuFXGXxfK5CRP9CARUDazAQJF3Coxx
LwogBHhwff+ivX5cbYDOz352ObzEltQBzdZ16XWOshRw9uZmK/Q2K5AXqtIg
sCZTMr1WP7N40c8XhmpLvgdtv3K3nsyb4BCZOZtNLy1wE17/9JrOQkOkEfvL
qKq7IerkoXn+TCMusFD0lcAGJfMIpcl0Clz97Ox7b0yvmkx69jTdl5A6XFa0
6N9Qk5mTVaWiHCZG/6J5FdfMZT8ycwn7VPew3tieHVNklTjnUzskVQdnCCGS
uMauh0UAIYkHxtcQnYGngR/D6n2P9zsCMY398f7reVVfdqJRtZMNFSStXPWC
Jstr7u7QSggY2oDUIVwfRNVzr4uhMjtWlPM7eKbHUS7rrVBdXvTWYYPuE8rM
aQSKybxXRx8ReDAIUaxDF1FEYjpTEprJovMRAvmw/IDskfNAcOc6O0J3KUwP
/rjlcHJ6pRVLZFiYlY3Qt30mtjARz2GZDMLZ067iZJlis6BMuLs8U8Yw4XxJ
9ropR/WdE3PDxjMnKGMbDP7UQjPI9kY23agaC8NFO267rfY17XYf/4a7RJBJ
sRK0ptqUKZVxpsQIEm6hYIYOLUQx0WdwSDcGu2WE/aCAKFwf8Rw/mbwn8KMe
5EBhbxLtjdXG2MA9S/rbqHZwdAchV8ceFnaCSYvQJdV2nnn6iS984Q5dyke/
9fDn77jj2995TGiBRBsXJnUQcrrrlz6qLUFILcjHac+CN+h7U874js//7V1f
+uL3//Vp5PRjCTKe60B9zHJvSb8ldmNEdwHgMC9I2B1xUrDjEEAIndRFzIHH
34BDBEiW2x9W8+CLwICu10TPUVlYoZGWgETbGyV1NHutxc6QGIfExl3bUIIZ
0C5Asr21waXRo6H2x80z012H6IMOKmyjO8RUxGNQobslSBPv1xpWPqwcIoZ7
aMT4q9rb6Cm13IVSVn/qUUVdd3cUXSJBNqrD79Uk+qNOmhJRqXdtbSLelXZ+
AA/kADfIflsmCCRGC1ltuyu1nq6TwA9hPBnBem0uBiEOM2L+KrXtLHv3j9vo
lx7AAzH8MFuJi9gWW39PGyhID4sQyIXLkwIh6LuOjZZBTVsrEz6Sa7O9gBCy
dP2UZWUOdoZ4rkE8G/VkXkCILIJDEUNBFfPk600Ve+d07toPORR/FgLR9rql
NdqoosUhVO2/ravnVKUeXcERfQplCZmcWahrQuQgJAmjNBv6pvRbtD4aQZAt
IPksAQQWIqacjYvJL5R2DYGVS/EOY0+Ia4kAQszL17fnDLkeFaxxANMSw8QR
mQhcZeIk5KIyXCAQp5SAo0y7PlTo8xJ+egb96Jlo/JXzlhi7Y7beHeCowbug
q3YVy6cPdp9Y2w5k7/UhS2EOg2PJEVHNZeT9PS+Gr4Q3il4RC53sD0XcN1Jc
T3VXU3cZObqXjFPtixGIrLbHJkyI8jd7QFenKasnW6CF+VBiAyVMvVdBDkha
GSUmeEgMjUSkVndxwNNjDwcHZbSrliDB/AxBriRWNJUFp3Cq4ZNoY96TwhvC
A8iu6hwTd0qysR9UZstATmCGwCtIXvuMT5LwqFFynXadpruJ0P+PwzfAJBin
Scwlibw0ch6pa4GS0oJuQMuQDaVVmHGjoXdxuht3hEDI72aeEg7ZWplRb7/7
XRO6jDX2jem6PKuNhSUQwxSKGAugJQYhxn3aXKtslAjHJCDkW488pL4dO/Ky
wIywDT8RpNEQUcpQaCdITNwNC6ieV7LOiPQLs54pTB0fbjPU4C1R99zkTkGQ
xJcJ4Dr9Q3gj8n78zULnk1q5uDkuWzm3OT61Yq9KLeisK2MDmunLjlfPvGZR
lfaHW/pDVstHDnaG7MesCFBhYmxkIJZYzzwkm2e0c+1ZHdCetQ0LfmcezOWo
RTJogQZ/rEhhJbxIco3OUbd3ApYWZzr0W2GVvUiQefw6dJrw+e0JCiL2QCOt
wTGi7nmMphGKBd/SE9LSGdKyUkxL+keMLsZG+ncadZioRrc+N3EjlNYthmDi
mi8xCGkZtfH9m6cl3JyUpWvZaqtzQhrORbn60SpwQiZjY3uO+5ndzpeyN8C5
gSPBdW9mSDgEe33+8pRMzC2dIVD7nBzCxFx2hAYrWJ8UM2V7zXCNXDHYWTYf
40qYQF3lFaE3iaCIK2nfsmljYIDl5od8WGFRARLtam62+ubwu7Fjh9m3EAhJ
QJaCCiek/ZHEfCfxlETmiw304Ovo6n9inux1tDIz1XU4gR+6M+F1FAFDDEX8
KFSya4RybL4TrxAXO21aQo6YIpKcHbr6DJHJ1VbKObDZc+BojZWE2zERnlCh
bMGjVC5xBnSkopxeWZ7j7MxYLaB2tZJTQULl300hnPH3PPPi1bWFIad2+JXC
rMfg1h5noMjMU0UosjHfux8U8Z0bj3dzjeitli+OPaehwM2yEtRH/TUlS40h
m14p6SUfU+xQPQVRuDcDFxBufz13Wh9bQ90qM2P95DV48otDZd0ziGZreuic
VT0m7575uSzjh/81WdTNQ1nX1Fo212SVXH8jO1x4RUCSbGJZNPs0UoF9BwOB
AurpMJ5Li1+otjmbzHNpDFECQlARYQQgiMp6UkBNwwVXRMMeH64lCIndGllS
7eyQLo0aHFTfwGU0YocPR2fMzbHQZ65IQMjQqad3Ki+p1cYOa9zwUeiKUL6n
/c1TWtBKwQbLTAkVzZ5//jkdvZHnEAlL4DxhTIwvt7kHQrTmS3fdJRCio3/x
zjsFcrRDgj6/eP2oDqSd212xmYEZfUU4SadJjraf/k6e4aume9L9chpSypWC
f5KWayRuaNk4Qp33IWGK90OobyeXY62E3A1AiOymp6QRXZ0MOVCyv0Xyhnbl
Pl4cC7VCBZlb0kHV/96utj80KpzUle3Vi2cPYd+1QOlebkJhA/+hS4Gpw++u
mdLXcq1JigGnhHlFzppQklCEeuisvNi1AngQkJjoObpX7iEnvsI8iXWl3GEC
FEmQfFbj4+xP9cPbD8rEqAPhsli+TBvslzbry++cad8KOVy///gDoREhEAEA
aCRJ8yozhGYAISTIJN6VpK2enws+6n0RiIVIxgfUDYGQhfnpsbluYQ9OYevK
gsVlgkOevV3ZmLMXVB77pj4sICS22jhDDkAF5IO7o1sDTtYGLyv9K0ijpoVE
6EzfCm/ApvZ6bWGSaDROmykf6BiR9bTp+afXwmu/nQ644lP7W6fU7eWtip9L
6UIFudTpNTOFXj9XaGQ/N0L8b8wb8TCHyfgEfVRCG0JEzib1u5HkF8c2zv1w
v0rx6Gp601LVxc50MLMjtcrbyfZJr1p6RaI9X4or+0yNZtVRY4CBl4MKfY3d
1ZAoV63lhbn5ylVByI7JnR5ZDMudMxSUcQSyVLOojZFJdrcGuzPTZg6HHGM4
CKkulckB97tOCy5HpsHcKP/o6ugjRSjSWGjfD4RAZdH9rE/dOU58NW7/2UeN
mpLHCPSu5s1fpKHqX83oEcED5LvFRAH1ZigvkuS/6BN9bOPYBOZhDFz5QxTC
Mny7XoWV4bdQ9s7M4xdqpioffPIuyBMfjizRRq5KurowrEHOdliQ0OcWhYMx
PXHchdO9bYUSPLylL053N3IOZ/yqh3MLQotIibPM4uEDxI4gi+6dm7SrXzbG
CCmxMfZo6QnRPpFDT2S4KL0Xj3MRw3iCkjYYLJ+uzvYDQuI/rVFP7rn77v/x
D1989FsPa82xIy/rjn3m6Sfu+Pzfas3Xvv6AFvp7OgR+HBGRohv/CVcAQrSg
kSEco0NnYZ1vP37/V+/TfvSt9nDvV/5RKEUrtZmWM/9nYRB8jTt8dEauygX8
Q0gkRiD4QHRSgkOd/+93en7ygNrY8QcvDFpKiydJCVg6COEFrtnH+cuTDkVM
5DPkqiwvVK0VXCLrfY+t5NQLcEjxJrkdRqg9HR0nhDdk8TOHZE9WClNNy5Xl
t8BIO0HavXSmG535jrfaTvf8x9hs7/nLM0kYxf0wwiq/eP2I0JQ5kXqOTgp1
nP2pmna7B9RHU7Rvyp+l48ISLZ0t7Fkghz0UfZXh4bJnlp7fMtoCFEmwRyWi
pCY4JF4zNmSTepn+69c/1TtqbXFS19EhjdAI+mbOayUmAhSJs3Rbkldz/uqt
EQixmM9u/Ek90YKAB93QeWlZTZZlbLTspzPT+7K/jmTpZDjOLFgVuTh+cUtn
yG7I2MV5TiwGZiD3IQF67WptbYq8uQTPkMyCQyOecn780VUmiQIkemV5TN8T
MMEbAiGCAYSEyDAFxnQMnPVYzJnFi29Mr/6sYwAEohM34mWeGhan6Cb0j/2t
uVl8vaBuZHVpjRaiub9OP74DBT+08zjIUoQxLUEOBW19e+02Y0MF+dZkV0Uv
Sgx4opWGQKDsgkA0qlpJIcKcCrLHhEGdTDCDHBkPcIA3oJ5SRQi/h2fmgkl0
4p6JbMIjtazsxdr2cu9wyfmoca06hyKxmAxfcSviVYN0qjHZzyvyfjWtPpOg
EdNRKfXqrNXPTI8lPAL1xZLsOy9/vQ+dhopMmd7kmvAKQhg+/Oi3KHi7r4OE
0O3AwvKoQaNZpN2n80htgz30ryaz1z/5QOZ+o9rRNE2j1M5cr76yWdjixFZQ
uCWaaZSzM92oMjoRohHKnTCJ1ifCWWAJS8PMIyxeBZjozFZwVBJnKRJUPA3H
VeKTt7ELIzshhPCc7LWGEcTlecdod1hF43IHWqku5VQ8dJy6ghC63k7hBdWE
Q2Jxtv2oIxRYASlpP8OTfcIPnT9/RdZZ7RevH53rfQGXiFa+9u9WDpu6gXA5
hBm0PephwjB4nFCua3/zVNx0IHVVC8TgtED1EA2FjqKmH2qlBofUda3RnuGE
RCLqLRxBHNR14ym2qD04wNP4L1aHcwSyweNfhFsCPDYTjI5liUWRYrkFWLcz
K7D7wXkUvVDG0LNJKDPBITgudFO5vbY7KmeJ3A4IcWKGzThGTyWmXEeMyRWA
kG9+42vJqR0/dZTexlCE3Wr7Bx64/6GHvgF6n1qxlwkb482I035RluZcDs6d
IeKTuVNGT61OdTShmmbfyOTQ8dukfyROko0r88AAwQnZ8ZiPyrLeabozqUZn
brHanCOQSpBXVdNvHX7E9FTPjqGKXMv0Gcirt0Qg+pbau2TlqCe17ap7eFYu
T+u+Use0jfAMe76yMefV2QwbL5USWoh+pelwrF3WsnlYPGaDOA6xLI/6COXV
WibUEJ3RSywIDE7q2XSuReyyBo1k7vrBTjzb2rK36yQJv14sRibGiB+LF2GA
GPzoGNB5hXCAGVkrS50/Ph5tKVp2CF0JSySx9dpgabRtrxhuaMRfPMDhP7n6
0YrJ/jc5PZrEza7nya1WeyUCG7XK286g+PDSQtLhBDvFIGc3z5EJd2mCQLKT
Yo45WR2dWh/WVYMTYpWOF2atEmuBaGHx4pBrow2clepeFC2bpm5EZRl/b4la
Ffrsn70IH5UJToJAQJKwhpA7juMpyLPrXnJEqpvq0szJIhS5OvqISY7sg0PW
zz5qgZjf2KVRVy1hfNyyWQUGBjpM4IJkBIfEgh8xT0BNj5n24HbT+OdBzcyI
kQLMkRnVq14r9RONmA6ByAb5IKZ6ETTheQBXp9pRa/EbSUZ/rOtVdcOK0QTR
G9kL2R3cIHggUdmiUgymymkYjbxSbUKoMELIVI/nvRZJF8XmV1OYoQhCMIKo
vLIGGdVPo6dY22jEMNDjcwvCIUiYVgdeqwfJO5dUjbvqfdO347NDIBC1rl8v
JTik6DlJTPnMmBD4ORIxTPVlrpe8nvWq0RRXy0f37iItzDx1efwZUBlkV8De
zTzcxhtPN8bhQz8ivQVpd4Rx/KyR25qfKXOZ2IlHWzybxokcRR9OciIU/YzX
oNDrzihLxtw4DwLR3VU7+xgU3J6fPKBlXUfiR0I+HFSPJK9oSrPt5MXjDPTW
qzIZAiG2ZnczVMlZzxLfQoh2tXxko/xDzeZ2f/l3Wtg616smE+x8DAuUBH/R
+voKkdCdvCrc+sqcBQ521rMj7m5aC4dWIw9Xj4ZgAMQMrXRcpHcUOxEIuefu
LxuFpladmB2+96v36F/tx89ieaHKoW3N7ia0fBxHlBcJ2QSbOUGlLBSh/lvO
wurM7efwEjG3vLA8AccoJWFXe2VAcx+L+XP+IhwSx2uESWTK1YATlfGBhflp
eCBjI/1rqwZU/LdeaKYltEB8tSiamkRhDhYlcwSiptcppBQTKJs1ZRL1dmN7
7kpjRd/qU/8S4yNUpKOfGzjieXNzg8duhOoqOEN0jlg3L2yn+ex+HQAnOwhR
gxZi3PVADjFn+/5JPTI9nqxBrqge563mBHlk9/SVNnDdMHCIMAl1XXGntHX1
IHLys7PvqQl+LG9VMq25YJotfNkqNSb2HuC+SEAIsAFJZEtHLSS/bMz3Xr+2
K1yksyZ44cwN/SrHpSstHSBcbhlxCuvciAreWZG7wT2Jp0/cNbdPCOl6XiEX
bRBPW2YmCAJxHIXvhSAIMnRLtSoib3F2ibM6nS/nrg88IYyVdm70v0wL4qdn
J6a9WpZwrAdistyTZhACvAHQhjzEdsCnVy9tRAnde7TVoHJWDNB8OPKg1sdH
wYWyOm519LTB7y++QbEYXUcM5XYQV3Qvt+4lKIVCERRDR13KZv1j/WhYYV/Y
2N63tdVM5+o3dZoMrn5uLPGJjovT3RtzvSANfdYXSwIDWqn37cKIZY9qjQYq
PjpGDZCDlUckzWMfWg/1IgsMlfdUNYCXLXFF7CVITH9xS3WSQi1IuMdvYM8A
0rKGSJ2xbgct8ZuBsWAg6g+fWLmWEEowOBFASIZqQiHgRqjr6l3dyeubkC1i
M6uZMSENd4OcnrrYsuxsEXvEBl3GmrQmXWgBBmPbjrbVxg6bn+rsY0XaMwlT
+DGggDoXSHdpIk6lmySOsmk0tBn5LHyGSih70ZakbwCSpMJLcZlkmeTn+HkY
cI2/Tk2PNikwV3q+CAgZOvW05Rz9pt7f06F/rec7Ntkh8KQ/LQSC64XSme4v
3fX3vhIz/eDX/+nxxx9j4zvvvLPjLau0+/k77nj26SfW+x7b6X3g8a9/8a4v
3bke5krCDw2rZL16+NCL2kY/0eerrxzS0bWyv7dDUIGV2gAEcv/992r/WtYP
v3LfPUIXwjNd//mKjkVP9O3ius1A19YmQAh62wBCwBvqp3aiHvJvchQDPOEs
Hnjgfo3S5MRYvGd6mzhkbslj2SOshtTvltBFmzW5WUL7C0BIyyZrbskm9mRl
CERoZGiqI6a5JggkRhdOcAWBGCliny2FE4qiZMQ1EjsusKEZ3O8//kCd0T7H
5roRbq1nCtUGQiygFkAIfdPOMz5ePn/X23hte/lUxfwee5DpkzraZWio7odD
AMmxM4S2tmZoBH2zA34e81SFNJxuYdimGY3oTYKrxLzQ+YPPC5CFN4ffFfAQ
/DDlk7UJDzCdvzyF5XWlsouDh1qGWvzEY7KEL2g/09NvJNLrgVpz2HsoUJRn
7DYhEOJcSS5MkiyjgSr6XnTJmJDi2Ut00lrGjAiyCODVct2JHIFcSn7l3CEh
ELwcQiC8M0luwpTjFTcBoeDRAmXB9ACEGPG47wRGVv3s6+2o726BQIwK0nN6
rnQ8DsQ4nMj8aaEG9/LKkrvCdDOo6caw6M9gJzowwglU9XIcwk5QOSt6RXSV
XYfk4thzel0IK2q2S5aQ3hKOcm82/5HrqmmjUITlgeotHe43Lev+1KQSx8jz
zz61cOGiVgJXmGPqPa9lme+Bjp9pQRujBWFUgVDAVwP1/X99mj3oW2NAba9p
D9pMu5LhxgOjhamZqhbYOfoSzz//nB33+edY6TxGLlAMIQgZHIAxEkySAJJ6
XomJum+OHv0l7BmjsUjmuiGSWY9nkahL34RADOvmasCAEI5Oqh2G1V1n+BxA
GoRj+CzWaIvJIY2NFnZcuxKQADWpw0xghUN0XpfHnxH8S6T7KTSjo9N5fZIV
BQ85qRWif1E6Jd6ETJ+aM14SOOHRkMTnk1yL5FfqAIV9izjEMZJACBogMQh5
6KFv6j6Rjf7inXfec/fd6hUSKPrXYlI/N3Mvm762WNanrLmekb6OE09+93ET
JFmd0ZrgPzlS6jnxd1+4Q4ZbV+fJJ76jX2kY3+/6hr596ckvCzno3l4cPbUV
soogxqhvehZe/MEL6+srWqmfqxvqJDRgfaVdAUJwgABCtCzMoAVkb4V2EBgE
MJgnZHeTcMyd4U9gQ3uemylr/fJCVf/qKPqJH0X3p3ao9ruPr37rkYe0gHbr
c889pfdJDEJuv/EUWLeXZ8mjwQXEA9KIEn41hs4S/29BIFOrhjfM8RUqs+hP
Z3H2V6fjbcimacll9ciLu0Hi4E68pdZb6kGzKFk9lOqoh/K7whWxM8QkQ0OX
tCBMog202ZUNi78ILOlqnrtkcqnaoR8lqXRm3INK5/zGeXDI9Zw8KQsCCDmY
HGIT5HOTsT/Em5e929+Zc14mhkwZ3cOyNaynZlwRjYBVgoDDQmw4ertOmhtk
8aJASG3HuIiV9aFKIKZ2/doCQ2sLQx6LUa+IuTjqcJpHDA8woyCQ2eXeLPkl
TzMEFRgl1ZSRJkOC9idBIoaMV9uDE6TVATwhiSsjAjyX9AaLgz7uJxFEdNij
hdWpJsnWYnTGdjXYGSzFVUyqzjc63KUYrqD7YR6wMLvPShDmDScJnzioeeJw
thCUEZIZ7D7xfrUDWKtRml7Lhk5vPKeCGOG80hk7QGgaPdJ28ACYLMlHV4vA
AExiZtExybghKy9Lpw4U83kNivQ/q0svlKJTMLm88X4q7HBTydYnJXHxRTDP
BWk88/QTsjXtb56yvObJYSEHDQiaEtpGNpct1Xm9mfX207JMGyDkxy8+Pzl4
CjwjdLFcm9EO1cKQjoFD1CvtQSBEY6vdAjDUDUCINiCxGqBCaQwd2o5obquZ
ouvDjXsSlNkPdSTryXAJ8rkTtTzEZqV7q5ZLi1uGgXJaAiMG24FwjDbTuTRy
JTFCEq5J66nQO1FxNzfTaka+LZBRk/qw3lpij8ThQPFQSDVol5nnLaTn2Lw1
r2Po4nWI1OnTFG8mh3VSeM907RIQovWDZ7odeIRMwLFiYAUPjz0veQgm7iQS
ZAk4yQMc5/HFtXSVLFYtR14XYqvzvj0ZkM77sMK6YfBjZM6NnZowlf4VDKZI
9Pe/97T+1X0r4JGVpP/u413/+QpBFoEENZYfeOB+NXwaIQnoxGv/0/Y88/P/
Q/vR/tX+5duPqjN4VB566BuHD71opeh+UxeMsYzmkQFQhI4iIAEI0WZCINo/
IEQPMrIt2kY4QRAL7KFe0TTI2kzwA5eUTlOHU8f0OHMUoMXVnXXtQTvX0fWt
fiIsJETEnnXWOgv15C8DIaALdVs4RC1JEK4V0pNNS+3PDMe8W+sbX+xVG5vr
FuoQzBgotfV0ndR8Ta9B+J/Xr386NtKfIJBga37l7o6keYouCMQqvLRSSf3d
x5dC/vt0bKnJwNWvKOCrzRyB6FM9oVoNhJDdrOrfNDmJoJeR8rCTYG9EqmVu
3TCpequDQ7CYMqYX6lsHkEMwsmtrNmNqCULUBwp2HND0iMl2kyljLtjJ4STi
IzTi+S+6CuyQQAyZuVBScYO4+uvU+jDOEC1YfC3Pi1k5fR8sSqiVRXIIBjpG
IJO9R5LKL8APN6ZOVrEXeMh+/e2HmbopWUItC+8mDg2de3ElCy5f5kEN8+Ev
leIid2yJsDzOJaPvGl964nqKeTLWirnLrpy3MFPE5nKQwM3jgu18gkZ8wa5d
9wnXZhdA6p+96KN3dmLaubXCve79SFxhvNW1/57yW4Pl0wNDbWrUPdSJtFRH
90IbGm2q1up+0HLLAI3W/L42YOGnD3ZBIOX2l7jf4vodshEOh/SvUIcMPe+6
012/ZGqsbWTL9BWwwWQfFicAHnr9nq/0ASEchOhTU/jlegWfhgyrFkx0otzv
OEc/ZG9WAHqnxh5qQfILdwfd43DmTl9a4IeOPfA2FCMsXKADPCFJ46Bca6dq
xAxV7HgzOPwtOvM0k7P44zWyNvL7Z6I0Pkl9FieZAEJ28lJ6gCU3r1nsrwA8
FjfHvUpd0W+QOBCKiEuXT50h1iO0rEO8e+bndJJSeqYfkt8zOhHU58aGrNQL
IGS9tsqlj8MxVCeMvROm+ltwWWib7c21pPNJz4uw0H9OvZtiEwhZO/Xl368P
6lrsVF4SApnpeFZ3FPk78GwFnCCEaD+CxFlOkNWTOgkImRxq11U+cviFbz3y
0N8F9RItA0K++eDd8DRkx2XNTb90cUJ2XwhBqEPfXh58eKP8w7u+dCcN0oWe
CPwVn7/jDuEQMpGDM8dIGo5nAB7AIWED7dDK3u1uCuE8/vhj9OTY0Ze0pY5I
091COAZwohcs2KN0ppujUN+WWI+2BIQIjWi97syOt9r8HENwav0vQCCW73/W
zIEpmZhoYbWljqvPs/jV7WAPQY6Bnv8Q2KiMD2i40E0yRYhGnWCH/+k939/T
pu1b7sedITG0cLARkFLGBimiFGObWHXpShLvEALxandQWz/+YB1CiJqwB3Lx
Vllgpwrq0K/MYRLiL9qh1nhPtNI4Ib/KtFb2WDS5tMVbY7NnFvaSODSxLcqX
yXyrWfgpDC+T6Dgo8+GlBZ7HA2IxbpUEfig0czPwJ2WAYujiRBF92vQq3yHl
evUv3YMNcv7yjIMQ4Ifa9PQbe4p/lU6cDzAxEo9EQpnQoxrrbmVJH6NtCa+S
ZB8Tg11a8CrhLGhkUM/YD4R4SzwhefZrtqCe6OrEoBHj7lWt5waPzc1W+3o7
QCAANuHDIuDxxBk8NpT848Fx+OFJJX4WjSC1kZmnvKIxaATXkCaYvV0nhb6Y
8Y2/txTXiElIGn71HV7qt/4QTa9N6FwmlnqHpn8pQKKvNLwEmGIjqGW8PRp5
vW2oDqMtddzYK7JR/pEuGRxpbaBB0wYJqiGrVAZlqL+DiqWAkDgdUvceK/WO
1YlryqaXufAGIGRjrlcXnWVNbIU0LIwy3KGp+vnLWWBleDIQRYK+hPYGlpAR
169Qk/CAjjbgWAsXLuJwAIRMjvbrPZz9cHNNxp0JeExM9QaX4IAMlHjLiVB8
HGeXl3jTb738iq7vzWa1k+TFS8YxWcyeUAM1ohYEYBNPyE4uguEghFZ0gwh+
FK1zEYQcfJrGvgjXVzfnRtVwYLXcQfpzx5mzp6cuCoqsjj3HPVMLRTB17vgZ
biIfF6Rx32g7jjtLV0HPgpeH86PEASbvwx7OL8iA7BdISoCNvsKdgi/FyJ+9
L+D6aAw/cm17+vL4M1ofKomvAkJ0C+nKqjNfuusu4YEhzRcWS3ff9fdfvffu
mTFzJAoGyFhrQF78wQuHD72ofV6onpWN/pdvP6rJPuabuTzIgZCioAuhEMMq
b9+70/sA3gw1jdizTz/R29UmGHC65z/UB9l9TYHN/fK9p810BkeKLQfviuCE
gI1QEJEUgRB6op/LvsM/we4LMGxvbegxFLQQGtGDoGMJBghUgHC0rAX93N01
MFI4C/0227NmIqVe7fnJJ74TnLqrf64/xGrWhAiLaYzMT6mfOkHD0kspFMmy
xoKMycHwY3yxV6BCN9gf/3Dtxo1Mev3/K/wJiqA3fvZXp9+t9R3AG9kvsTe8
7feSYopuEC+94Q0OPJKqN3LtMpwhQiNL26Zdqc7TQy1sbM+FdKql63nZXwiu
7p+5sjHnbhBBERkjoYWiyOdE3wkZEU8YgaR6qlJnagxCsCqrIXMBMmoi514P
4sNFEst+DUXxP/7hEzRAqDLDRJ76cTcDCXxxfULT/xjA0LeMDbJ4MWaDOA5x
NogW9MTFsQn3UbhwaKgdc2ljvjcWHidohcBFse1msvnLQZ17ARFRvCgw292U
6/+WXhGNM9mj/m8MGDyII0tKDdwm8YfowmmDBIH4RYxRls7UkaQ/LPObYzEC
UTMkEACtr0EOC0yiS0ZWiz7rS6X+jtfw/wjlXqhvydCDlGIyaoI/Eb+9GdKr
B8vmV1zequgSV9aHdGiLqUVPVoxJdCcQmFC346SqGJ+YUzRAEQQHMKOuAudE
0JshYqV3cmyRtXM8EnqxxLvFZSG8sbowrAVACFtqjqlpKbQNS5kJxFR9JQQi
KKJly9/cXANLwO/SsjbQbt37oQ3YA/JWrOTQhGP0ePf19cAzoXovia6k6GZR
6fxEAnd1IpE1KwIVYkOxZhr/UoMPy6vTlOEWuDLxsWCUR0LIr0hV7etq813p
8KXxSU9q3vOE9LwSg5DYZHMu0ytNrA//Ku75cr2yXl9s6T1wWgvhjDjGgd/1
4nR3U1p0rti2MHKSuIxsum5sRMVdk01rrBJKOdOE0fAKYTpAchzivp1kvV+d
lvCjZfOfu3eFKCcOkFiGXV/FNyraaM6J1ZDq34e/+SA+ui/m/ExZc6Nk727+
4vUjssvCJEIFAhgy6FA6Zb7hfEIacV4TXg4jLuZa68h8CY08/vhj+lamX2BG
e1iuLQkAEB7iT7vCuyIMA7tDe9b2gBA8G+qJ+qavQskeC39YbuPqjABDMUU3
Y7rurMdH0d4MuuRnQdCTPXOOcI+Fl3SylbEBbM3t0FOdpKeXSQYzQmCU6rqB
qdUCjRzs/dDRBTDQPL9+/VNyXWXHF+ang3JRr27anq6TA6W2oamOyqW0uEyC
QBItEf9XQML5qEUHiEDC3GxFR4wpH7XVOQ+jEIiJCa6stPyd8QGAEzIIbH/1
So0NSPKlG1srE1Eg5lit8rZzCZqqreU2d7w6hJS3jCMk1TemVxPRD8QcZMt0
+QiMgkD0LxKOtwtCJocTmsfNEN1wxgj6qA57doM6t4yps1ZeH63FMmXeXCUV
eZDI1bAnjkGj28uVzmLlF1kxUl+TmEKsRFEOmtuGoIKQeyHsYjVfXOqc94M7
SVDh0A6BQwekwOiKWK5HcNGoYwIecVffr3YIVVK9t5lzkiEQjRj9J72llsuz
e0psNghbFXeDOITAx8VM2TKbRn6hN5IWgAFD/e2CPSa2trvqPhB1MlYFSXBI
2RQ1M+LK1NqALpYQiMuDdP16SXhSMNLXeBNeGp/rsXB8+bTuEPKqSCqJZWcs
WkdhPgJG75zQDbA02kZWrL6VidHUGCsZz2c12YQgKixBoA2XCEQOJsLWnn9u
tdo3euZNrRQweObpJ6CtmkMsgBAnpn7vB8+iqaX1rIFiSgaotk/2YHnNwZei
r9RJ43wuLYBPfBuBBPAtJFLqDCYYA5teJIdkqGBmIpRNPxdvj1ybdh7Lzlvx
lzCAtcUJghGxRplTVS3PKIdz6Ld7nCgLxwT5Nb18hGcYcPfhxKEHByGy8vuF
WpKwi68ROImNfstgjYz4ZM+RlgWCLwweEgL506cfOPlWA0ghNt5vGZipL+pA
HCtBDvBIM4y3OYWu+07QByt2uOVZFMEJnpA6dQytCuce/BAaESrg/tRxuStI
E9YVZBB4f+pGrc+bbFcwFn2Ci9pGpyYrzFypv7ejFNx00CqQ7sG+a3lupmwi
okHGXAjkW488ZCkJuYAqcqP6Vtv0dZzo+s9X1GSm9ZbQzoUftKw1pZ4TW+cs
UwydcwvylnpxY1rh3ZCxu7xQpSchHS97I4FD1LG5oBw4FyoCIGASJxrzW1NT
DCv1qVOwfm6uIQQNVBDauZmX0tPQCSbpW22mq6w9HwBFYjeI3/zr6yu4a1zh
TYewEQvuETBJC8BwqSRQIfPtTg/1pLG1oSvS0/46eEMQZXyx9wCnR8IGcWky
d1n4vwdQQYAWVEt3aCEIgRtECy6y6hGZmMI6XxnWPgVgxgJ7MK5Zo9/iWslU
RxZLHoWx7ObZ3mxv0dRbUCSOPlhA/1xGVNBbERwCSTUxxEyrYzn3/WIxLaMz
9VyFzKbwIQ+CrDoKxLCgDWK7rwWhEdwgXhpGeCm5LlNjrzsCWWp/pKj+YQ6Q
PPd2r/JL7mewyi+Dx4R2XJUrSS/104FJi9tWdnk/1mgGJPJ6taScaCfXQ+EY
3a4xZ6Plz3E1XI8KZW4HJYq9mqTvnBAGSKALu/VQGp6QhApCDRdngyzVqo5A
6iFfhqZl3RUm6zFu5dJ0z3DhghRDu1Z6EoRG70L1TBy3iq8+MSyggsdiBEKc
K9uy6VvbYH0Ijgr0Y7vQawOCJcIkg90nxrsMNKpjG/O9oDJTsAmMYvWH3DpL
lV0qvXvm57JHReuM2hgBbrSytayXNmLsQ90n8MOYxGsgUiIRluWijpaFGdA1
JTw3eKabr8wxuL2GnWVZe8PXodtGs1don0iIGwLv6chiASHyYu/kJXtXA5A0
4EIR2nkA8OcSPqQ3YiIEAtzewReN5cIsa2Co01KZgu66X1NjfYSAneAWeSUZ
2GguWsf2ljS6Ouezb/DP1q5RIvGEINsec1MBIXGybewJwQ2SOAdi90LRiLf0
jRT/3Ql0UK8g7C89ok7+p9NHgQ0GdexW0oMeg5+4e44ZUEcXYtEgOFv7ACiy
n2ME/DPX+0JcAkYNKTldOEAI44+DcX6mLEDC06o7FoGU+mIpRun8gQG0MbFI
WWEZ050g7kHSB8t6eM9fnnnpyIv4IoQoKmMDLv/oiuuMYaZ+E0TAjh19Sfj5
xR+88IvXj2QVDGc6fLeuFuJhERdmJwRMcUyHAa5LVoykNHJNkni9/0sEOZMQ
+U3d+CcFvpkeN42zDWMYgWJeDIVjDG7lSetFxILHWHAI6XthEisKXEAg/T1t
SI3hQ9DI93SdvKWjY7+2tD0eS7UnPpDreaWYhAri2+BTTdJkHE7EO8QH4l/p
X6Gmz278yViCpV7gCqhD26DqwJaCHA77BUXqS4N7O48sHUYtVP/Z072UZeer
335Yd/aFmxLsqftGEFOq58WYigikJQiR+Yb1oYEyFamgYyYLtZWV6bxKikeC
ZCDNChqRFKN/yRvFVOHA96oHWtjdK3O/B0LgRcisz5WOx/QYzl0HJUsXV0lM
ZkjQCBPDP/7hEz3O+tXBJBCPj+hTkADHCPkpRSGRxJ2yvFVBMIR3mjdt6aIi
OhFE4+Pf0k8cIF6izp+j3SjFrFavgkB0Lg4YHIdsvTclKy8TPz30Fpny5cBK
Ak7YLCyvT0SVuoQE4ssIqWnEZH+JxdyirQ9Vl0xdLSbKGuVgaSiDIutDE+Xj
6hVkp1Su3P9954SpyMaVUwZeIz3BZ9A7eVESxCpvhnQPvdW1JW9XGS9yFjwO
Ev4x8gPTeay81oErqPqK54Hghdsd2X2vz0sBGv9KdsGL8MIDgSjrcZw4TEDO
DrEViBZ0jIl5bD1hcOEeqYcsVH5OJrJAjvlA/vCJDkod+awtZuUvdbPptzA2
a1ElO90DXu+eQ3BQ9wDIamsyDgjR64jSddaT2owstRvlDLBFsqgxO6JlCCPB
XUCaYhCnuDHQi2H/5OMNLq6e9Gv10k7lJX2CQ0BTJl9T6pOxcNdN4nQiOyZX
GZ2ozvYPT/bp3ham0hWPQcjtxGLiszb3acEBQhUY7QQtdx9/P3EfMY8gCHVr
Yy6304xxC8SAZGxkwMTQmg3x9pXF85cnBUKe/O7jMFdNa73vGTwhW2/fC/ww
HJKXXwGBxFRe42kcyPksrsQfkmh63E7cJNm4nifSNhE2FuxFpxMJNZ42GEYN
iGkgFw7hWaXuBqnn1XgP7pKFXxMfSM9/UPVe5lsnqH/3Y5nepg9kv3QYFkAg
+rzSWCluA4+0mK7rxI8Y0kDz8JULVUuZCQyxpfnKcIxSyKbRvzro0lib14sR
Arl84R3HNi6W5ZmqGD5NIR2HyOL4Zu/v7CYKZh6M0KemnLu5nPvtx2KMDJ8X
DzVubagV0kAga7ATnkmMQDio8Imn7QiBvDG92thdxRYLhwiEaE7tVBCr3LQ2
lbhBPC0XB0gSitKUOWxwyXVCivDDEYhuYIFeTsFrw+3XEpiBNyZ/aY+CeeJM
Xi2Esg5W3EFgSQsVqwq0qCZYGOMQQYtYszROsYGGGqYPKxQcLGbExGennuDe
d7aqe0j2EnLRWwhpjEKMBFbMGH28iRtkZry/JRmVhf6O19jezn2upwW2r1W1
Z5NTqw5lKcPVITVDHbC5wr/+LUmUlLMXFKFQndrqyFG1i4OHproOg0b0lZFD
IpRCKaukispOoBAgtygjImvFlFlbevII8TVCbLExcuIuhAfnA0CqcXc923u9
PMvSHdqrTeOcmZACZqkZeocfPvSj423/bjyWQKDFCa8FUmtRkm9KtS71IWGB
Jq0LWVDiLWS7n4uLvPCToPZ/LiH8U3GY2TRi5trDG23HASGGfIJyLDEg7ccF
Qt1eW7xg8JTfoqZInyMiQREk4FhjzqLgCUksftHXUQQhMVm0uD3OARgvidjp
RrixZTpdRlU4JJaPQyCX3+qq9XW1qWmBcoSEsRhknSkDSE1eHUibWSrNzmqc
pdsSh8Qrdf8sVu3aOQ2VMrjxwFLK2Qp0TqaJOTtBdM4jCI7itFt1hhJypsCz
UAXu+lBYxC2EaRp5kfpKKDRjxcg+OC/Lsjh6SjNfKxyTu5rnTplomM0lV+Ym
h9r10u7rOJEoqzz33FN/Fgt0J6/brh4a3zF3LKiF0NifkdJSzzNnnVef3N66
dmp//MM1NQugjA0UAzHUhXE3SEtQ5CPWBKWaEQgFX27c+GxspN+8H38p/KDJ
LhSBR4JA1Ein1WfsMxFCEFoQZkgQyPVmpXeWUVsFybCekjHQ0UmE4SvjjgZV
kN0A3pwzIATywcaUb9bkvYmCMhivDPWFGK4mre4q8WQZJHnjTAqYIcCq24/F
yH5xl5Jx2XKbYvPYkIGQjgF9xj4Bq0XS/UKcERP7FmK25+pUe+wAERoJBeOy
qrI3cm2x/RwgOH9QbZ2brWpZY5WokO2HQ+IxNxpGQG66sWO/B8EXv9lWLk+z
IEDy6/qI1XfbqcY4xEvp4QwpRmS4Rv7o6d/iqbkLNGkrW1PGxaq87Y5rvXsz
UbJLS/3dbczor396zWoHh1c3ybOJGLv7jng19XadFIZE0QUeSBZeCegiQx0e
dlnfc2xqvb6thOynWEROIyDsoRsYEOLA0rN4dGhdKY2VhRiaoUh14DXXNqeN
5FSfsa5cxrx0wrM/CDpg92NyBbaYSbGTIho5WQLXhIdIwAOMhr7yuTb4hPUB
6E7gaWTZc4WEB+Jc4/iP9aYKu7VJqAgCOXkfXC93RJOk7FLqTb6y0M+lqR68
+jJksnrYLF9QV7Ge2nNpfNITc2JzKTtitU5yryzRhLwiwBgnyDkCYyZnxkBx
MYRI4Af21OTThzrVZsb6ZbU1pCSGCFhm3wYBeXVSUAGRw1hhnsH88L8muR9i
2ZCprh/rtxOhCBqeov1GO7bgLVPLdenVARTq9qN/+EpzPbX/syZQGiX12QMx
QiPx6ROMu5kTcoq7iomUhW8zK29ZHkPtlB2Uuf/dx1fVCIJj6/XAuianoIjA
hs1wt62+kte2Wz/5BS/WQ462TvavByHGkQ7YA36IDh3UFVZBJp9es0ncLRHI
2tpEjGooh5dAEZOVnymHmIKdvt3PEZAo8lFjEHLLs2Do3q31CYFQbfbGZ5/p
WH89AkncIEkgpp4n5Cb1X65eMeumT8+9LbZkbzFyYOXyuQkiSjqjs786rbk/
NW4sRhPCrMYYKR13BDLX95NPtiuJH8aTVZvW53EK8w+ER1IvcJl13wAAoM9G
JKoZ0ySYy/gk2vNZik3PIzPNP/7hE1mxlgiE+burhaudWTD4oSYrLPvlbhBv
pqbrVZYGDxFzufHprhqeh+vXdmWRPXDA3SVAom9/+2GdzfiJJvgGEnZXi8Ya
l4IhtEBcEQhh5nvLhNw9cHLNSuewK/1LuCQBhF6TyKoS5yCE5fOXp9S0oD6r
GdPjyvkMU+W1bIAiN3Lt+pgKQgXA5KTAQnFGjF/itYUh3znQNB5z4cDxrlc3
5o11FueebAX+gOU6jffHYTtkz/VtW1ePriAIRI2ACy4Oxx6VPNcpASEmKtWX
sXPJWZ7sPdIoPSrbsTp+WNd3deRo7OPSJbZKLgEu4m2TwdqDIrkMnV77q/NZ
aRJggOwsb6FfnzmCyBWKXh7UwHxrpZYpEGNS54sTSJzpEBenuwNP76RJtU90
yF6Ya2LMfDJLo23vnvn5wlSJEcMWECbQRFvmEmKGwMbOb+o6SjxjvRmm5zhS
0CzVa0ELWomiqb//SRv331rqR7DC2pgfonfKGcUzRIx+bXNWzV1tWh/bYsJV
OHzwutRy+Saf8juBVijOr4iWE09F7FDC0eR+p6I/RAfFmWMqK5ay/VtyaQFa
IK5aULnXBkXwoHHTBrrEavq58W/zCj575RGHH9kKys94TjiWZwkBw/Qvo+1s
XqpfgRXjI+KvgLxh9LFAvl3dnApVWmoOTnRbOuoYHzg52XPEEUgMXWKYSnWb
A9wg7iDagzoF62k3dhhSkIPjENwI/ujppaR/BQC2Vi0rxHEIOVM810I16lLH
W21NyipHXyq6DvZDDsRKdBEFD4Q9Ejulo9tXK1YT7fYVP+JDu8vCQzMZlSvA
MJ2Czp2YlE6TVx8h5jgWc5sgRBBuanWgp+skyqLXr39qz/hfEYLxdvWj1aIP
JEtFyRNyW1ag2zKmWZa3sh/wIPjiPhD8IVevZB4SE/gKuTxD/e06O24MT/UN
edP9HsMSAsFjk4R4rjcngToIQU6TQq68nGVfZIiJUKxtL+MMEQ6hTm4yyXUc
op5Mr00IKrR0g+gQsk28P60Y7rnJGHjE28u8nj514tlnn1J7/Mnn1J75v/4f
Wav5jfOvj5qimlcq0YJRSXMEsnL6vlDALpzjp7v6ufYj03/yxP/6zrcflsXk
7HSa9aWSXhocQguMiZ4a/fvDH74gEw9ZIu6e+n/48IsvfP8ZHjpdCDBVkoS7
Lya5lvXHq9DiqSi4Lwxr+bMvyKGNt64sakGfLFvZ4lDbSMtTY69bzdBAjche
PkHTjG4E11yWVhbDDK3hvOwZDPVhdX9CMoQTEtenk60vD3bGCMTq5Pb1OOLt
73gNdZctM52ZbokWKA2j4fXwDXkx7vfYc320etxiEPLu8tsT5eOWFBMOCuFt
evqN9yo/dvOhlURn6LOl8ywMOdCyc8/t3flKn6xhnLaZQZFqn4MQDmQGNNBQ
ndVJzsLM5FtqNhkvZ7iCujBaNpX4vLCOYyELZk2YWoUJbudlZax47uacxlOQ
w9zj+VSdenY8KV6aNrD6TRTCa4gQlIHaSkVgk50PFjmDTIHX6vtE/ARyrLNJ
4yiMYwPjpgYQQkEZwNjomTfpj447MHQKFsfkzFiclptESTyLxzVDZCKXpnoS
7GHoIkihNjb2ZjSOPXRbapyJg7hKfMu/GHX4csijP6dbEZk7mXvq0PEVV1m9
+vidr2Vid2MPC4Sg/kHTxkSy6IPG3wxKCLjglNDYknui7ulbQjkGUfJEZtzX
0EU0aDFtVedoKDcioJrrJieErJ36stnB3BOinmTE5qChpBF2pJGwQXSztXK5
tDCXIQ+l3JsXfXYcwgvQH0a3vDLT5j8JOKTa828OijTNp9rvG20WlHnuuaeE
QLTBLe11PQhBIL6xvbXhLxmhjgSHyCaSCHNLZ8jtoB0SbEksgpuN7B5pQWA5
JI9iSmoCaZI973lCAhOVKm8hKa/9vwWBtJQEoTkCqbeqQCfs4RrsBzThjaQI
rzftQdeXpB5L89kY9Iq9bL963tJ7hUNAIB7xIQTjO4wpms0g5BIgwfUS1Qa7
T8jWXP3I9FRdSVU4xE2zIw2MJtQC2RSneSQ4xAvYyR558ktLuCJTK1v/uc99
7p+/9bDaA1//5h2f//yX/uHv+2cvahLtd6numYv9zzphWwhEuyJAg9H/2tcf
PHbsJVmiJ7/7f2pvWtB0fqb33z68tKAT11NDjvlPXjlkjoWPVnQIMtkFwHgG
4VR4/4Ui1BNLeRvshLxquWYLs/vFX5x7g6yo+qNj6W7hPom1QeIF828E5VUy
pkEgLmyCA8TwydYUKAVd0JgfIrhFsmqSk5u4O/CEN0KKLpNQXj4JAtHrLkYg
Gqvu9zZ1e5BYpC2Jp+gdC/8hrg1HmIZMouufXkOZH78HWboHNEDIxFLvZOko
WqxgLR1R0Mu2qfV/OPKggxBYK+qSbmPydGhkGdebE1plXARFVudLiQaLUIel
by+WWCbivzBVMqQRitOpUQw348kEd0e1bDgkWzPVY84QAY+84LKWrQX3iHlI
QifZg36ubmxUOwyQrMwwOxY2AIdgcRxs+IxM+2eEmfhjyp2TgIzYwoWLN0OW
Ma4PnFEJTmBY4j0no6RWHXgNv1N9fowLKrsjY6rpvD5Bko1mRqjzZPRuB5/o
1OL709k4ZuXriwllwksG4/qQWY/LxgV8u0q0hfwO3EEk9cAHJtyPZ0l4aWyu
N47yUPH2U2OVn/NeXRg8FFeTcXn5mIUSG3RLGStliosjQW4R6VeqgbNefXBl
e7ptoqxzvf4okTy13P7PjkD0NtNOElUQQTjtfCQkEsZukKRLupkTNkiBedJk
+j1yYa0Zh+gSE8U4lxd15Q3Pr2SaTRj/9FfWT35hzgazejOXs9NvjQg0MTY2
MoA2ZuIf0EvV/yXygi+CGr5xK4KQG1bp1cLHTlu9HadE3HTEkfCOAlTEhFUS
eHmmPBRLsZg4FnObTQgEYXPtVvfD+GLvX49AUGgvMlFviUB2gwiq7ucYWjR5
J/Yhh8SNnCzq19Rrc4JDyWa63EIgs+X2cwNHQCCuVxZvlhA1YxyCqrmakzZl
fXoH++b1ArmyeD0qsyscEiMHKEzcopxsqEMxiTmLkYYMEIEM9H/ir5KhcxAi
Yxfq09VfPvo/9e8rJ9re3zEFPI2nJhGrI0dHT3xj9vS3tjv/cf2sFTJof8vY
UxkOubZrlUc6XqsvlQAhMs36VgiE0weE3HPP3cIG5y/PDE3/kn8FQgx9hUK3
2uHpUyd4V2vwf/jDFwRCyOVEJLmvt0MbQJjRxtomC75cMwU2faWV+i2znsEz
PaZm/Bsj2GhZ3/ZZUYOau0r0quGI+DrUKxnrnvJb2oPWa2NDR7ur+EC8acAX
1yeETPzayWRY1mqOQGK6aYxDMtGG/N+gWzVqDIS+V71CbuIDIRDT1tUzF2J/
2iDDA04cnesZGGpD9ioWFqPuapbechtPnPlAav0T5eNxFjnWUCvZRhfdDQck
EFn25Urn2tpU8UzdE5LYSr26i1Ak5AGdJICiBfNaVDvmhk/+4vWjx468rE+B
B6ScACREW/ScahtZ2DfajpuK13xJgASos7pgtUs8cGPJv5NZ9VXZxCYpraAx
rp0LCGmee/2TDwBysb9iJE9Q0gLlTmQ14tLAlPqVJTUZkDyKFJ94I1d6L7pB
EhwyN5hJ06yH7GyZP1cn025jNohHYbzhCWFjjUNCDtHZ1TZni1xTqInqGxjD
byHyhoyNPNTpnVy3mlmWoKot9WkAgxpD4I1Qbma5XomPMpLXDjAZ1YHXuPTm
cMiZIVfHHtY+SYKODX0jSkKBHXozcNsQS2EDjQZQ/GYI3OA8IRbJKaifRuoL
ud7mcmzGGwIkRRBCXMYpPbCm/0w2yJ4npBEVXKtHeRwaN8ch5kwj3NaYj59K
TXwESwQkltsfnug7oakfOiHmOQyiHPrEM784eorIvttl/CqAEBl9wIBFXgrw
4wAQopbdVAU66AE+CjwtAJ4kCcjvf10XdYYRzovF7NWSLh7uYBSEGAhupf8W
BKIGbCiCEK9Ptx8CwQ2SwAwCLrEr4wAPiTYb6m8nrmRBmVbb60WhQV4aa5vr
+4kDj5jgykGvR4qaiTPEKQRqMQ4RchAOQapCkMBxiL/hZS4DSBuJQYUXR2Oi
vRskUmu5QoLXrduvyS4/GyogvDG9KpM3vTYBivhZx4BsronmHX7x4uChRulR
Lb/81D0b5R/JQAsefPWr9wpC/PP/T9u7f8dVXfm+f1D/3t2j7xnnnHHO7Us4
SYfQSSCEx+0kDAhkkDtCEsCBpG+TkIMNSXewzW2w6aaxZGMJq9HbKqkMertU
KgXrYaxSSaelkqotGXPBhIcd2n0/c333nlrauyScpK/GGjW2du3H2mvv2vO7
5vzO73zgPmbrdIxv2dFBiIr8ygXhIEQnwjKCczgCW3IEI2ZMjvLvbXd8lWPK
W3Ll/csCIdxrcAIrQS80LYBe7rjtyyzTE+CE9PpYf8uXTAlQtECdjnHmk5Wc
y/a64zbDIR9t6ZhsL7cPoIhusCXLUlHW7hxHQRluCk2eEEAIN4hL3lY+iXT8
8qTTRhCX0285dlspXVpBDY7Dg5d5MwDPXjz9a6mTGVEkRSAMYDHOjl82NGK1
50LN3OuB4GeOsjQvRhXbpU4WQf1tmTKOHCcx8Tbzmj68bM8uvBYHYngAZEre
LvfH4UJvSpV1G4cZFX1R3EWMggXl5woCA+AKMTrmh1sUSeFztO+YpMNUFff7
33/YfONzY6ALmk/8VXOEb5/75dOeFqGTMu9WuVus2/6nf97bZZNZBUfM6TE3
BtoxEktIQfI4jtCIokUm1184CrApF9v1a+KHxiXoCHp/qt6NcjqUvSJRkbyL
ox50XDNUkEyUhF4pR0AADwRlyYzpZjpRXqP18mZNLh1P6WXZ8ExEDnEtdzps
UYmwjeImKienJGhxVmkD/Z20YqHH42K+rx/BfhpB6lwLsrylC1VaTCxxVjC3
3jV1zXswVwB+JF61/n1ewKWRS2w5k1aP4kRO0N32SEhnOOjOKQFKwSD354Ai
lDuTBxtn+1+WXCoHMagW64Scuv3frr4j5Lk3GyT/bdNwjNwg9ltbtAa6AFEI
9fGb9WwRZ6apnb84zpaAEH7adK/Sep9sd8JbDp9cNUZccS45T5zmKncEN3E9
zWLere0GQhppRQmQzN6ekEaaq3tGc5CdG2coIs5WVbKM3CMqFpPZ90bcLwpb
9Ha1/Ef5QDKOCx+NK+8suyhZHntoQSMQAwOhgreCm0uKZ1qzm0ukXqvwquGi
ONHS3HhToOLKqMx/P41U0Zamu/mKJ+Fc30EWsMIKDWRwiAcO1OeNyHfK+2e0
4zmQAAbxwysreRySJ6O6A0Q/RpENJFQVZlJtuwE2b2/X1x/64Y9iqV7s8mN/
/TesX1gv8e9Pf/zwxqmvOgjhVYA1f+jhB7k0xsoKIR1+BuyRASGfXrXSn1aO
PPhJBvq7DNi0HOITAKDQj+ABppZvAR6V6TJNgIG7LBDigKG74xjL3w6VK6VV
xbdso4PrW0EdlsEeDkKEdsAA5sItdIutykq+ZRfGR1CqsVUVRhotDwKruECd
HewhZogCNzabXhuRg6tWei2W1hEVZGtn4elgEGdVNdtXGgIRE/XNo5KO4U45
90aN/pwcmR7oTEwJIKFU69XPRC6OGFEk7pFKFyf65OMPmRSYRhnbLw+KmMrG
SpOJ51lczuTkiVjDVvAD1MEGLs3KBl66zjJiAgIxcdSdeq26QCWtyIHPzFTz
a3Pg7xRc1SvU0jbfPLotYWeM38NgEhV84X5h3VRs7kTLEc1na6b8bokey/U5
864b3BpR9TQl0iYuoJAggwGiM67rXo+E+zBMdqSRXueZCIGwvdQ2/CepHHx6
ErMgREbFQrlkx7Y3I8S+8yBELr48PvEGLtIZHaFlmKXKwXHfiPFtLpaPtPy9
RGKF1kBcbKaJf0wOkfAF90KDyQCqVHF8R+TeB3twiiAJNa0gvkZSN0I+SfY9
fPBZxkRnF+zxMEochrM6uZ98xO4DxeNCWeoPEOvi6GOObOUnjB0gTiJVWJmD
mLzGzsIxahxWz4D8LeKW6METr/XDK6tbp+/M+ED0JHDJAMjNNGUGoBJDkcbs
q5aNngMY5tJJ8+h3QSDbc3kPZ5j/c7ECAuHHZVVil8Y8O0wK6gnDwacGiwMj
0918Veg6Wu76BY/ExYH7BDzi6uf86Wnhx5vnlrg7QtplO2UH1rw1RSA092Cc
SapjlPcGBhIeibepN2Yuv78YHyrTeD3KcyLyan1nndwbaZYY1fUPYm/+gQ0Q
GJdxiRckiypt2Or5iil4BOFTPvmXBg651DDhbi7HcYXAxuol8x4ADj9NBd5F
6qOxu8MPnS4GIbMz2/2Jm5yK2A6Qhk5kbJ9i2/RQC5/VyddXK121sWNi67k/
xJvZlyDjKf4D1g17FM9DwSH9cxfAIdy7GIdkeKcuzhkDEgvQBKleIeSp0d69
Ech8rcYpBEKOd/4DNp0F/u2dvjC3PioQAvBwEIKZBh6wcMcdt2HZhTdAKTEI
0UEAIb9Kyw2wvr3PCi7wedsdXxXZ49lD/1MgZL5W5raCNOQY0fac5YknH2Mz
jiMQEtThtrQLC9w+FviXDRh/zgWQYHurLXWy9b2VWRY4AqO9f/9T6gbYic1Y
I6wCdHEKq5FYNha0YMycrZquwk50aY7ftbipDgACpl2sDBxm+pyhgsSxGKEO
kGEmkfbtcn+cC5NHIPwLZgBIeFKwgEEpDcRkir+o9Q22pLIS44OTrwOW2AwE
Ugp167TgoqkcMKmVkzrieAjBJH40NtBjWT1zaLX4cxkLz4jhK0GOSqk4MdzD
JfR2thgLKOi6cEPz6pH6U5KF9EKBiMshKzkOkbBGBV8wkTLcqoHLmPBvLMyu
ib8sL2dkL9ddp73y0iFG0rcXjGGmrGk1jxOzY+dRgEY4kfJtOYsBpzTpeDnN
m1YwiE+5SkAIWHbpFsZQQTApD0I8q6UpAnHMwMGtDFylezFNF4qdIfJU+BpA
iJTWQFlcIJ8MC5csVIAtxkqC9LgEDiXGKRsrfiEQIoRgYY7gFdFoCO/pIPIp
yXPC8dmA7gmEcEcYZJXa0V7yycgrJTgqJ5KF/gMxWMxbrtHiZWuV94p36bkS
JznDCQGoABUUGDJkW+nO2/pG4MBo2MUHdveRZfGM9AIkwBWi/a+fut38CUPH
jH8b0ti5hBhmAEiWy60Z4bLZiUJ8Rnquq+B+6dR7eEJiidGETbQ+IVoI2EBE
008+Nnx1rv6G225eOMAPU3aqLkjubKnnsYVz45+s9YNDxgfbujtaPJzB39xw
q9nxwbZMQEfuhdhe71ZRLsN/8BwZfSt4IOF01YVpehB3g2yvacz40XhhNsUh
mqNVCkfEYlVF4Bt3g9BOv3H895NCzftAHAk4xcJxiCRBsDsPfPs+sRmBHFIC
kX154YXDbGBv+yDikUEO65dmwRvs3tr6ChufMS9uojHi3hW+1TFny0Ue5ldP
2JYL58byPpN/WXjTiPqBmDpTOHLo8DOZoj/fe+jbJvgQXmLCIdu0yatbmMhw
5HFuypbj3lpvjENYPj02KT1VJe26P8RjKP4ZgxBR+/SS3y0tN0Yg0gMRCMFO
nb849dhf/w3LP/+7540/mYKQze47l08bCME0M1BCI9idtpd/0dv+wljP0Y3F
Ka3kAh2EdPd0sQwGAEU4CBH/hL+u4kkhCp5DOT1ABTyQX/zSrYAQe0n+9d/E
nhDeacrBueVLXwxZwGvuMwFdgECUOShPCAjNQYglRI8P8b596OEH5YfRZtwI
jsMx2ZdDMdpCR0pJ1lVod5qIqW/VzygUwifvtOme5+iV+9jjG+FtO1skbdvZ
uMH0c9UZBMLpuCk93e1CCDEVZGKpr5iXKU6DMu4Bi8vm5hvowtmnsgiCH3nX
CluqqxIlkzqZEHhx4JSqAHDL3MuhrBwMgeeJKAFWGSUmQtX+oia211Pdcl7X
HJ+5v/EPQ38w9BcmOw889bhP8Ll3giK9Xe1MvZfrc/JvMGdn6GIQokK6nFGV
ZRhMTIxsNPdIipqaMmPasMguyup5B3rzy+eA9WEzDI1EuTN12TR09IFZyXjX
Qfqs/OJ6Wpg1jrbUUoH33UCIEx2r5R5sLif1yEXGGeK0E0YMcy8YoCxgw65B
dt4SsoLXiG8ZCj7pHghh9u0LfDsxVb768YcCbAokMT6MHuOsUCYXxS7SnuWT
9Yw8A8VKOZ3yIITTsa8lih58llvAuepWO6BdD4bSZulzouL+5lEu04BKWlrX
iFUT28quap7NKnJsxgfiXpf1UO9AIRg9b1I3NZ6MMl9O3a7Xb2PofrohB52o
I1IXYRCkiqaH89+uvrN1+s7YJbLQ9m0vbeNuEMDM7m6QxBMSz+vdQWoUnZAm
09N+1P1yHrCoBJXdTLUvvvp/K89aOd2gGaLr3VhftcFZXrTC98O9SpmRJwRI
AwDIszJ2i6Q0BSEhAGGpMWcSP5VtrOK2ND+yQwWVdImPvHFpjiMDZmgs5EEI
lyk5epMeSlMI9+5zHpn84fBDLaNLFjcHDCAEQMjnbroJ6wD8AFeAPfTvs88e
qEyXTCQkCFZcDcZFu7O82ag31ldpAiHsq38d23jCo0706ae/fe21Nm0pfMIA
cvAr7ywrxAMI4b7YrO3scYGQp5/6cctLz9F+tO9R/SvGPmiEZr1KKZT8CoAH
Ykh6fqiaO8CV2QoOUcpMjEOkpyoviueSbPNR219QURhTkNjTDeLcVxYEDAAh
M6vnmYB/5bavYYst9WazfOsXP/+Vv/yL4aPfBIqwzcPfvQ9Dg9UGCYBADh14
/PM3/x8sYFgFURyESF6jMl3WHXEQoogMRh+EIxBCV+UDCYUXjylP55OPPxQy
4UXXFITQ5AkRKAJgsIFOLaKIQIiiLXzLD0Twj08AzG13fBXowpbik1geTQpC
WGDYNSbmBgk+kPMXJ7QsXwSGgJ8n08wkEHNunOVMGWJnacZEkVhCVmzk+tZ6
hgfCXWa9rD8vZwCDPyHm/N+Fazo4+bpeXJyO5eY/tFqv4Ieb0crAYUM4td48
AikFcX6eSSeBGDwe7ZUgfFPBKG7WeoAcUn4QA0TiXUq99L2knmGO5WBtTdD7
/XcZromOA0qnpZWL7ade/qXQiEwe9gX7yC1TvTkrOzI/K04I38onEEptnpNx
lGXUllionp6uH/90H/tiqTU9VxTAq8zQK/rZSJNZJBsinqplmJ4bxwBZlZau
XwowzJ45JkrJcgjMqVxsZeB5S32a3aFALkZHhpIaR2ecwiGrbcrtIUrrGuwJ
VglRV4vuhX8dhHDtwDOWGQ0+VZVeF8u/j+97hGE0DdVQzk8ODQcSqinMZoqC
CTYLzoElVC5QWq8O/HxfYZ7GZlXjDKrRGgacDkhfC8BjCCGMg0eIxOe02sEh
XbdaPKTYkxtxYymnkrbKH1FBmd08D8bzSfGtpbWeG88kwvAMb9v0f60rriEk
LBUUFfbVBkYzbt+X4ZDQee6FS/t6ocDNZhk9DkLcfDsc1QsBHMKw6HZzgaWR
PpGmlP+ivlkB2VDgj6+mX3t0W0C18wnhEDPitFBZZqzrkJJlZMTzbpA9mqtH
5hvH5+WZ2V5urhiKKBdGcef4sEIg4pxIciQGIaLUps9Dcpw9uh0fHPR1enbt
5FT1d0Ia51bG3156CyvPJ22hNs2aUhoryQdivDyuJEGAAYCQu+76+l/c8iVM
/+VLdf6Vb+RXf7sfsFE9X/n+Dx5ig298454TrUflqP/eQ98Gq7Dm5/ufOtXW
wsazM5PszpZyuTDCbMOE1FNvuPsOQtbtvdet8/7sZ08aw+fdOp0RN7U6+bpA
SFfbS0vT3eZImZlUfxjV1ZluzPQ377Ziypg5KXTx1sLm2gx6s5wfImyEe8iF
Q96uW6LN5FLdoUhcXybTboQNAqzyQzHjVsACiwwIkToZLxz+xSKDIo4d/Ttg
Bg0QwoXwqXrTD9x7h7CEYjFcl4IdLOhoXN3MmpU7lBeoq3iSlXxiQ1lgBOZr
ZQw9I8MulVKRlfKl0O75xt10kqPdccdtNk072cq3gDegBTCDbwVC2JdziZgK
eKAzhw8/wy70mYtiFzbmevmpiu/KBqwB/plvrVoR64OVdpAQNeNb9hII0VU0
tqpxagzN+JzLBkI4Dgexkm1zY4qq8F4yuYyd6i7SA/GUmZj/A9JQUR4ngahS
DxjVcQIYIIIEdt583Vs18Jvf+kxCLkNtMGPkpTj5hWXLfAk8kwwCCQ6fbrph
ouVB697CEMEH8na5f2xsWGpdwFFBjonhHgbZmLFAjtGk/qy/lnnUXeRBr1Z+
AsxGle8gAgaj4eaDdzsWE4PIcSyjttKNJcXqYWWwcSxj4GQQxfTIgBAFF3zZ
QUhImOrkCDS+VVRIal10xt0gnsxi7IJQLE9+fk3nJSGeiIJ+8lGoBnJOTBIx
Otw9YgqxAZDIQyIQshsbpK4yuGH2cT2Vj/AUfqW3+MbYx8LouJwhgAQZfYZF
TYAEACBnkRX4m58VzGCoBzuPZoCEIlbPHnx6uT5HY5kD8i2HYqBY0Jhr9PIg
RBBIxdxZsOd8Y0koUawSJZOaezb4VaROL7pLYrtDmkxtZD9j5XbcLFrKaOWM
Gc1/r3qT8YrYQ5VCiwwNlTmClUdME5AzsUKXR1OCtrKfOGBl6FgGhwBskqSY
wAZp5Gi0DkgubVTj3KXNqMBKPUgDjQ+29bQnJXqxpxvrq564et1yClalkaKf
pF4mi8e/5jgE689xCv2d7MuP1MrNdDzHSs+FGQ8E6RsEIXm9MidCcLSNUO09
H8pxKKKTOuxxqMBhhUA+uLKscEzMTbXH/rScvYeX5op+2HHzT87ujUDml5aA
H70Dr/sQfUZbKQh77NHoDxZcrgasPMtxxAT4AVpgPWDg7r+6E/zAAm/1z910
E8BA4RhsGSsBGz1dbXJHBGKVBRRu/pxtxnoHIV1hxj1yppfDAhg4DmfkLKa9
Ntzz6W+3PSEcgd1BKa2tr2CVWJALhVcxLxZewifCPJ0z0gcACR3gX3ALr24M
tCgTNNEjsZiaj/MeS1S+c1BkoXQqxiGvDp2dr1kBFAxW7BIBlnD2fDhGz3Bv
+wtxEo3DDyeZCMzI/GFNsIAc8MX2Ps7Fv4pT0MyJWngwbsyLba46002rTrRx
WHtcrybbK9eVNrc+itFklLYunRe9ROvPX5xguTJdtnd74Kzqk321QONF4VXs
reB1yGdJvElhgyTCZc6uLbF/zcVUWzQqQlimV++tzKrGK5+ypFLzEObf3j11
Uung6j+fDIj0XRXNlEgIjVE1ya+xYSOmBnci98uJnYIi7gaRd9SJIrEyDECO
8ZeKLGMO9gN+0Fjvd98QSEpGjd0gYIaYYio3iKaBDF3fYMve3g9jnxYOOckk
g0AAMBwhFE+5LGm46ynzDfMxOXgy1KO3/GtNycX4zSfI6GUbvMQ9/s6X91vS
6Nd3CrbzQgvvXmM7K7CCgeM9fOrlX2qKja1PFlbmZXl7eroUjolBiGgJMo5K
+ojDMWIsqDSM6B8zU0UZAv4FeDijUsIUAiqST5fKWcZ4Kd/QUoY7nuPWW07N
0LGRwVNxyIbRU42S+YkuRSUw9zGTc77UoQcDAHY98FUsgShFJiEH/FjM9nTB
ELokaqh40cb/DFAB0KUFBscbCERpRzGQYBcntaqJcSrcIpcIxl2CKj7meRDC
Lciczt9FmAm9cOaWlmIBE137crkVELJ25mfAEq91yACKBswD474pbS8R1Dw9
VdAFpMFeH21MXhx9bDvlNo2bGGkhKKE5whGDuhY06ORwUJaTH9Mq5+70qKyf
up2uZjbLgBA+xfyM/SGNIBak0A+Dw9s7TnLRX2AlrUrX1zgYPn8PjBGgi4MQ
xS+MWrC8uF6dWi69xr8SrmfH36n4iwMGOS5iEGIlZaaHzl8cz0i4x3hACETy
7zHs4YBSvlLKj6fPxO4gPQ9pklGyo7TU9ugqF3ii43VnP96I9yPDvmisLUhC
KkPMaNrYRlocgSezJY/Es88eADYotqK0C4EQNgBLBImJJ/WVQAgIIUSmthyE
gDfCvPhJ1n/ttq+wAd+CSUARBw78nJ+eQAi3gCObh7+rjZV8xTK/i97eLvrA
xpxC3ZDkBQuAEL5VcAfgIe3Qfym3C5BIm8JBiLCBoniL6xOahLKe+aZbIm7Q
6bFJfu88A+CQGEU4IEkkPhYX+U1du2oTNOOi18vqBjaObx3A0HqnL8RzcF5f
o9MVEMjor+cVJ4oTir1aLm3j1Ff91VoZOOz6pbLUMmdOfcRimqpAoEduPxLB
jcDjF4uoKGfZhVtZ4JJFn8MUMrV3FTLXGWtatFc5CPwA13894S0UvV2JZeJU
KjdWev801ZFTpWDhEPCSeN2AKJpU3PkM5cNmXZ2M03G/GA2nWMwtW9oI68Eq
7OiBmNi/AepY2lgw4Bewx8mRaUbJ/WBJFCZCIJ6Wm9FXdzeIMJtV4pjfzlOb
nDyR1P9NpUimun/h8KMUCKuZ+AuHcu79B1OPYCB+c+HEytQx5QIYIeFcIjvP
BUqpRnUVY/+PCGyWzhDkRmWvea+qALp7ofmX6bnGDSMuE4+J5Cfm/FLakz95
FPwGCHFLJ8oHUEQT+RiECGZ4OIaOYTHdPyBbxiUAT+TPUXExhV1M9ywkFGN2
XSg1LoPCxUpJVWoh2Cw2TmToonwQBVNojjktcDN4SiEbpvxWIyOa3TvY0FkU
fYiJIpkKgOABOUO4IieBKFeIHoqFC1qQJ0R5xMP9r65WugVC+tpfjIGEPCHn
L5YX6qWh8Z6F2tT61vzs8pgcLO7fECCR90n7NjargkDuCeErDsjYGoUjGAhF
0PTaOVleSwgVQXbPYMPaxNn51yRZxi4rb73WWE2kShUl8ZzchKq6VplbG23q
BpFDaan1LzdLz/BD5tQidUgzNoNYwCpSWFWesqrh7EHwmOg4EFNEtk7fyXMr
dNR0e1BcovGYBmI4fk/7UZ4wETkyf1ypy8waOTZ4ORpRTRmaarJU0rpdC233
8a/yBDVHuPbh1icff2TMkJ3l4faIazRlfqp4DY1ugEAcBW29c34PCXcuzcMo
OsJGeJfGnpyEdpt6QlwrNTwM2x2LYzqZfjKM/OhGzvT5dIBf7t4IZKE2HcdT
mkYHWN8UkLBSjhGFZj64svL+u3VM/Df+z7sFPEAjpre5tiAQAor41d/uv/lz
NwFUvv+Dh+SOEAgBLVy1GfS6QAjDddUc+0/+xS1fEkcR+KE14kwCMAQtFs6N
/eK5Ayzc/Vd3cmp98tw+/T9/qi2BJTqmyXYFRw3oSJEdpa/u3/9ULegsHTrw
OP8ywRcI4bxYQ2l1+lBIBgSzxULsD2FhtOO58nwRQwl4EBTJo5GXhmuifPOe
bO87nfmWhuHDuFvVyOnt0mzYU9bIDnrSjRZknem/F8y9MPC0KqcwI46lR9ks
P63GFo+XhzOPBA8YV5oHAACPuA4C/7r8uKX/F3tj8bdMmZhPo+KAVu42CPgA
P3gXvbcyK1jFMjiHf128PcYh2kALghxbl84LxuvgHgQRISQWaXf/qvNIlbsq
EOLzIKeCKMrGzWLM+QT4gQQ8FUVHiHkgu7lBWBCEGK10adbJcFkMJYUfrvXh
aNYJrt6sJnJKTFIIRmMOlBUCiZNilPyS1wZxNCKpQB7yRFY6Nd9StlRuqaTD
ZN9tZSq5MN51UMQMlUoxb1jID1XpOiazbCaiiAU6K91SVTUyQMjMlXA38EDu
DiXkYguW63PSpxVX0+24AyGZgOupHjh9kwWMp6j6l4NzIiXnajKrwh+qar0d
WJka03orPQ+KKA8JSzhGTR+Dg9wRTCTfimYggbLYIdNY3aZBSusj4wxxEAJa
EANEIA2UwghYgGbfI8AGfcW5HIRw0gyvQ9JwLIBDZEaFK1gpXOdEEaxeHoRw
1fJTcTrBwhhQlS5Uef8UZqsWtAp4uNz1S7k1SquFK2/ec3nkPguNlW0i7+UX
pQ7XSCu58AkCqacKZh6icoxh6SoBJHy0MdkYuv83ywMg26Y0EpFmr6eZv3vy
S82BqUe0dvo7sUukMfvqYOfReiSm6guWKBTyYS9tVLmijN2Ux5IfCw+hfgvL
y4shU3iHWWffjIbqZig46yXtNgNN1EhQgdvJ9v5zsxShG5D12K1xKDpvyeZr
o0IgCxvmyhauMAm1zXLTQ8n7IR4dCEp7KUXImxiY5n0KpU9SwbdtL0dTTogi
dIyS0oV07wKNsKV0AwjElT2EN6rnK7Mzk3pf7YZM1ARCPk2r4oIoFHDB3Mvt
8KN9j16+VBMI4chauHypLgjBm3B02jDGCatpYkjGPSH8O1Oyr4A0t956i2JA
dHik0tnVcYynRZ6Qnq42RVuKY/0MZnsPc5+231x5Zz1kzcvjoWOyzHl5YdIx
sA295dd9y5e+eM837sYkrc50P/xdSyDFIDoIEeQoBV27OKSyuJ44ScLDv21E
VEGMSTfTZ1p9y8rTsKCSc60lwxiS7GbAASGACm/CHqrizbfbtWCmyxhKrCH7
ZoI7W6YztlKfL2AcVa5d3bjQu4+OKTcntubnL074JN1K7YSvTP4oUrRggQ7E
Mm6OBPbteySuCGmM042ZYuo1NaQ0cEr4ISPA3lSMnUeLh1YlY/hRCKIIhFgV
2lD0du9aePLtqHmpO+y1qIy2JsXzkpSPhZg8HMPYmjNkeawSlTvkEZL3o3f6
Aree261KtQ5R8lBBbhB3MWU8IY4cLDeq0uXSH271KgOH86gmC3IqXXRM7hSO
thlpODQKD4q+ntQ7y6mTORFXMWKhEWXCcit501qZ9RCDoPFClk235NZz457w
yAjEdqERNELjOinri1OCIh4bCvztg2f7X84Lxcsc1Nammd3zqZI0cteo0SVh
HuV1Xo94Ap5fLB1UJvK8jVnDETIF2SVfJv1wJ5NIxqSRqqHW0oKG1bLV0KG5
lqnuUZIw8sYRlSaUxPE2/yEdH/YCObj9lTPEkm5CJgsNzCB6qlFW1hJNFQAG
eIBPYTnGCvAwPtBanyuwcU9Pl6JXLCg7JpQLqcmMchwdTaCOi+Vf8yCFfBnF
ZXT29a3EVaLsGNZ48W6RKzi1RMycOQNg0CMhECKpkGrxkASrZUl93zz7opHK
icQ0kthZAQ7R/KVp9dvN+raUq8HO4GXaG4EIN2aoJgyjCc4sjedpKgr9mImc
HHW7qcdMZA+jzp4bVxTVgPRUcTNN6RX7Qp/1xgzWPBiFqmy0Twn1JChFAhxS
6DrqpFZQDb+7G0xxbeSExcAS+x79wbe+eY9UTejA4UPP3P2NOwEV8UvDdCRS
3wgLGaU19mWX9pMt4DGORmOBfzmsilGmQtCHMZFNQYg6xpqe9qPAD3ciffLx
RzxYjO3g5GfUiBECUZknK/o2XDwTPLeCH6GspOm78rkbhZL2AXYwKaM5DN74
3kPfBoRgLlnAlL964hXMvWMPAECgIz4pliMQAlzBQstLz+VByKdXtySM+eyz
B6xkzKVFdXtwwpLRBELoNmb9jq/dfsutt3z/Bw/d/LmbLLJz5Z2rH23RGTrv
IZ6RM71KohHbhM2c/nHHHbfpROJtOgjxGWicSJupigvk2NaSSuuQ8roe6Dw6
Ol0RZzVYyRXJWTCYWBBTywyvXGuhrhbAQy1MLWd53WkZcJJBIMI/5gkcbolP
bRoCZ15ZPv2gcbMLRxylvPteYrVZwEoCReJQDkAlZBkMOwSiS7HjwsFDHoSw
sjzdq2mR0jGYYqt+Pa90K9cbAQ85OuIYDfjKfk0JilhR25Zt37MCr1BK7Gbx
knZygzgIYWx1TEf1WPxGrtqg1WEJt2+s52hCyJm7UEoJGw41M0od3vYQYLek
3UK3hoinYqJjf4agYpBmeVfxditvF9RWvWCxudM7n3AEcnn4fomqsUEm1zgD
QsLsso0HWzfLLG+o3xHXaZUC//WQMSGksW5RqgSE8GYWPuGFI1pjXnCDo2HH
Y4atUlRM2XX+NWbKXh6Fxr/y3tcTnXwT2ZCJ97Rcxx5aADtJDFyOcS3rRhvZ
z96EazEUkcdGaTWCW6r520g1QzIqqfWgXc8lYIUdKOonpnI2TN7ZIMZUQC+/
m/VIQV2abEACSXlwXkmKxS4CV/yQF8jq3J05Jg18ibL6Zq686sbUdT8aqzv+
pSkFKXNwIR9Ju8e32A9Ii7G6zssNknQq8MOS/cPw8ukJNY1Ut0Q99KuzhOvN
qtazpdehk7gHm+kG8QRm4MFmmk0jL4QRk5oJs2/WE//bopdcnDUeTqX7iRiH
rJbbpWxvlKF0uEwXJbg+/FFRTWGMKabTCRtSL1dRYE8zcQQimkSGDuq0kOVj
N+tHJxASVBOLpZE+zqszqlLtjXNTYxDCSYEKlinw6A/k03jqp5Z46CDkXP0N
VspRIxmljUtz+pdPtbNL4z/8wcOmTr+1xtFoLCgbkaeUU+ghZIR1Rl2pagez
u4TuwWZcESguLqDMczUy3V1ZG9WJdnu5ORN1JNR7rZ6vNEUajbUFfjtsE2+m
JofJSDBhqkmHBQdXgDd4IcyUhk60HmV37D4LirCw2YEDPz90+Bl+IKwsjfYB
FVjgODKLnEt7CYQAP4RJ+Orti+PeeeMFFYc40WYDqN99tjrKMhuDNxQso6nb
dsxzYy+22sshMb5XDZacCPVbWaZLYI/9+5/qbX+BH6BZq5BNz0/VPfw+GtxN
VmZwCP/ugCKRY4SVvPaXNhZkLq0YTShpIVethNwF9hS4l99DYICF7qECZmu8
+6Di15Z72PcCxpTPmMeoZqU9un/h1escsQh+1LfWHXjEC+70ACE4ZZHfYAw/
tBnYLBOOSXwaoXguPXczwcvHHOyFbgESURSEQGIUQd8y1e4yLpRMUd0Yh2Sc
JFI6UmPcBFEchFjyYJBwT/zMfS9kTLOVoA0ghIVXh86CQEZ/Pa+ISVyAhuXp
hSayw8APKyzrsCG4QcQgog0Uj8vnsDQ7mPGb7XbAjPdD+hL+4uJBjRGIzD39
z7hBMnIowofqid4VEjOPjammn6J38iuYK9s810GIGeVA1RASEA5xroU3dzhg
INS3crFdTn4lpABcVZSWxiy7umZOiZnVYf5NpzMj4tN6UoxCOfx2rORZsVfz
U3lXtKWslRXGDargzGTpHi8ZIJNVXksVwnlPStEi+ILGGK5tMf+m2iCzQ7Fj
xATKEurOYenGc13nSz2JMyRNKvFBEPGm6DXCRHdJC9K5oyDGAI2IZyIkQB8y
pMqMNykOZ7gOmyBQfApvGAj9TsW1yIQq5ksdGWKqRc0CCOGTXQRCOIiTVOWT
efCB+2iPPfoDFcNl5eGDz2old41RigMlnLev/UW/uZINaeoMkdi7HtRMvEbF
BNOZxfOekGtxn2J7jEO4NYZO15YeuP/eh7/7gMr8fe+7DyomhQEFG6hibBzK
xODSATlJLG0nxQBxVm/sGFFjApi+hL+2aWKhpvSlZwarbRtMFXVdjkO0fu9A
TGYlY3Lvvd8U5aC9r+X8xSkHIUIXhw89s//pp/iKNYCBnmI7a1gAmWhZ7NNX
XjpoJikFIeIOGS1heqr9ZAubrZ/rXhw2/V629GJ5LMwtGyFWZ+GT16wRfd/Z
YvlI66HzF8c5Lwu0pkmmsRtEOG2PgIs3oQ7hDQGPUG5jsh7q4UqX7IMrK/Kr
ZDJ5pSGmuI/FGt6te75GvKUrowJX6rUKeObWW2/5xjfu4V+TAXnf0o2BEz/a
9yittfWVxvrqv//7v3PG8Kis0D1QjWCP1blLJ/Xrl2bfqr/B7iKuOBTZJnaG
XlUn2nh+ZPtEusj4PTArUtI2QulOHLKVCqvyy83DA9aMdjzHqw9LLa0hvZ24
O3PLY0okt0zS2UEaG2BQAB6uVbVXC/QPTsrBE8JnylAVpFy/NPdheskxxyOz
RjbdE1VMfK9aybAyGBBwiIipQcrDwiXBuW0xYnbh7aSgQ/zHGh5187MVe0P6
ZNvUqBkRRUzYlxO5q8ShhRCL+1IyJNUYtLjnRO4UdpEnhN662A7216y/qrgG
68/ryyXNPabPeq5LPhCwQSYX26qBbzVPeOeMGcZvKa38YuV0g/o09yJ2gOzm
UcnEcURnVQiGT4bLBO4K24XqGrNtqq8nTBvip1k3iNmjgVMu0XDt6kfBTLcl
ZYIjW2YaFyHlhDck1tyDLO4JkXcCy84zLCufL5WSgSJm8Qs9Xv/FLbigyEIt
memrtpoSK+qhsozMN5iBNxtWbGaqKCLHtv8hMFJk0F3KTNNqndpmuwFvcDQ5
8Yzgqjpr87Pszrcei4mNdbzs8iBYVZNM2VnaT3dT7BEtKyLjffA0mbjFgiR5
kGDuiFJHXN6uujTeyIUSMlSHeOT1laJOGZCpYbyehuEyMEYQyEMbjVQWVQ/b
1uk7+VexrdmJgoy+HCzciD9K/8QgVXEordn/9M/XT93uPhBt4Hrv1yNuicyH
eBQs9PR0fe6mmwA2NqMMNXR43lSyzfnSDBRwt5ELCdm1R9Ef8xuPD9GZ//pf
/rNQNMtf+fJfbqyvnmixVJqMrdeCP1cJFXktSezl9sUkihgeLLTdpzdwuesX
myEzhcGxUpLFFx26cDrHIboRrnEa/3L3cIZc3lwGM3zt9q/ccusX+QRdCISA
RkAgt91h66X9+MzBp1jJJ8sTixa40bKG0YIUTC2bgZDngp62eddLr4E0pATl
sIrfHSs5C58PPfQdbpNSgO+66+ugIxAI7e5v3MkxdwMh51bGdbulo85mVv8r
KvKyd1OubkwIMXqkkcLGBUVioXU1p7OCQPwrhx+ZInSfhnpqXNfdf3Wn3CAq
XXei9aiFdTQZD/m2qs3HtXS1vcTBf3PlHatYes78eFyXaaN9sqFAGDgkeOxn
t0+UGjVVNwOE8CbxunWZJgQC0jBlzl38IVrAjnPjOFQ87XUztxFS/DT7xrTp
k/UO6T8beETYRsZUsx5NfheP366fwFjxiCbjom66+c6gkdjXQd/Wfz0hnob4
z6lxX0spQLUYkyhyBwxgg0YoeV8M6XVmcc7PxiwvxRG0wHogHztyjzCy6nne
4xEDjLi3GW6JN+4IGEC94luxUplovF3uzxqOKA8ljhr0tr9wYtKUQFyvQ7eD
ZUYmSVNaL2V+ShJp3w3qcxcAlrVUV1wBnW151UDRSYg6y9laM4W3S+19p913
AfwwpfdzLzoC2Rx9jFfrYsoGYcxDgbMdEvTCG34QhoXjqFRfXs/cJqTBaaBK
rOJseHbqcP+rSunVNsqRyRSDk31spOGVBBqFOu+uguW2mzVT4yflAwF7CIQo
OuMTdl7U9MQDRrHZlbKHJMs4vnql0iS+sVw3XqFPmmaSGXfNWHMKFXpEQYz3
beyUalf8YrDzKGPO78710BYjLqtNyYNBlEy6OLGy2vFh3RmyR7Mk0/SwPIGZ
EciAvcxXTsmI1WAaOyNccmRljrAZSr+pVJCDkNVyOw/bpa4vYMqBKAKHYrD4
7WDYsel/+id/zKcRTjZNssDX/O1jt2p3gyKLUx4W8dq79Me8E/OzMklh7nAO
/Hmi5Qi7P/74j7hHKk/MvvKJgWGYF2DcRRcR21luGS/hx6At9u9rDN1PA0EB
noVprwcyDEf+/Oc/L7KB4EFs9+UjVehEtWNUDD32fuQRiO1lyOdPVFHX/B7T
U6ZaHMCS1jgOcblaVROOia+fyRXhzYZ9x9wLM4ArBEIw5YcPmS7W4GQn2OOJ
nz7KNWZAiHYBMOwBQviK62Xh4P4n1s91g3NAGpLkKvR3qkAwa77+9dt6u9tZ
w+fyYkUMigwI2W3utlCblitjvDQ8tVAMtIcbgh9qjhniwi4sJ0GZ3SVVY733
2E8ijPH2xXGggpo5LkJKb0iCqCrCYjTXd7b+PfyxwL+WzPuO5T1du3b1009/
yyc4hBtamS5ZCGnwVKAvVmmqUFMK0q/bGClYN3llsVb82HdDIOKmsjC3PioE
ErNVnbMqL4oWMMrSb4xxBRCFp45Pt4Z7NBlKTAw/N0VhOJpMJ/8y1MqR0RRY
fZhOE8Tm2+7X9Yo7kQ/EZJwhdAkEwmfC+dyqmVRIvaxftFxhQgscUDwKBw8Z
SABWWVqamBo114fm4DwAHMShiOd30PSWxlAKzPgBOYizZ5uijoxX5PxFuzX8
cCRvohku4MFQxNQ4Q824bd8OH3m5R8K3YqLG6BGYx1MRa7avR0ltJRdpb8bo
AHvEyS/yfgA/dgCPnOvDW8db8/84UW/p6GLorgfe70DxuP1OUzfI5eH7Pad4
YriHaxTqYEtF9Bh28IZUT7mVHMfcAqHkqLbUfNMNkGqKXU/10t02yQqbGFq5
hze8+KJsg5kI6UXNPSFKeBFEkTUMubEnd0CRoCAnKDK7POYxGg6LiVHPMRz0
Kn98IRzN9N1tosp0ItlupqXkY/+J3CMcGWMkdRHHyUmN12LCG5HRP1/qEdJw
eRBhMx0K8zc/0WVc1oHnnbxq6b2ljkYI5bCX1OAVGYmRQ8YZ0jTUwqH8LeFl
dv0Ijvfy7hT/l8uPcablloa8Zuy4PF2ZnBEDIZEnRGepjey/8uY9H21Mflg9
sVl6BsAmafoQhE0cWT1D7dj0u+66k8/vfvch6ZOw/OVbvygQAvwABhw++Ky7
Rx584D6BMfoDVvn6Hbc/+ZNHBVru+cZdHJbXuP7l85ZbbwVIf+Hzn6f98OGH
WHnft+5WSri2+a//5T8L/NB+/NN9rJQkLJfw5//tP/GvlGTYjCNwE7kKeULy
Oa0OABT1UxlZj9TsjQ2cECJW6mbQ9cLcx8rn3iQS6On2ZraminEf9jidwjFm
7gEDDz/IhP3+73xLIATgwcJtd3xF/hBhDwchG5fm9gAhG+urDkJYCaJg5ViP
pX5YzGW2DCBUDGj/00/19HQp/YS/B+6/V7sAPOiVwjECIaxs8opbKYhHavpa
S28tbkysX5q9QfgBVrnyznK+cK0smqIzmfDK5Us1IRDtmMEhvnGccK3GGiEH
usc2nD0PQmZKvIgmtYZnDGDJwm8//Td5S4CvnE4wxikl3Kake6kVU3mR3UCI
HCAOMxp7VnvZ3uDS9mY6sqwbk+L6fAFQYSSEpAbo8zR5RUxJaeCwFphwcV6s
XnzGeBn4UUrzMrReyMdpUaVQczBjshV8kSppxskgDoav16sSbIzxZdCcCyTq
rKI8zl/NsFhjMqqpCYWsT/lJ+AxWYBEoIkMjZTksKc1Vy0Kd4uQgeU9I00b/
LXcglJIRCJFDg9GuFI4oPsUnAxs7QBxv8FsDNsQZK2ycKaidASFN+ahe+UVH
xnyDFgY6j+Z9HXu0RC6mc1spFMDDkd0Nslr8uUs6yMY5ukiCIIGKIN1UwTyR
c7aiTBmfj2NHMsoMvl6wYbXSjQVpe7VV2SVsxjLvK4cxsR0UWTROSOHfubVR
sT48lJ/3igBFsPtGhJhoYxZMc1mwjBHXKWJ0gVlROoxTrXRe70O8II1QqYdJ
EjwKIL4r3oiVLOk66G6Q65E8iJ8Uc6ZMio1Qih2zKPMtJonCNLoXGWdImGlm
Ob2ZJn+psV4DnQYQmIcZDiEYXldN9yYIpD7HGqcuPJvHIYy/pzVpzWL/PuCH
pFrWzvxsuP/VRloE0FL5QiRLnpD7HvjWrbd8AYsPAPvmPbcLfuizMXQ/z48Q
xYGnHr/33m+xzMZSpRMsAWmwzc0338QyC9xBoZqbPvfngA1BCB2BgyvHh38B
FSx/5ctfZlm6u4/ve4RlMa4dyQhnanfACd3fDYR4K430Kd2Dg2C+55bHz9Xf
qKyNSg+kaQNmxIQQfmVngouyOtEeImu/yOCKesjQ8bBUzFPdG/CABwRCbNIx
PfQ/br5JYIDXpkInPcV2+sznyHS3e0J4A1zaqGqDvUGIqWdMFQ/uN+/K9777
IGBDHiQu50TLUeVeSWmBLbk7oCAl13AQsId0LxleepgBIWNzg6PTFqcQ0ZTf
oGghe0COjIfkUmMxHz3xJl5ZZqUQCHhvN+jCQkw6zTdAyNKcBdFaW1+JwzEn
Wo9i60ujfdKQ6Wp7aeRM76e//S3YVY5cRml0Lkv8EznEPSEmeT07yDMpRkfG
1ruc5h/YdJBKKQnImm52oRtrCD5ZCkW1MtsbIyUUpi+lMjL5DTCImolbRfXU
jXD5/UX3B47NdyeIKxeFyXBT80BFIxMSFoYbW1U6I+vGa8f1Sa5FVNI8QpA3
w8VD4rwYjmPKP/1dkpYyNLI4Lw/q1Kgx0NjRr2hv7BEhK6Okyg2iJHcrfBAc
ERaQPTeOjXD7K1OYEEV2WkMBksnJE5midQyCxWKC00MyIMZHzQRiar1jxSMx
KUjRNwmUOQLJFCTKt8mlMYnGjJeHrVZaKLPO+uXTiRvkvTN3q84vUNYOHtRO
kmSfc8YbUXIr+yrviW0conihHBlit1ZyDosl6BaKubwAG6hAEmRecITlxx79
gVL5ZMIUg5BTohaKy+sgSg51EItVFevenYT6l8bc36b/bx4tF9s5+PxElxgp
2HRMsB9BPa9HmtuNoCuiILtqn8nDJhmTDIaRfWc676xUdtFeEuBy34hK5Sby
IGtLkgdhX3CRhD3ZJRYYZxouWBiX0ps9c0ysGC4cEy8fSwyQvEsZmCR1ffZV
2mymUl7eAeKRrLh50M2QUlqe2GrXNjtUTExViq45c0b2J8EUp5W2fZsbxIXo
+bHaxwIh37r74e8+wMLIkbux9X/+3/7Ti//31wRC2Fg4wbBi8FcIYIAzRc/g
T6l5wio8bDyKAF2WOaYGWSDk1Mu/XC23V2cKOgJ78VNlrFhmPs5PVSCEffVI
ay9ptAqEKJ15bxCi0JWeKJXQpfHDp2EUdsMGwIxELvXUDzfT4rZS/VrMiZ97
M0rM8qKVYlxbihmwu7VgZ8tcLBafHbfeOa8QzP8eKoyDSYAEDz384JHWQ1zg
XXd9HStwvOsf+PbJHz8KhJB7ZAcI2VyW1yLmhOjNI3jz1E+fuB4YvKb7N9LH
J+CHXTh+d0dL+8kWzgi2YfB/+IOHWebU7MKCg5CJWkHYozjWDw6RSDu/zYzy
GC0Wb68HnfYMAmkKPxxLVM9XOEvM9BAfVYEYDJkxVy9Omps9qp+7B3uWNrXQ
pXjcbz/9t2vXroJDREw9dPgZcVBX3z77Zn+bJdqkThIePC0zs94BQlYKb9Xf
+MCEKSw6YwDGohVrvM9DXc5hgIGbey3M12oqSPcHIhAdjV+idELMrPR3uV2I
gYdKwe7AYMEPo8gLG/CvWzHNxD3xBEPMvk4LmRh5KY5oxIGYfHQjY+vlxKAp
OMi/nF001Bh47C3lEQMPb45eRH9VsVceaS/waopbo735QIzn5OZPcS0Ij9BV
dUmEEMxx4iEvFYMK69q779VT7tP5SmHbB9LbviNqZmqo3QenF7odfmjAHUV0
vDXP8o5ATKj8EmdIicuqeLcl2DaTUd0tEKNYjOm3hKdF+rqxG6RReDBOihEf
VQ4QdvkkjTKw3lxPwRbrZRg7TBqBISnD5456iZy7bXId+wuTnQIhdMZBCGsE
Qlhpcmf9nd0DvVqDYfL0E7kCNgIy5BNoMdZzVOV6a3NjkicdH2jlFMa4CMqr
fLLBaN92bVxe4FwyRlz4QYY1NuIYVtEJLOASkj7YjM44K0Od0S5CKXFqjKCF
iYoUeoRGrqdi+Nc+fEeDyeSaJhph7Dzx0ebbJN705lErFxKigYshP4hBEJdS
fk5whbTxYwygu+P5QXSevkXE6cMMnYx+Ah3XprWjRObzMR3ly4iWMzNVdHpD
hgcSu0QsRTd4QujkzOowd2Sz9EymPosadpaxWmr9SzAJqAOb/s17bu/61V1a
EPYQCGGmzO9IHgkeFeXO8PzoKwZB8RSuVylRiunwLwaRZRFT6bxCOfJkchCh
Cz7V5BVxECKdN8V6+FfMEIEQiwOeG98bhFiNpOAYVI0Y5ZmeXbLJcj2ttJt3
VrhcqkCIxWLmZyXanLyLCkeaggpMj9JwVE2yaXgodoMoMkILQXmjpux79AcP
PfQdM9AfbvUOvI71v+2OrwAJ2FL6Y6CCr3/9NjYDh7ClpOMffOC+V146WJkq
8i0ogg7oW08o+953jd0qFbLAtxx3FIQtoAMc02qEPf3UulF9ljmmuCLPHHyK
m8thASEAD6udNz0EFPEXnWTKVKVub1V2NuC9nSGBOMaIwy5AlDAVnY/xiUrO
YRSw+1h/78AHZuOWnaeRaRPVvsGJ9r5CS1fHMd4Vm4260AWHYo2WGZClOVO0
M7MYojD8ffLxR1Z3pu0lIBb/siMH8cO+fXFc5BM/7/mLE9gvfnf2kJyf5QGw
WiphkPPhj9+pKQZhcYdqxQEGs/vujmPXrn4kjzHLDj/2mB0brtgpMuMRomIg
FbtnQ7Aq5OPbD2G68wldYAaB5Akhst2+XvDDYQMjLCqjiAd57JGJlWQYpHKJ
eEUY/5fO6zgmPxvm715xnnsx2NsGeOBGONLIwaRthMMgM57eq8S4BDroXOH5
ynTZ3TLCeEYtTv0VIJCXhmunxyaltrEt7V54HlwhJmpM4ZhcGgMkxHxUFx9z
+DFeODTQeVTvQAYtqZmbo47QDR4JsYy0hnkWB9cpSjtr3sVJMc5kBnIkKhlh
AM3feDWh3EsSJJkIp3IoHqeQ5bUUrWCXPQvAHfUJpyItFMvEE8jBO4cXMmaC
V6t7QsAVUvJkAxfw5Nqlz8k2Wo/B0gxUIu1q4Jb1rflTfS3SfpdYKNiDXbTj
gaced+UK9WS4/9Wm0mcKxPD8KH04Mb71komhVRd0+Rh3YQ+pkTTNz/Ugi/Ji
5AZJfCOBVxDTSEBuWqOaI41ABRE/RDQSvgVfASQSjm4Uh+JajK/b90JlyNiV
7r3hU7RPXSPPthNpJA4vEubc2iggYTeHhl8IyIoL7+1qlwa+0nLzgRvfPRYr
46kAGRq9IaSZ+IKXipMCKisdhLDS02Skz+Z4QDjB3odBOURQgW3kxOBbDB/3
RWRU7r5q/wmQKLCoI9jrumzuFAVu2l5t5SlSA+k5COHIHoKxnJ2yhZkEQtbO
/Gyi40BTEOLuRFfzYBAkCBb/bDMUVk9mmT79vGu2y2/sOXp64ZS7flGPhEFi
/onSzJX+vEdQRoc1xek1U4Nx0RKTQg3XYp3Zqm5cmuNftuErV/nQNmr1IPHh
ISdMJ+MPEBJqAmNYcsfAqa/d/hVGiTF3mZTNlNBi3pLNZXYHZnCi9pMtoaji
U73d7QsbJXWAxnnN9ZGza14vphTyCh2KqHJuHpywvee8qInggTUHXWjNyHBR
wZqYE6LdOWYpkDHeSnVL3gpSKuuXZpuY3ZUCyMFwS0T/4NaIM8BL8tq1q4Es
ZFMGFtz7wX0BooxUOs/WelhgM9aPnOl1Z4jycy9fqnF2AIlpW4W8TqB1daLN
Kp2F95ioa9iObURRW8zDjNhnIlTs8EMZuJqbyx8uBg7bcAncYtM9WF+zM54L
Zwng4QabE2L1NMagQoyFsaInqt+OgctEXpqSKxxX6CsTEAuF5AwhBAWw0aAS
w2csYpZfyMRovImCwqdZyZS/IdhAS+gWwd3t4VE5A9nGkkkHTm0sTmWAjZ9I
2iYCNteC/Fryww+IQnfTMZWG+uzCa7LjvBlebO/7x4k6QMKzV5JiLqlLRMOu
9FtACPDAy8QIfsTq/WzPwSeW+lQuGUgAkPD8l/g+Am/icA93CuzRWqrrFIr4
WIEhBVa2ao5A3jtzt15odM+jLbwxHH4Y7OltMxgcqF8xV0SKNImcSOqrlxB6
IOdUvRiZCXH0JUpQvMC5PcISceNtz4sIA8eypDtVEYZPbKU2mBoxDwDLTIsw
iPKfsIZfHACD9XJ6aANzg8yMqK79aqUb8816IIoYrUkJm2Kv/AnzE10xFAkh
zh43HBJSK60WZKmTSFDqGJH7KK9Uts2mSHVQASGK7Wb8HvyElaR8PUp3VZNX
jaHD2upb+ix30MjgqTitRusZDXpugKRoBWvynYmVQ9hd4p/5zRqp3ByPDSBK
nh96qLAOl3Dl/Xfps0mUB8YLYNJEpQatFhuffMXNEg0mzNkTFC3IcanrC5aQ
VXrGq8VVup+Q/lgMQmoj+4UN+JtaHBVtgzvLcAkbcEPNQdffCRgw9siCTdM8
c5Zh5EFyEKJwDLN1tudCBELAbPUg+K8DqpQwJ7rpc3+uosOgWa3ngAru8Mc2
7CIQ0hi6X2Dpy7d+IQNC9JwwLCqYG2YQTTQ/MzjE0YJrtjMmyoH1Z8zxfJwj
k/G9CA/wyThkjL5OYXrvRQtqCAbYDH13h0kevehVAPbg+A4/9BfQu51XyS9s
qbgMf6+8dNCipUE0db06JY0yhUT94CKKuIrUkdZDTJwdSu1qywRCVgq7bVDK
1LbbKMeJt/oEVzg4oed5ioj2lf8BuOIgxGmoeT4qCETJtqKYNtZXBcnqtQoH
mSnxwpz/9NPf8ptyiAL+6ev6B+CHMAyfLPP8CJyYOyXlo/7m/bq8CnQG82ol
z9YnknzMc+OSC5NWGLvT8krpGfeI3uqKg7swkXJVMByxY8QBiUSzpVqJsZAn
ZLf6796UjyOHidwgmjpxCa4E8mHwNZXni85N5Rqv5XJh9uBXuK/AznJpzrXQ
FcIO2a8rcVhEURsNSIxwnNHh5FJ1T56Na4H1Gtit2yCEZjKqpWIxBK+vvH/Z
qsQGxwgLxg0LtFU/r8Mb0VSupYk5IoSY+oqlKhzWxF95x/o0LDHyUuIG6Wx5
abjW+eu19BXx/ODk691DBVc2o8WF6sAJUrYfrXTFyS/KY3LpD6yAZ7UkbpCd
jSGNEQhXwZFN1T/4WwRFSiH7Rq6zq2t9DkIu9O7zebEeuVjJltHrbX+BT5WO
zau4C2nTsXpIFcEuuxsE88SbDWOEeeIrq1sU6A0ywQrHcGvUVEGeoZYb5Hyp
x2o3V7oFJ9YXp7SwWrbwCvvyarr68YcqVKfET2GPwc6jql/PJxafqbcqrbCv
jsz2c1YgozA5diSwu7chYgxFGAoJfWNqg0vTfB0WwQ9sWImF6lP6pTRJlgmN
ZKy5OwQy8EO1fWNnCI9oRsgdzCa85NV25Gb3NJnq7BDHV1BGIMRPJ44uAEDs
EfdsuFxJPlPGAcnMlFUklGbs9UhplmEHAyh+5FV4/BI0YnxKEc60UMJZFITi
b+v0ndsFaqNwDBhVGukOQu771t3nL5Yf+fHDLP/Fl77AskCInGN0UrQQ/wNj
yCviIITbIeDxw4et2rIiNUkMJQUhiklx+byxAR5/lCYC8y3bm6JdT5efgpXa
xkEIay6OPpaAkP/xv8mq0jwhRW40jQzjucc7+ezSeCaNxQx9SsmTKXcQ4pFN
RWSaujichWIzsjN9ggpCI4IcQcy8LOyh5T2UzRqhwsi5+ht8bgZxdY5pIvYL
04JYehhMJ2c5UVXaTMm0myEBp1joHuuxX+Xi8Ha3NVb1oDDmMENp1P5E/ehH
j2BnvW97gxBgxmdMvVcKjkPk6NitmdBr6gnxQIwnxSSOkYj+IfiRoaSOzlkJ
csADMENVCy1CvbbAMVcvzViuzftV8MbszCTghPc8G/d2tbiv42x1tKW0NvD2
FMtgDyEZNi5N98kNIhaKTpqUsE/rvIdqemXZL5H3hEl2i8hIaSF2mCiII/KG
cnVjHOKRF3bkXHpRiIWiPJc9mtVr28kwkRtEqRlcSMzPtGBNisb11d4IJP7q
8vu7wqH5WlnwaSsqbyefhoYopnzkgybXdkp/yBku2BCDEGmSTI32yozG8QUp
RXNF8THlXU+L8Nruun0qVyeoprOoq1wg1wKuEHJQGcHx8rB8CwAJkACWa2y+
W1qpkgpJxD1qvYZAKl3ctVgEJpb+UPMwirJa8oOZYb0urJcAHvJ+iBOy/Yuo
dDEaXE71zKFYIpUOADYEa6/n/iSIKu46nTE9loFT4kXXQ8FQST34Qph/rYEK
nL7IX3WiDVzx3v8al7UVCLEckJX59bXKgaceZ7rKetWUl2iDIEQMQniDOQjh
OOzCQVhDA+qwDe98TsoCRg0MoyNwcDrTM9ROOzlcKa+eA4SoAUXcK5LmMT3P
FF7aXCZyNZ+4NBfqjGdBCIRzYQppdIkOsMDkWjV8lXBq0u6pFodRLvuOgQ3o
pEaGR1HW4UTLEfqGbZUAmkIeQ+M9sWvCXC5B5eOt/oMcR3wG/qRnEqfJVGcK
I4OnYvdIRtLfUNZY4h7xoIyTQ5I4VKgoJ5ZsnHRMtzUZ5y6zbHKCQWQjKUyc
bhnr+VwP3FoOvlxu/fDKqr5tzL66GyHExO2L7XNlw7pHWv7+lEl3lkcq3Sxz
4xj/0elBHg9jf9WqooL0drVzC3gY6JXk3BlFbgfIQRiP+8Igs5mN8GaNf9me
Aee2nnr5l2xp7rKQOywfl4rvsF5uJVGb+OQu03gVcAT6wBuAE7HAkW0G1L+v
/cDttKWex8x9kWqWBk2b7u0fby4QI7PO8j+/NccPNg8AFA1fPP61IAO7XZGW
U+glk2j771RFS/YNYvJ+U0RVVRYDFl9oZDyg681Qn7e+U/I9PlS9kVAOuITB
yU6wB9uL5aKDi2XKenfX+L4q+KgIjqpdLO4spLuZ1tKVJFFTEHL+4rhPfHaz
awq4KFCyd3ur/objkMuXankhMgch+hYoEuOWODoj1dPtPlwcz7BSARgxclBy
rnanGx6+AXUMTrTTJqo73vD//NYCNkUghG1GzvQanvntby2IE/lwwDNBjeQM
Z3eCH++ZreiZkZPWOfZBHnZC7/Ct8LRIqzxGF9JZzXJNIwTimES+WeYj4CjR
Jve+BXGOsBbkBjGu8vKgPAN10yC1yb45LlI0zrfyQuyGPZpltaxkKChqmG8B
M5l1RwKeHZwBHh6aSduKs0FYFr3Ev3UEoiNYMs5WVbwa8QAFRbzagrZUwCtD
UKklRahNSF9kAEEUPzXXIoDBrQdyGAW0mMCJvsEWd0cwjPwABTZ4PBS7oalG
j5sJgZN4oAYnX1dQyVBT8fjc8ljuB3WGJyHOu+mfuyDgwanpQLzxr0sHAB7S
/bi61jfd+YS6ygVeD8qf3JG8UK2EQeI1bMPomePOinYd6+m2sm68n/mU1513
fjxBTmbEbx4d6XjOateO9IqhsRyYNqCFJ3/yKIhCMylRQYAT8l0YqS8FIVgo
NhAI4RJYYxGWl38Jxnh83yMcgUtTlVjzY2zWsPuchXcav0fWswHmTJ6QuMVQ
hE9uytn+lzFPYsCGqgFGYVXkgjUc/49yf/fe+62NxG92zvVX5VwCGMyeOQYM
M6F4cEKop4OJpGPsSM9VZKcRUl+9eL17J1RNxqa9Q8fYXUnN2JTdNENUz1eU
S6BLTB0RmDGN2aCQJgcda1RaRcWCuYN+7+ik6J08e+ABUVIZW2XosLFgz2Bv
Oz8lNpNQmxi53EF5ZtRzvmVHI36keqdqrFGVH10IiJQLX67PSXSOBenOTS4W
ZpfHPNlHC3JGqW2mBW3p4UYql+ElaRTR9gLBgnYAXdMuCGKtYrawLMXmGE3J
JeK+r0wNHYNtg6cW2u5bLf7sk7V+4EF3R0t3oByDATSSC7NlRiNT9yQ2wVj5
pmkyPIRWvavzCVrsCTHfRRSRcRpJ7AlRrCQEE8viqdIZk5VeXlSda5N8D24K
TUKbOkC8AT94obEX8zJXZ70eaudxmZYOFlimcQ91EJFO9S+DI3hsqT1LY16P
Rn5UbQZWyYdj2My79IeDkFLkOYldIh9cWVEs5so7y6adbgS5HaRWCZbGcOUD
S99oUs5m+V/nWD9S6ZToBzikq+OY5NZ/835dC9mJeS6OQ2sprWFTzlaTr/oK
LZJ2pzOz5aLCMc5NXb80x/PMb9xSDNK8GOWAxFBEboe0XNe4h1SEQOTucOzR
2FmzI8YhsVcE4MHuKgbKQ7JHfhCddMmRmIWiVxnvriB7vhJkhBd1rgwIATw0
dXrk3SMxaSTfJUEI+X8MFaThD7+6DD9EWELpOc569Q3ov9ezi7DKSialVyyX
paWJwd42cIhiWNhQJREwhr5vKlqSlIwJ+Z6HRbKKOCoWS5pe6NaUZLz74Iun
f91aqguTgDdeHTqrMZengk8rxzZwWJmwiyGZVAtyj8QFiL31drakmqLdY/PN
S8PEhBAQJsBjcmlsZm3k5Mg0aGTbGVXrBYHo+TQduasfGXnpzaP1+YJetlyg
1yEa6LdCMypjR/skmhTn/zgUGEl6Yvlv6zMjSSiq6+B8qQOjA+oADxhVo9wu
EGJQYd8j2p4JpuimgI2/a+3pm16kGWg59PcsYBGw3byaCqPjNOEQxVykfKXi
8kxRrchX0MBkDqttjChS6sCcxQhkanHUocjEwEEZeqmVckDetxwzpDom3glM
z3cf/o5QB5N0eiI6gSICzJproZaf16Jld91lq0YtExm8Q5pWsztnUXzBC7e5
gctQSjTtNbpFKBrFWTg4B4lxCOPjcivmZVqcMg20geflHskAEv8XjCTVON0C
e1ZrVTCD0Twq3fFwxWgnDjzFLFb5f2wmPnjKZ776lnsNCLmWFFNY4dIM0oSM
mxh3udyZoIi3OJOar8Sn9Zq2rkKv6gYCwyE9JHH2hpSBcyEAkUjWMLDVpeTU
RoDpOh5nVds9CnJzcaEZ3RGAtCWLhewndzX4M6/ImpYBACaRlwY1ABsyN7vR
LWK3hr2Wj91seOP411Sfwqe0TrGuFI7EICSmtjozVjngoRxG4pKih/JtgmHk
9NutP8uLFZVP8iSX6ylbTCGeelT+xrsX7x7XydXbkkextHDS32B2mYsVSbXL
sIqYSgOByIPkA/IfBUJKaU5NvqmgTGW65GvYkrsmRY4YhHwa9EvzCOT9d+ub
jTrj8+mnv3U2aZxNk28JLIk4LRO1wsDbU//81sL2mqqF1TjgtWtXeQmAnTgR
rXFpEYBkeR9BepQfFLOMjO8ihiKeLBNDjgzwcJDQ2KknFleiiQM3knfAUvS2
v5C7tDNe/kzQxU+n3cMTWBanS72y9KiwpTbzCjLYNY62R/xljzBNjENi0bNr
ocaflQMOMQ73MHj+SyYQI3gQp9sIyWQ4rr5N7D8RQYU1nt0s02n2PTx1MWJZ
nelWtrUIISBMRklUWEWCtKWkzkUIAYSYjlZwdxipY2mssVXNCJTxel+aHeSM
U6O9/1Jur5VeE/2j8LbFUDKOC4vjpKU/Je6xW+MW61y84kDOHA0E8sP9/w9d
4pLVlk8/qCTczdHHeFC5QOlpXPtoS84NeeqUhCV6ktbQVQAJaI1PicsFYeEs
LGHWHLMuxaboa3/R9erd2wD2wBjRGL2RjucS2cyUCMpNWbaw9yz2gve/VFX1
ouMplTYOJ2KyD4jScSztIqTfikmi5oWMeQnzxraVZcsYpRvgDUERRyBaYCUX
eLb/ZV6S2GWa1f0Mmt5u6IEH0q8AOAVpgoX1rfmv32FppLwz6TnYQ0BIJdhO
vfzLarnHrrTYCxziK6DLY5bbeIRLZo3UOGnACfAMe7Evm4FG3OKLnkqTrjhj
wtGufvyhoj9ABW5ZPRJzy6fN1kM9X7FHXJFV+bOsZGTcuHDTOSDPWwatqXkS
jQqyNJol83o3zA0ijdagE6Itr7x5zwdj935YPfFR3dCvnrF6VB2vvrO6nKCI
Tg0OyTuyWJPZ3ksG8Jw4gHzlpUMCt3yyLBCijsmhwetdyCF4DMbMZTc+5J3R
sEtNjm+5yxmGD0Pn5V/jPw4SF6/POxl2Y4EmEKLtPgmGCILGERk5Q0yHf7GS
SbFxqBavPGNKSqvCRdfDpINRwu7b68iICll3ir1aR8zL4eQfBaw1CH5RjSAT
tBmZuUxP5GbRwZ0GDwhRcV7xcs1vY9PykTg5gnf4Rpg5StUtOVpOrSv2bHw2
J2Rnw6jlociIJSJZZo0dbSfTVfGUOGqTd4YACQAGAA/sBYCBzzivdrdm0HSl
EOcdYygzcQS2GZxor56vAEIAOYB8gRAayMcmlcmc4hWMV9MASuwScVeDAxKv
PBtDkTw5pCmlRBmpPCfdgTcb2ybtwo1+9z2bj8felYRSEvy3SWZNaPJI6HQ2
mUo5ISIkmFJ9autvhJ7qzSki7k7xUItMnoimOrs7Q/wUMRXET82yRBsydJF4
QWBPB3RkopI010MpNwmtGCcz5N2wAQY6FMseEyGEH455nKbLihO5j4WjpcD+
+ZaOLiuY2/GcE1DzCMSbQKO9oEZ7RytdCcqNMlnU+gZb9POvlIq+2R5tbn2U
phgQx3lpuDY2P5iI1BUerI7u522j4B0LfGIZ6/MF4IeK2Yn8IKecfu/y1MWV
7DTDVWaZYInSYdRPfUr9Q5PoiYHE3oEBXHTLEoW6Drb3ny6MWr42xlE1uZi2
07SlbdysEoGAhwm/p784WdJY0cv182Vh6err/YOgkQwNdXzoiNvZMOwGQizx
FkwyfrIy8DzbM1zycGKtBEUchPz4p/t4bcrjoSQOUW2lWSHWohbEPVCGqa/k
3+d++bSgCyOmBNI//ZM//sLnPy9uJCBHUYaY2qo+iD2CIcCOGHd9flYUQXeG
uMBsRg3VXSsch7nS+ECrBVaCv4K7YHdtMOv6iOGHFkAC8htIIzePQNQHU7nP
ybYbcTpU0RUOwa7NV+cYRkGFWG01dm4s1+eadsk7lgEhUje9HlUN4GZxX0TX
4ZPlJ3/yqPgwSu2R1+t6yiCNB4Hjzy6PsdKjPDHwBojykHSHYBOtp/2o3ZcQ
AeGA+i3s4e5ouj7+FgTizBCZ++2IzOnn9TArRyb5hQaXghIilPxCw7jzG+dT
LJFPPv6IhTMpAUwuCAXjvANyKOklqV04QqG/M88e8Q7nQYiDH//XgNNw0uc8
cGLLuITcB1csLVcgBBNWnWhnNFaP/ffxkaPZt19KN20aHLmhtlIAkIA6phaK
xbF+OSJiSJBO6t/IgJC8OGpto6wCuOJv9Ha1nK313AgIoanQjNZw5IybRT60
ro5jSqUJ6bEVEMjlS7WtlTHnFjKxlYXKAAZZ/xjKCgb4t8pr0Mp8RGYPBCIQ
okfF1EKiFN04fCORz0wsRmQzl+DOMFK0QazcHqDg3G5440agiGOYONrCellA
6bXSGX3mGCbbbBAFPdlMxBIJiOURiORS+TZyniRH6G1/wRgpgR9itOSipczo
RAqpOCFkY3HKcm2my+4A0RFYr+RcDNyLp3+N9XecPzl5YjcEIn8IR+O8xYFT
u6ELE7ANytjKzL3xX5MIIRIJSVbWekVDrZ45BBRZWrIcrsnBkwBmUJNrsNe9
TmtEV5YmhipzNXamxnhssTxtKTCerMqyG3dN1hKEEFDBSMdzx4fO9k0vclLF
g2KMsQNd5ECFvgWoSIIs8Ui/ebRSOIo1sTbWPjlmDATzUKWVjmUEMbjdA72c
HXThYQigRQxFjC2zPKbKd/w7Ptwby3EIulTLPQIhoAWm1T98+CFPIzW//b/W
sXdf+fKXMcHcZSV4PnD/vdh9gRD+enq62l61tF8HIWx5zzdMmEtS4fzolMjD
smz6+VJPmg1x1L0cKlsmw2okzK7j8pPUUg1YI5msbTNXt3cMQaIxM0xjSQHZ
oOV+dv61vW19HJTR45GHH2K2cHCT1p8b8+q0hjC3rHJBY+h+T84SfKXzVvzU
uJc7wjoxrsg7QOKWASFWgKYjeSWyAMADdcy+fYFmImZhgTVS/7geJfgYobqz
ddaYV9sHB5Co3LMqFSpWJQoNfRaTNsYPlzbsW5lvvV13i3R8ZkSGxnzBMhPD
SziWo7Gf3kSSIwMaETSV+HkmIVc/Ur46E2YfIpSyGYiCf60y+PSULl8FaCpT
RbFMPTLFNsYtCW8JRbWadjtDCPELOVMc8isCRaSzifbMlVqocWwE1CFLARrh
Hcv6xYuTZ8s97KiLXX/5j+v/9Gfl138c+yjcm/F7IpCojU5vK6HlQQgwIPaB
NGU80gAeUvywvOyJ9hs8tXDIHhsIn3i6riXznultXFpc3ahUen7loU/JiMmV
JGvuMEBmPUaziapACgA8COKf2ms3BAIeUDkYnnlm9PyUJFnWdBdlImSMiF5W
GRASdzhTw05VdGNpMn3WNssCJ5ZRcnFSUZIMydN1zOK4SQxdVEcskD/XpAQS
657FTAw6ptETpTa89IZjNOJn8fhOHJfxUy/NjVm1u1CKF1TAoTDQ9flCQicI
p/C8YIEQ7znLHovp6W5/abjGZ2ryngO37wFCGHAl7gEwsB1NyR4DxeN6XXBR
TTNz9wYhSszRml+XDsTCILLd4sQuzQ7K1ZZ6RMvu+kiUtMVID8yQPAhppIm6
mnmNTg8u1Ka2CZ+LCQgRGFguvdbX/uI/Ttjc0Kb2EfyQHVwP9YXNA9Nj5WUF
M4AWFyY7Mf1Mq7HFUyPG6mROGqgRJxP/wHBLI2h+iiRgfvvZoXxNH+4pNhcM
ABTxkIR7RbA1coNIO1R0cZE842ReUNB937o7w0r90z/5Yyzd5c2a5YysW8VD
4ARmTvjkm/fcvrWxJBBy29e+ej3kL7NlAkL2PWI1SgJJNchNfBEYw8SclS5W
X7P8rMOLObl1y0gqGG/HqrF8/KENbMiX8Woyfjn1VNxVjFlP3mG9DwX4bQ9D
n4mANFKNXAGGuaUlPyDHn1ocZZvq0rjn6YAbl+tzGRAy2HnU845FwPDwh3ty
vGX6IOfVbiCEJ02H5Tl57NEfmGTT2xe+//2Hb7n1VgAey6xhvfMceHnaD623
XaEfb0PjPSANpf8oTUyM3GCII6IIE6IgpbUZ3rQm5TE1/sGVy7VQrq4putjN
GZLBD1hwfg722XVI6mRuOOKIDK8UuTv2PpqgCFAK4AEIkVRIyK/cVvlQBW35
hRgWLr800ue9laclNiUZEJL3k8Tpt7xzpHvTVOHE3NqLFR9JtUphR/UKQIja
heO3JaGZ1A3yu8ZimraxuUF5QnTkzLcSKVVi7B4HwaxI06Ov6x9u/NSqutsU
e0gMzdd0dRwT20RpMjOpZDeT4umF7mupkIVTPrwYrvsZMjikacMsOl1kNx+I
iBbleZuoajqvrJymLX8QFXPh5zIx3FNvVnHGLFEKwpU36lIhcTDF0aD4J3Pr
o0Y5CwloeZeIQjwK+sQ1eQUY6IxwUd4HEqGIFXlCDCOFGboHEBUs0Pw9oKCV
OHriUMQRkaI5ikGAB3hmTOY9uEFECLGZWgo8lGHN7u+tzKoP2pIfyKtDZy05
t/ugDCsLmbTZTFvaWAAuKoIGeuRByvtD3LvFwu/0IxIxNc7MjfVRL4z8yEi2
IQdkcvBkYyf5WbhU2EPKbL5ePOoMjnWjJlnOGIHQASx7DADMBzJxwQ4b0SMl
ZCGZdI+t897bbYotNztT0fJ0r45vtN7xk41Ue5xprEn8rRpikXnlcxvzvHkU
FAGwsRzMCIosWlp9z/hA69n518x6rk3IV2BcqVqV5lDEQcgD99+LpcPGmd3f
rIpKCmwAbCieAgK547YvS/JCqaPS15I0Gdu7J8QSeVbmsYna0dNt2NJ5njI3
zmHwJlqIIgUYDoZOlX8TBBVIFE3hhzscPF13ouPADYIQOUN0ChYmq8bhF09V
gRjwhuBEMsJvmoQ+d8dAyOyr25UTK91SNkscEWtLUjyTiY9BiABVjG/lnMkT
SBIQkqpkcOGSbaeBQNQmpsr8y3qhC7bkuVIRnPgsfYOt4gAryNjT0WIwe3Y6
cy6DXo0ZBbvroU4lZlTJuWGu2ncjeKNpM19coXuh7T75okEjQJFMRAazPj7Y
dkZlDXPAIHbRJH6JgVMaDV53Stc1PZ/BNgPGAYqovKCoI90dLfQ/w2mxZJ+x
kfxFuYc/exUh9UnLc8OtHljMX2+cSrMZ5Nrcc7KY6N78Yu7kfY5DVo/997Ez
L4qSyucfjkDUkpI0u3yL2d27OsxEtU+5tJuN+uk39uLyNcUb+ZVNBdCkvwra
mR9p8TplTCplW2Xj5AlRICBGIHEIRnVJ9mh5bJDHFZVSUbMJ3jAyE023jKkm
Pu3ljvMENj24zfRDgpgIIdLEkOq7R2Rk3JveplLQsZ9ZG1FUxZGGQEgjpU75
iF1LU4MbIXWXXkVskASrOL80iNMaqJBae+wnMUS0PAgwE5+Ba1S6sR+N64qJ
l7KzxYFTcskOdCZa6yKE1BOl95WtSzZc2nj918a04XYrBqe8mJeGa6654ZVi
dmvgNEmHaSL2ic1h22IcMjj5uoyy15trMsj1skTnnHisJmIJOMTXXB5O5p4s
0G1NK0Ago+VBscJiaKG42Da/MYoJypBJsszDNMybGkExFXvnIMQ82O0vqnSI
CB68P08OV5IQTBoiqQwdAzNgJbE7QVPuXalg8e51M+TmUi47JSyDeQAhIpxw
v1TvPrHXIbtT039X5ZKWl1V/Kw4Jh1hkZ8YCLgkUefNocA2ZrKtwkTxCFghY
WqKpM0p9FQgBMyyXXmOXmLbKMyPHiBgRAh7AFWCGuCJMxpWevw1C9j3CY1AP
dRgtEN/f6awS1mCX9UtRFElxjTjCImKnSamnjAWplTJEiZ9zJ1DMU0Q8z4Jx
aEpG3S06k2ZVWDcKs1VzQIVJxEK95PjBEQ4DZSfdrK6vVRyE1OfMiSF+i1M6
GQ1GTxQFxxi7hWNiJOAuFD5Vb0541T0hoI6MJ+R6KlGr9Bw/C+MA5JDojZ43
BRktUjO5gwerJOLLW2vCHjT9xlVl+JOPTTid2b1iHHkG6W7wQ1/FsRi9h/kd
gQoYdpsU9BwFPLANn0CReF+HHHm/RD3kwzpx90wgNkvHzKhihW7uoDtG6L+S
8ZWFzWZymyurMYN58oQQByG6cBq4IpZZ28xFZMRilZMnnq2EctiGW0orhanu
Z+v/9GcORf6l+PP/KDdI0lYKKk/z++0OCGEyK0rq7wpCSjm5s6bIZHCiXazX
2XLRs54XSqcynAoLl2yYxgufcVAmj0Z8F3ee1Hcm9n4mCJGMg1fXaoooGjuT
fN3KND94qLo733a/F47BxIM9WMlnCLisgASkE9sMziUqqSKjxj4NHwHnb3vg
RhfOkd99r64SM3FAx9NmOaCcGxYvKA/SAQEM9TluoBFVpxXekGgD4ESmMxA8
VkQa4ZnhXcRPUjVizE6F8KtEy425MWyDbHW0g6SD+S5SDmpPdzsgpHuokChb
dh8EJu1NCEme1YBD5A+xGkCFbg+7SNpUpJGmAmVCd2qxIpzYrTEb5MLIj/yd
Xx3d73pBgJDx8nApLaEV0zzkSorL6WYgSqicMrxDQDV4IXgbM3nknYYRYTzf
+1/j4pdiuJWGKXIInybIwIR3aVx20KvWCnpZzD1MS2XOvMk5o80chIjM4Lkh
7sZnAashI8g2Rqs4N26OizM7SK2Y4OH+Vwc7j3qFWVlMqX5Z7mogWsjMCRI8
+MB9IIQnf/Ko+LSJ2mqAIqpd8kehHmu52H7rLV/4oyAVHoMQSYJkQIikOKWI
xb5yiSj9RM0qAqvyzuxQPSqSm/zqA3PSQxus5ErlJMl4P7bpqWvJwVVc2H1K
N+4MUfzU4RAQ1KoB1qa8Fp7hwFDI2JKS+l4QMZXnXwkytOVya8xviZmfypAV
23OuPJQ5tXNd8j4QgRD2EqDlIC/8/WHnhExMlWNOiJTnXU6WJuoLg+mRGkNE
g606L5emS47BD7Aq/zPv7mhRoq60iRwSqOCsAMlmStgQRFHLBD4w1pXOJ6Zf
e9ShiOWPB1fG7KkfAkuWeh6rFg96gEMyxeY/OTcu8NM0LhP06MqAjYX5WY2S
IjUABoCH6lxICjW+I2xPDwVI5HuJQc5uICQO34jnv5jTK3NAwsZzw61x/EXl
JoPru1pPU3THSq8uH/uc45C19tsTkfP/UByyhz9kbxAiT0hjffX3ACFxm98Y
BZPkPSGAEFXBu/j2m/rl8mLPYAMZfZUIkfXPpNY68SMfJfEt3U+SgQoZ/gYg
ROQBD+jvhljiOW9GoDWzZSmoa24Ltm/MxCwOCW7s3YAEmqHHXgiWG2lijrJg
4niHLtMdLOJ7xCEb15PXBlbRqV6WTBz/eu22WG3DAQloRLwR6cIFsse2kAgW
hF5tpCrTRmCoLdJi5S7R0ly2Sxt7vRiLxYSHASCxR16M9MS2H9eAQ9bTd69l
Rw62MPLcU52Rf5sO71wQbmqsnc+4QUoRG2T59HYUJikTUz8jdw3dlvJ/KVLQ
dUQhJXY+/WHjU9kQnrcrgTjfUSkJ9j4PIpP8KWdWcmTyvnoCC1bPRWsl2Sdh
h6sffyjVdxXeckPpfgamzJqc0nkMk6REZZfzRpa9mNi6wDUX7tIWAJL5iS6g
iJq5QQZPDfSbFOR410EOa8Idc9uZHexr3Nexdk5EHyRWBggBXDlXRLGS6kxB
FFP9KRxz8803yRQqHCPaRgxCmE33DLV74ozn1Cg7RpevCzG3T9CWr6cF6cQv
1fWGvIxp1cILOVA9mXRdbYbRdF6H1ph2WdB7B9fdOAihjU/Z2emkfq0xapKN
TkBI0IcXCKG9V7wrIaaO7PfumRkc6ZXqZqwVFtJIjTDpmTsSNMv7QJqGY3hg
GIRQDc2yYySGo+yYiY4DgmfxcTTLSMJbH3/IkA6N9zgpV0wYPUWb9fMuUcKP
muZuEMuAO9O3HhRlU39OEySgz5hHKkBiDkP5lGbL2xJn423uD1kpmXdltfgz
ez/3fEeP31jPUc3d6lFyrqBIU3NfGukzrBISeVQIyWsumHclFLqVuggXEmsP
6hcqCorEZLhGzrIHCHFkxYL0angF5R1BS3NFTu0TpfCb+gUrN4OImcrnxbZ+
pfP/chxS/6c/s6IY/xHwI+Gj/r44JAYhN85KzWAP1aTb7VuBkPr8gIqaVXp+
xfaZfFu9maVv6Q5tl17fO9UlFiJzl0hjF733rUDtMOX/+Vke2oH+rqYgxInT
mkvKLdA8EJMm17gbhIW4bt2HeyqueLOgyVYtJn5o3zgQo6HwcEwjZLvEKTOq
38c2nlzDtx7N4av3Vmaxwl4aWH6A3crc73CPBK+I0nuZayR+v5QqyWF59fHT
U9EZCYQqHRLDzVTu2tWPVmdMicLyYtr7sPvOEOPsexNCshCu1tvb2eKpcIAc
YInAT9DS3yUpPk2uz4MQEBF9mDn3YoxAxAZRWQHN3BX2MpH5+pnY11ELFWP1
GRM/xPuNB1+xP5sOh+mqMggkFeJFQ1Yr3dtjG4aXf3mzbSSVzdfEpRTTg397
Olo0gcWA5ufv9q4LIMci+Iujrjc1uVjIhBjctLEyYVMU2+WC2GaYzBQsj2as
XVVXLLAy3EJ/1BnulJwPcbOkzuGWgN9GVJ8UPBPTVrnGC5Om7A2E6Gs3NqZp
bvR3mrJEUDuX0LecKiq+Zg9hfa6xWWUllw9WOdFyxPyZG9tUTxrYw700frFi
QAnVaDPlKEl5zG5ioUcRk3h8wnQycWW41Lw0PZRLe4MIBDCAFQ5RubEgILMd
7lEabyOSe+VmOQhxbmp15EcebXGOqzRIQ37oOWCAngehESvmEhR3Z4KllrF2
jZT4Mj07Rio0bBPrhJj6buEwwDIDmeqh5IoeY37F5lyas3Chh2mMHxuY8O4D
aSQqr0lYweMylakkSs7CbukkGVSgXxZ7OQKpR9pcgBwvaUf7l45vYp01SXR7
XY8k3P2wfva80edalKvrImbhZ7gqlXjfnWFX0r3y8SUzIsWz62m5OlW44DOD
eRo7U3Q3U61XQIjr2wuMlftf4KYAfsYH27TB3HBr3GexVXe8Bqvzy2ePx6GZ
mbaHMsrnN97AG6PTSVJzcawfKMJCPkHmdwIhv58nRCBkj285xdJ0t0AIgza1
YKF8EyNtFmfJxzvyamO7IRC1fFAmE1hhYbC3jV+oyt9koIUcIHKwcxAvAKGn
SwJleQSC7fOnvTzdey0Ugjl/cSKx4zc2koqeKHyj9BmOH8eD6APmnrZlxWJW
ru1goib/euqu+0OStJ1ASdWWCgnRsT0QSAaKCI2U563CnWunSz50Y3GK8dSY
q9oy7e1yv7sC2N5jMd09XRaLGUgyKI1SsrOg7WeDkND6Bltk+xSaCdHYD61m
brNYjK4CiEsbrXQNTr7O7mwcFLPberrbQTVT3b+IEcjl4fvdDRKS9PsFknkw
rArqIMa3TbR/8QcEPBSUyUZe1hJ6hiRHQgR5zS0FC6KCLKbpMFg3BWX4NNWO
oIKFjZDck+j38m9wOl5BCrgw+CJY7gAhI8kUlfMOpuwdfoOTY0diU+KWSJN9
KY7SDYwOwCNDiuBb6bQ7c5V7xCk4e3v/aV68Wa3RN60Il65IHhJwyA4oEjgn
2oaDK4IjKTZdbJ6V4Xgj1gOPAVU9FKrT8YFG/pXwg5ylIAGl63ITneopl4jC
DfHIiNugonsMfhyRATZ4kvIeTVqmjVA9WTWD4ityHOgPg/J6hM8dhFwcfSx2
KcQ+jXrQQlGV3oxAB/9yOtVZsEyccftJKkagMr4+AjyNeek2T2oz/2d0UkbJ
4HEIj7Ijjyhr4sRkZ8LE3FRl00hKSxZTE/aIvzQbVFuzbhBp+7uOhxZECw8E
ntnNoO+kmnEsAG9oZrvTN/Nq8WempNp2X7Vo9+7C6afdrDeCYAgvSQV6YuaG
Lyj1RlEV6Yfoj5Fs6rpRhKgSCDwxIBF0+eTjj7SsYnnu/1F4N8YSgI2EypVy
U021JiKgKv4SX0twnlcTB076DvS03JFKZxyaYXms9OrvavcFP8zvETJiWPi9
aSF/OAjZzQcSN8vJDTO7wCdPVmYSYxs55Q1m075BUyjSFJw00lSazMoYhLhM
8UB/Vx6EiOfpp3aSqvQn8wiENn3qMT3ni8dvL6Ucj9+1Nc2h5lCOzWKurFfv
zeuN6FUTf8UliJLqyEQVgW+wn+JtsnFv+wthavmKCKX0Si8NpdAqP9c9MxpJ
hSEczCsvZqznqMdiljYW9gYhcTgmbuxrpS4ibWQ6EHSQjgEqrHBD8Tifwhuu
X8r7UB4b38sdp9btqx99vDHxwdQjEx37+fG7mqtNuOpl4CVHVnyKvRRv4l8t
JBLuhW62sfJbwz2VUlGFIEFu3BRe12zJmHiVOqzDSMdzTvxgGdhgEZlU5WN8
oFWZlRhBSWSr/JneY1YyrFrBfNAZBdMzxtq1ozGd1z58JxE0C3MBTLMbsnyT
4NiiF/yKvhKBE7Tg6iJY5Cvv1MAV410HuwcLx4fOgkZovV3tIB8VXnE/j9yh
Yo84FPGOmVbqWLtoogoN5JFVOpU+n+lY5nIcJ8iau99DjgjFYeO4latvSQrM
SoeHXeQ8MfJGtH1dJe1ST6Aps010ZZJVM7ZYR7Ok5hSyZnxQjVSmVcCMG8Ql
ZEAIC3nnVcanoUcCSBCXdAEk5LVJNT03ZtfcmIX8Nq0o9nD/q07l1QG3Bc9T
OFdPxd94upQbwrPHeRW3ituFi5PGvk65qYJqjAZQARyyGSWhmFx5eJL5efKr
yZhy6YPtZutjN0LMnZMtBnUs93wnSaI8djOoYKnnscR8D7f6vqxvij02U/4G
gyPwwzsN5MDyuD0V5dJIX9Oe7AZIeLoUr5Fm7PWUz8Orw3KdwpE3o2ivgZDh
RHAepOECIE5A9ezdvBsk9oS4oHopCHrMtD0Uh2amup/9HaxViLzkE3J/v/YH
gpDPVAtJztJxQCM23nvwUsOkQkohANEURewGNvKFcfNukNgZ0miWYqOmkliW
7JkDIZq/x6fWvhZ8LBWbIhBm3w62MxVdf6cmYJBv6xsz+ehSXlTEKShKpI0V
z8AJ8kJLwlRBH0cgn+muUeYIRn8jLayGXWZZ4mD8BSW6bZGQJDZUW1Q8y/ww
PUmdXOXFeA27sfnBvQkhkqTbrWNj892OJ+M/lblRywRn4z++Ao1wCvlSPr26
I7DuptPYBedMIlW1/Dh4La02rpQiQIUCfPHBOYL5WmuLGcF2dgmsNpO5ThBI
wBuVwtGJqbKZ6TRFFwRi0i61Kc0uwSHMW2PQxREagaSqa9SMLDbEVlk+vO60
gYI+CjBJ0ry+U/07NnCK3Wj+FZskmWP3igBFqhNtIki4W4PGv/T/9f5BMOfJ
4Ur3QO9on1U3BkE518X8LYFc4UwYQRHWy1PkV5RxGrgbRN8qu4dmYZpoA12C
4yhll8ubIZbCtsFKqZ50T+ruKsOnjWMe5jZOm+gyGkyKQ4SsMoxQJd5qe8nI
eGUWkQq2/UsBQdmPKFU4UV5PUxAS37WmHI9GSl5VmAabLneEZPN5JHiKeHrN
zRiE7BI6NPPrIMXmFYSTWnWLU179jdsK/ODB42iqvcjRzP2yi2zsZlqGppFS
WGMQEjsZWOY4n3z8kTKyM+GJOGbR2JkvE8OG+k7ddX0u8Zy3/jmWerX4MxYw
4mNdhzwi49tbhbKgk5bHDyCNuGqtVIBCRbPmubdxHy5vrYn9QtNKnxqoUK9w
iP5YI0ESZcdoWCqFbb7Hdhxz+EgIkB3xy8yc2k+XASEiXqqNFw7FoZm5k/fd
SGjmD3F6/P8BQm7EDUJ7858P69fKJDoJuASNMoUbaOuX5sSTTNbvRCB8FauS
7qZI5pba6amuOuJ5NHzyTIpRYMpX/V2ZCEs+CVcHMfZXlKoTX50LlLlK6u/X
dkMCcobkQMiKS3nk0Yg01V24TLmHehtI00x02Ux2zF5oZHnQZuJbNVkK7iNH
AHtoUu+U4FiihEEWL2JjcSouWvfq0Fn3MHBkXmV7c0Jou40YuEh4oGYFGtr8
xZj/415fsXeu0Xd5JwOf2k62tnR0ce+2ozBTj3y8MeEwZiM12XqNO5jRnEXm
TNwPRVhoYtYJ0mTQDnuZV6S/S6XubLo60OoeD+aYo5XZ6uxQ4vp+8+hg59GO
t+ZjIRHhEKUhaPqpWpwzaTCdS1PtMDeUPSHjQH2w7NrBU1iW8aEjchHwElMm
S2zLPI2iWu5JGXEHZYzMl15dkPZ43LC8Zqw9QzDgEAcVZ/tf7ptebO8/XQtq
n8u1KpfmsQy5R9TM8z/R9eRPHr3rrju/8PnP01jgXxPHbuaucXwiS5cnlCpL
V3BL8uOJstxq1oviVtvyQ0NNPbYf6O+0/MpdnEWmfFs07fRYAJ/rYoSl/wau
iBGIgze/Qb5G3FdBi3oqhqZuZ0BI7fR3MvCjaYu3qaclhLiWqZHesR7zTe2g
5Ti5a6cYr269oZHhFqCmRtLi6SO9rhYioZI9XEC6O0bPDtjDi9pkgIQWfEJh
D3n6VUYKYzdnSN4Ke36NnCE+T+Qt7XmvhvSqU9sx09lyXvYBmKEKUH6K8aCH
48vs1bRLMe1WTeudA2we1NmyfCMsJCUnpqeWlxdj7fqEKz58xOGHBECWlsaa
njcGIU6SAXs0lUgdneu+cPy2HUIie4dmgg/k96aR/IEg5IMrK3nJkd3cIKKq
0hY2SiO8qAuttTH7qfK5NDfuTgyxJvK7L16cVPlaIRAZYstKSDkSji6aekLq
afXqvCeEXaZGEyAqQb8YhIg7wfOWd8WoWIyA044BXOrzsrljxSN/4O3YzRmS
v0alyu4mbSoE4sjNozMi3DpcUYm6vEskj0YGiscNY1z9yH2AJilff1vOEBlZ
gRDHIap0z691aXbQGSCAEEywDsJw8dNQEuJn6oQ0HZbujmN6a1kF26W+0UoX
/VQ4RpnCfLKscIwCNOAWkVcx8bEoGW1z9LELA09PdOyvlMwxuzrTTfskjX3w
zCidyujoKjWydt6l3iwmBbwZ7VU+sqI2FmIuFekDjYVYvixR/w5vfqxYb1c7
FsfpoOCT0k7db2+TiwWvyiEcolDC9eByt/KjTggJgX697lSh1T0GaXTsoIMQ
b3FQI5YNkT1VmZXMLvJ3AVTOl3rYRUogiQ68/J8DptctfEhXj09cOD50llEq
970g6Ve1Ey1Hbrn11v1P/1zFdq0oecvf//in+1h54KnHNTHPIoG1idglkgUh
hZDrWmz3Gij55JfMLvKWyIEmSVXHIXnrz7fy2CRmIiUSc13/H21v/x1XeeV7
/kHzw52fJrNmremZtUI3oZ0moSG8mswNzUBDN5k1vBtDz5oQciEQJsHGN2CT
m8aywRLSjV5tlSSD3koulaRgvdiuUsmNVJKCZJwBEiDQGa/57Od7ztajc0pl
Qbhaz6p1dOq8POc5p87+Pnt/93fH+TiK/jhteKk+53ETuQgcTQmHuHQt43l5
I9SPOHWHHtHKyX1NsEemezqsIduxNq8LnGEOmzMqYBK2EWNHW3IV3Kl4M5qe
2C8++eBKKpEn6vJGU5V4sxpBEnY9CqU1RA6nXX2o6/hWlGRqUhY/dnp8qWYg
ZOhVz5SpHL/VVNnTQZ4bPlbfrvDgTcFWEU7i9aw5ncT1xpWo25BJy3m3e3RX
tL6n7YjemcxZlB2jNwlXzdE0ApbsFq5X92ULgQR/SCxcttOwAEIE2PSqPHtx
fEed9ouFQCfYCs1kNN7jtk0f9esGIc3FyoATf/yoTovFV3eipLIS7NEzY6qA
NEDI8f5xgZClM8dLo32X1rcK3+90RlPYWJtxm6jPxG2yNiNeq/s3GoIQp4Vk
lFRdU0JhvjwIkdstc0yMiOGQ7Qik9PW5QdQaqoiUQkQmj0N2qj7jaEQSrzSX
EOFTchaegNMQB2bQCMZdASx+SikV6pD05XzykoZjLnpEBpOts0trlL1aTxx7
bbim5FyOcGbhLR6A3YCQhdVS3D32qtXL9EpMNuDBTpm5O7Zab5yQ++HpO+vz
BaeglOeHFDBiRv/xR5e3+B797Xo21JS069FnRc28ae65OJekBivZSsus1Duw
PlewfJC2V80NErwHmAAJVmh23PDdnvBUgw9Kmp/u8XAdb9WNdVeMJZ6EYu5q
niajbIXYZsUNo+9BGcyTcjoswSeKesiS1qOS8W5hwSGu/6mKJ6qPxrfz1bnS
hWrfVGUkZSy/fOCFm2/9Xuubx/buvePuu/8BKEJjgX9ZedONN7b/5wfNSvYf
qpZ78l11yx4b4vlil0GCIYsyKPM078bJXLjyLFz1gg5ji3dyxXB/GRM24wF2
9w4YTEhSBNQ4epVBMpnMEe9GrFemn4bXsKud+qcmqMNNPIN/YaKTW8ahHDzE
PEbTl+s/ZKKsORQqLDRbLHAJDXGLHb9WFQkk5po24cMIu24LGOVqsS3MlkdO
98khwI/F4y9e2yWfybJ7fwiD7J4Q2vnyKVl2k+CL6ssoXUW223wUKRElj0/E
klVMTUClYX/WLs1ZLEYZQJtWP+vzT60Kw9oH74tS4iBE2/OVojMsqPzc1r1L
aSG7RGKi+zox1UHI8tq0N9MyXStX1oq08ZEjy0e/2UDjfXtrLo761dqZWs9u
QMjlj6oCITQvVNckLffNUlUIxOqkT5yh+ZRnvtx7+VKCHHbTQybLEv4qbadu
ul3O45A8CIklv/zlbFVIcoqpTZRDwCGZvhWXBt0NEudcfzViavMdK6tFeYc2
g6obhjgujReJoK7EhFU5TITY9ZX4oqz3bRpGYTyDZmy+m4m8RsySQ1M6hxKK
FZFRNZkMJ0Tiq/wKVPoN1NHWd4rnwZNzQQJKjbkqCGmo+tvb2aJZg9XY3SEz
d6cWI5D1wv2boYCFn0uZuZWgJMDz0H/SMJhcYc4Nzquyg4vERMo0za+1MduY
1cbyvnOEV7FGFSOLiaykUmCW6zo1KRyyvtx4jimeqnCI5qRKxVUyl/tGPNBs
xdoC/FCWKAZoevAoLWZa5qfYrFElOACSybYPtItGsp6LKYj8kMcG7I4lXSq9
pQwa+W2sJ/w8VwykSbqk/43nvnPDDYwDn90DVrBeIvAs8K++uvGG6z1ZSRqt
1ZlC/ozGYUiRFRskCTJM8MOQxnigIQ6R8nw9ZJ7Gkqq0/Ikwr57ZyqXNlQfl
HDDY0/eKjpMBCTF+U3hrzFiI23pilxlelXT78kYtVkxVOCbvk/GEIICfGB0Z
4OFMD5Oemx3M3O4MNNpIa/7qmAarApiphASuzbVFxTR9r6vmJk9WRiUBpxzn
UKnHMLknuXiqC2vkIhDbk59PbKkz/Af/fRlESWmumQ0c5MRKqphycMji3FCM
K7Sx6KkOLcQSYaW4ssmhluxdp5oy2ldwpdaoEIxnAAE/ZEClLgLYMIL3dp0Q
rlrJv3PDx+I7qGWv/5tBXM5BjddsfhAGZ30m4W2m9WIi9sKCf5qVXK/kQzP5
8rv/LTwhgJChQncehGRcHI5AMjikYVtYKzkCcRAy2f1CQvMbafEQyW56KMnx
hmZI2hqONGLA4CDEHSCyHdhTZUYom0CJq75vXJw90zS3zWSAYpG33CBLW/gw
Y9Olf7LLBtBq4iDaOmaoOMPguLRIXOclg0z4VNE6CZ1JTsThimRaM31OdMyC
OFiq51zpG2iZ7hdr7lB9vsA2/UOJKVQZsrhinaWQBMeIGCAmU3bqtydGpsQP
YeiwyLv0hOTvPqgD/KP7+GWLxcQI5PLwvdz9+FyemQtwUvqJwwkHIS76EYON
+G0Wb+/1fbhezj7U+rz89svT3bJfNnQhFoMFEQ1gfaMqbQ0ZiyY4xLXO5BSS
pDYWUyEkffvxR7/HOLobpLo4bkZ88ChARbM515LKTMk1p8ak0lXLWAk5tpgk
D4u41HlDy64m8iojKf5q4pCpLpjgzGDCZd2/79Hnnv3J3r13CIHw99KLz9K0
zEq+YoOfPrM/Lhks5QrXaPXmKbGrVrX5ZblxJHRTT3VTM9jD16eF120ZXOE6
5EAYMFg8MnI7YJsYQPeVAbHcdeCqGhnuqOujqsUDmEiFpHIr0iuLa8e4Toh3
m2s3QmnfK02iLQbYyj2ZnJfmYR3ehM5gSWDJ7KBVDZgpOuiSJ2R1c0eZlImK
tdGpRGUoKdoYjLsRuWfLS5XpjNXO00LSO5L1csjCbqRS0vy4YtSRQSMZEFLu
+hlPoEDIYhhA34Vfq1KAE1Lo5BAtox7vLhrhNAvcBLeJR23yG2vSh+n8w8dL
CscANpKfXroxAGOk46XVs91bPO00/TZJyB1OxNvX0/J/VprcVLjHWeAlebb+
9tlQuI1zaflsZMcFQjTprqzZHNMRyKZnW1wslH/zlLNVWZhqfzwTmvlqYiDN
2sVCBoQAP/7w8UUHG6o+kwEhf7Dcird3qkqTASFvlqqAEOOmpr8s92Bc1dqy
gYqw5JuiMw0DLg5CMuRV6UTpIceEuSdZoZ96yOAzVcyg99UQh8TOkFgbZLz7
QN6Ce+t4dz4uTVLaLlKaaR6REQ2GfxuOkonAryw6YUYFYpwT4gsRPrmod6wE
x7jpTPC5HDlPYpIqx/QzYt8VyseoSYVjodReSXNGSoEaKpYvG8QghAVAiEI2
Qh0mUxbU2oVJADOKs/ApVueXAiHAIXWMt1m+mN0uEciHp++MfSDSJJmYeEOi
vkMh1BvDjM00ehsrtNej7GnHIY5P9FAJyXB2r9knI1XziqhzY4ujR5VMKtlP
M0apP8QTG/M4JNZc9Wm7ZJFqQcRbtyYmhABCPHfVGQuxemds5tZTGSvW+KRM
CbYYNe2VASF56yZJ9koqU2lpLNXpWhqTojNgjMMtv7z77n/o7u+VNWf5vnvv
1jIr+ZcNvv+DvaAC9lLxmniGaBnHVjXMXA0aHNkmhTZ45yjPZSeb6+kzCdsn
XX865FZrYFU0th7k5pQFL8MKltv4XR2kJ9FaJxuI0JsHIfEI82kYJpLRWI+k
QlR9b+X0j/2JrZzctx5CXSYcl0ZbMsAjH22JQUs+iSZ/042XEuRQ8h4Se5DS
1DClhK/nnHXCHpJHCyS0MTkWdMC0NQ4iMODCzyrOshGVlHVcIeFBD9AIgXiw
Jo9V9BlzU5eHfqzIS7XYJpaF/5yBH7EUfJNWD7Ihjl64RoGKGIf4ccTQqKdJ
QEyd5OERCrLy3KNH1RmQBiCExr88SyCldWXppoQQsAdHi/NSQRoY5XNpYIL1
QJ3PP91ao6a6dXKGAD9CZ2I1LVsW3WKs9GaT0Mzo1NeZGlPKeULofwZvNGx/
sDm4BWiWL83kj3n+/fGT8+cchLSUVrhZJuind2/PLy6tG69DSTFfrdsylx6e
cLYqB9Sy24IYRXgyo35Bcqrb+0SgIrAo5QyRRnq+mR0vJx4Pl0jNuEEyOKRw
3iDZsVL9L7xTHNABCRcOcmiYu8o2qkEjIRGvh+vldCUwblHXUER4crRXKF2h
rhjwYOj1wvnTZ5+ARrh2tnm30uEogm7MLY3xqvn4o8sCIeAiFwmxSruf1Ovz
CeoQK9VLxowNHRa6+MCGdfXkbDNnSAaEgIUUIfri80+BRpkRAODthPEyCISH
MM+AlRERjyXj69BzNbS9MHcGosRvIbEcvTiRC49o+t/T09X65jElGvBaVjJs
xqDLHwLYaEhSLQUtcSunnoIZ+T10L+QSkaeFhcT0A0JmB2W5JPugAIFkgSVp
LgqlM1Q94uDRDZ9NYH8lit58Tm0xjpBrk2CYoTaAkBvr8a4D396zR/VKVKp1
7w/u8qaKrnzFBmyWqD1UTfKaC3EQUkmL/0qtwjuvs4z3H8sIgzRETV7lNm6S
pNPAug6/ZbzWJnW0LbsZvPeSeoudIXmjHxt3jXwMThgrPSGhXMg5gAc4pDby
3Pujj7OsxJY8zSOOtuQxz06XnMEk8VDEiCVGKTwPeotaUGakV+t5Plc3bfvJ
irFc1lNuidwFcqmFUmtXASFGl5ocVxm4kdN9MvT1kOCTZK2uz2BzYzbmeqoN
kmZEWsEUDNnc0ni8jcl5eYJMkA2xt/32HBm5aHbDuIidIe57USpxBod4fETd
szEZsetaW11Wnia7vP7agf/zh/cXuo5cLB0DjbDAv2zmcRZP52FCx79tJ1r2
PfYw3wI2aLzAscW8JLlqPjc/OHf5I16q9TOL9ulvP0+QyTpA4hSM9YqCIMVq
X1x+N9Z4lzLq1whCLOOmv10gpDjcsxsEspvQDKMxtfxucXGBz4W1kkJ+I6d7
BUKW16YxyjNM+rBiuwg9NEQgpaDFLV8HIy85bievZqRCNoOfzTU2wV1j893i
N0pQy6BFKg+iKfBOzhCLZSwNMF/2R5rlhp3UQse78xaTOl/a/QVedUxAGnbJ
jcTNMqOkYJY7Q3hcaRZlSEu6yFrJg+HVZErBz+PkmaH+dn4vCYen1uuiHwJC
2kwJMgIhrF8PRYctASd1LWbq1gmErG9WgUzztRrPw+6Jqf1Dx9V/fsJew645
/KDFlekuD9/LBWbOQmfAVFYm5vTrPCGq8pwJxAQ38lQegeTjMnI7C66we1KN
N3WDmJbUherx4gXJby5Pd9fnCiEpIGsykiIjocxZw7gM7/84cCCMDZbgadfK
tZVFTsc83fQcBtoHOo+4lKiiA06iqKfaXPKYuZGV0TEw038M7CEjK8Kn5t3z
wy1xnbjYw+D65MCVuE69i6Fx1Q5CZOsfeuhBo6T+4C4WlH6SASFxU/qAEkh1
wJhvqQQfadXGACPf1RCvHGlAeQ3Wk92Lk+WlWpVmabzRoSz1NbxYRM5JSB2R
MyRD+cicQo9KbOXpvMMqriX2dTjo8g0UbTlX2hZtySCKGGk0dIDkd/FCe3kK
CtfrjCMjI6X0VGnC+/ZC4NLAV9tOT92RWSr33R8+vizxc6CIxbwCKwO7bBLB
Z8dj++5+Eo2tQEjiHlmfcXzCEZy/t/rWzfphuu7o+ECrVMiaQI481UTAw/Vd
XTbEH07fV54QsET55CvmgeStOGy8FEPUS5Vnnn7ymmuu2bv3dm43K8EY/MuF
x2dXli6fi3ND/Bbu/MEdornSeM0yXKubK0AONZYxzQq1x+/A2BmyY4uSLzLl
d03jPQRi/huBkMuXrNDAVwAhtKvqlQGuJhe6ZgoJaHc/ycm5Cza53pmNmecq
XNVAxyDETcBmECjThIWpt7MIODj4cLw87CF+ttTPp+EN0gZxhHG+9d6deq4F
4AeX+aWoql+Z15pvoYDvFghRVi9X0d1x1MuvfPzRZWVVMG4elMHQq06cVYGM
DD1tq5ZBqNPnTonYEyIQwrkkt8hvp63v1GvDNQ/HgKvpjLwcE4v15iAkc9O5
feq53cfUB9Vcfz5GIB+evnOtMqmz0+qbqwoGgWPV24mBE7TN1N/rt349lI+J
3SCZZ0NrVCxVsv/yxYFA3DDRrNsXjLnNa1kqEyCQK6HCi97SmZmsBDab8ENG
prcQIw85b/6MY+RKoKeCJTZ+V6fppBivjfqWiz5jeZXTqowYUTRdlNVoHgWj
7HoV3WqxVWGaTMKFEJSbMKWrVIIUWyKdOtTG4Cvawqf6fP9997BMY0FrtMHe
vXeYEtr2dAZ76iqTFyY63VjHhXqFTwyEFHoy1JEYDNC3TGgpBPqTolEq1sN7
0uUdwCGa768vJ/RUfaV4TSLWGgBnXG9lPeQUq9JxHCLxOrPrKc3DPU4arurQ
wdrIc3xK7VbAwzRac7ktmYDLThijYYDG1wMa5b7wosyZ44AEhG95upQmY1WK
Ukk3OZN5cjKdqQfB2HTljrbeCtLNlhNQNzToaUpaY9oaQVZODNI8TnAQsh6p
p6qBPXzmyKwqyZHhXRSq6Obr1u0+KOPBIMmGOA7Rek40XTicZwsDKmIQwh/o
Ym11ubvDQIgU27gcfonAkpcPPm8VIYttgBBOQYfXPngfvMFzyLdvtFgxvj9/
vgnaMRL1yjnACd92vJNNt4yZITu12POcKb/L8sh059cOQjwc85VBSMYZsnxp
xmHJwloJK08Dh5ztS+tfLwxNVCrCIZ2/XRHzIdMxVk4sjnUNnaCxu8xQHoEI
RYzNDzBZZiYrRrqDkHhgefMrM5dXSnGxLz4+C1hMcVxVz1cBC2eb8LOK6SXO
RzVtkPnuOFCSaYtrC/O1cnd/T3wVdJUOSwh9p/vSHGtxOh0hlr/bqcWCZgCS
33+oJJqLkrBwmi6PAe9qT4t2CY487RP8oPuIbeWYcZbuUq2SgJDNagAhK84k
TKrGDBbE/DdLEQgh8oQ0CccAGuOzM+DcQSmPgZR285CfWXgL4OE+EBCIH/x8
fZW3nM7CYCoxgbvPpa1HNZTX06xbM6m59XFTWnQsLMA7My60Pdrx0rvnDYHw
UElcFIv8eaqqijmrN9IIjXEIpiFGIIPjPT4zZZ6uqIrVIKtVuTQ5ZLi/ouKz
nte4QAgQIm+VSqHyqddTw9ao3srC/KzV6m17NfYbYAfHuw4sT3cnuuupwpVM
pLzxcZk2BzCqfyeNFE7Eu/epp/eJmMouDz30oHwOLBQnyyKmssGP/uUxOVIs
YBHEPxOHp7o0Oyh1srzHQE4bcywMt2SsdowEuHcc1vkemYQa1WSXU0gMEOGQ
msnlJk4n+jw5Ynk0LrcbS73pOJc3ahnUp5Qc5aEkjJdYQyxqK6d/rJCTdtxc
WxRYUvUcjulr+HVwTNCj39zmoZn4k90zVfxiBKLnk8v3oIwJ+aY5NdKlj+FH
PWi8YxmtWs3JzrQ0z47eBtBFT9sR4Q26wVNndb6WKlIClNp5OG+ZPjh1RM1S
cauTsgJqgA3zgQRnyHsdd8XcVEd6s6df5xe6uDiW8XVsAxuBBNuwmSPdIk3b
MIk/nNnY2XCCLY333vGSQMhLLz4L6rjzB3fs2bOH6xIIGTndB6IAYHzr2mtZ
/7fX2Weh6wg45P94zEDLmcX64Tf/K9/ed+/dd999F2t6u9vYhTWgGhDIqdmV
6797w8Rce/wy9AoyzZwh9fMx0aJY7ctovH+Nmu1fFwhxCZE8UeTsxXEG56GH
HwCWWAUZaR8NtToIYYFZMPYoRl8Y2Zdffp4xFz78znevP975q4Y8WAzHqy0H
2Wa0PMCzzcIvXnxWIjBZENL2igcXMPHsde23vqXj7wneYCym00s0mdWv6fix
I2zD4Lh+uz/JoBFBoH37Hj33/mQeKnDYzFVwarbn3+eee6YJ0sh8ZWAjop3w
L0f48Y+fzB8hn4nDuHlFXTUuRMiE35oqkmhkQpHW1tHpLhPKSD3MeQkOUTcr
IZuDow2l7noNu3tdACGs2VIq6zoOCGk9cUwWcHmmWxVeOBdX0YSYmqkdQ/dU
ss2IgttdNDu1WJRsfbY1PvjEYl0gxBwyE2/MFQ4pFtMQYCTszUAxjZVbYgTi
NFTNhkAjtMW5xOPR33lEDzwWTRkxEmz3QCHjIJf+LnHIyHT36ZRrXTPZ2Dae
T7nyVGtPBQRZn0idDJmCWSWlFuejJ8zrN+qJ3ISvN2WDkAPlXET3GzgEBU1J
1lvlZeUYAR3NlbeFaTDW2CxHIEpV5ltP0bVfYipOywL/+ldvtETTyXcsRddf
9Vh/BzlKKU1e/ulZ1CUFOPIgRGOrsjKSN5eJF6Fly4+xMKWise4XUmmbeBwk
hOKVayqe5NKIkqHcFgZktO9oNrclIBAFXOQGEUOV5XqaYEsPn3v2J7wKGGcT
Y69bwTsA299999uYe7NKXW2OQzLsjrhJk1z5s2Bm4Vj/VAVPJdi6cVdQRlCB
J4oHWNDXIzIOS1RQz18y8rAVTnayFxBCeqGMHguhoOSWdqg8IdpSsRi2AVGs
pqnTYl+rABz3BdvNMr1lgcZKwAxr2H58bISfoVWsi2ghTqeppKplTTweCu40
dJWsh4KnytIFAtFb+mmHDTORxfAz93MBflQCRlwOEIiDELrK577HHhYI4Zjz
i4uYj//4v/8jcKJ/rnrjDd++9ZabFueGfvTUY2xQXV147tlngBxvdPxmdXMF
BMJof/HJ5iP797EXu7T1nmQzSyLr+cVk9wtjp19V9ViBkKvikFgTrLRd4503
5FT741+XbmqsEzJTujoI+ej3VyGsZnJ7YxDiWbrjva91/naFhglgCsyCh2aw
BUII7PXAg/d3DZ3AcGO+GVWZV+wvxh2LLwKDgxDVKHQQwpScT36SriLiIEQ+
fBAIx8eKtfUdu+nmW/lX01sJoLGj5aqHTMz+k13gEL7VV9XR5za676Atnbof
S0RPHnnon9ldXYpRRMOrwObSYhAiR1DsS/E1vuwXq2tvAkIatigis6JwjPJW
+JdPgIeqomh8+O10dxwV15H1i4vGdBUFRac7s/CWpvZYBI7mMvjiQ2Z0QtYq
k5qQjncf4C4z2hgF2ocXZ1P2gpVlGQrB5Ya5uotrC/G1jM13s8uVHCFkxyd8
4S1HINyyzMHP11d1Us/MnRg4URzuySMQTZblxjRJkEDRj3GIpA+EQPSiNnL7
7IAbSiPCVeYBIe4nUY6DrLwXhUmi3svnYiWx2FaGWLM5K4RA5Kk2OfTeNrFM
VVh2LMhN11O5fpNlmDQzgcnTXOzCRGfGOHJMaZDOrYzq7ByQ1tf2qvpmYf2l
MbFz3S0PPpHrQIBnvP+YIiByQXA6ZdMYPBBPIPA0BCHEh+Hf9v/84E033riT
WJl0zOYWF08MW+VW55ao8O6W6zswFlzJ8yOrEV8zTfhym4urJySW7XzaMTNS
ZzMgQbrrGnD/ivsLzJCVBIfYqAYJES/rYzDGxCW2OUPiuAmXzNnj3JbpwaPK
HhJMspJ/qo4XpELMy5HKtsfK7fJ78N7jVfCjf3lMN52z8+9Pn9nP5TBilnfz
u7r5XsInj7o2E0JgDY1/vaKNIIRgmAQ9tKAUHi0ImbCgtjA/W5wssxLYw+Do
LDosh5LvCNim5hFDfiwAA+yvV3dylMKCSttwo4Mc3LiKYCY4vzLN/VXtvHgv
//OScLQ/ffapJkfcRC2vFR4Bfqy+dfN7HXc5g0g4JNCAdwzENAQhvrFhj4FW
6xggf6DVsNDp10X5oLEsmdPNDyxKwivX2aRmqpYqYAl5NrQgR8fhk9NCEW+0
HDG5p40lYQ8OqwW61DPUpkkuUOSBB/6pMFbk8sEkrGnra3nm6Sf5Nka2PGBn
+w5MDbVelaHaEIeo/C7NJkr/+j99tfK7+cZZXLZ9NyDk8iVabadvndOCweLI
pvu0VnIQIjc+baZweLQ88I/33YP1v2Xv//aTnx8Cisgrwo4Y2e//4E5Mdgji
WMYolguDPrE4xlcYdHa8+bbvPfmjx8ESbusVlHQQwk9j375Hb7vtZjCAXsU+
2cTCMpsWPBibH+CY3T1dzNDZhp8PC5z9tptv5CzsqDUs29S1usDCWy/sve/u
2276+7/j+BaP6ztGVzkaX8V5uKCFhleRASG0Fw7+p717b6cBKhSyAfPoaLbc
+SuWQz+LHIFjsuXLLz/fHIQkxN2Qt8uQKns3FlMVCBEOoQEkLH0pZYn4VNS8
HLnyNKxxwTGJoSnxWbQQF021t9b8LBuIBMLniRGGK6F5L890x68OxlloRNIc
MRrJuJgAIbqV3OXdgJDfln7qL/B3Kx0Ncc76ZjUhjgYQ4rW845bQG3LpMIIc
yuyup+m6FiXvTjhv58snM7LPjkmm+w/VU4UKxl9vacmK1oMwqaqvxhF8xyFJ
wbWAQFREbKFeUlYI/2ozsfcVXxAIsXlooUfUAmBAxg8P9lAgxrNL6iFB2MMQ
a6HCqTwGnirCXZYB8ms5V7LSb2ZPg3aooiGs4d3lptmksyfHrA7OZ59Uyz1L
pbfAITfecP1TT++LZduBIvKEuBEXFBnvOpBEW0KpGg2pMllknkx3PQyOmT+e
8z/+odjxU3eMbymezQ66fLo3DCiDL3eQTK0PhXCISZmlpZDZd3Kkl8tRLpLE
8zfq25wh/FIYbY+2ZLgBpqMy0G4GsdhFf7jpxf6tHQ0ezBX8Gd48dcd6RGjB
3Mv1IXTx8oEXbE491EuvfvjDB1jg8Wbh9dcOgkzY8vHHHjYXcbrx93+wl8Yg
O4Zh49tvu2X/vkcV5dFx3mg5fP9997A7uwhmsJJljsbK/fufEHJgBFT6h431
SAgLASZBmPfdezfLBqFT/KA0Vcceqm5fCykEHMrVOVQ/Lg67CIrIbcLRuLns
27BM8JWUT6K//3f6BaOnpiBktv0RDuXE5sW5BtVYMpk48VeLc0Plk69kIjtW
BnegNeDJl/TDB2YIdVzeXBF9FLzRNbN8vGT+jRiEzC8u3nTj38tzzpPMOLDw
8sHnedfRHnn4QcCGe0J4a61dmptbGne8cfvtN3MK4AoHeeKJR/lk/bZ4UHCv
AUJOW7SxdFVnSJwvo1as9o33HpjsfmFb+d2/IDRjRupS7UuBkI9+fxVnSB60
bIGQkbTi5HgbxpSGfb/nhw+zwZuDZ0QOCeZ7UjbdiSKsl3UGusiDgTW/6SbD
CVxCHoTwWBrCuelGrDlQgbvT092mmf7HH13GYsp9oXsNUMGay/Dxuub4/AtQ
YT3mnp+wwjFKmbHYzXV/Aw558If3sMxXQ4VuNmMvQMXCakKACS6Lxleh8I1A
CJ0HSglO8K8ujZXAElayGbsIb4Ca+JcNOBfXy2EbghAOruTc1UtzdEZZug4e
BDkUl3HZ9giZJCwRf7v+6bNPTOK+kTL8dMIxNskydmRINbxWojotZzNfK/Me
Y8HNMRgDHMJe4g0aGhzecq7GaASL7Ggkc43FxT7G/EpQa98NJ8TTcj88fSdz
h5hq4oCEU3ipSpPVWmiQ/6IMbgceVjsg6LQr5RlbbBq2qXJ7SJZ8PeaBALDf
PV/FXlsxnbmxCxOdZphC8DoBAOVBaYDLraE4O6ZQ2laxy0LEP5V8vRIiOBYX
SHN43WHC+1+sDDlw5F23CP5QL1ZPICQ+7Ea9ge9Fxk7VeBWjlxS5q4uwUhqt
mR2NRnJ2XI4RmuIvPiCLo0e5XpFpsdocDXsnpZS4gN3t3/+PT794oGEVudKF
avdAwa084yl1FLdoVnEyTJPF1lCdHdP12i7qxfLwyTfN5EUJL6JtrKd5pq5y
BsxzoCV/iG6ByvRwF/Sv54wkxXdCJCgTbfHycKYAVizEKIg7Pj7ohUJe5Dgf
RTXsLo/c424f6+Hv6qA13gYYfZZBFDff+j37aaThGB5yzZTZTG5/Plnpywro
gCi4xeA9uZ44DgvG4e9q41tgiXCIwgR+TPbifmn3KyGJibvGJxjm2m/9tdTw
7F337E8YLqAI0MVKNw73guL4FStrkvvCvwIVrORbZdfK4htICMpmihllEALP
htgmOkh3RwtH6Gk7wrKpEJj1vwxEmZ4cKo1Yls1a4RGPyFSH7OGZ6HjWf6os
xJCjIRoR0TSAyRzRNByBDvAyAYdIii3J4VpcBHUw0QZ4nJpdmbhQnV4+P71i
ecS8AAVCLoeUFi5EhknFdnnhf+eG699oOcLtY8AfeeiB1bPdAiE8Fez4t9dd
y5Zc7D/c9X02FgjRzVWI59LyNJYXBG5PYPgNauSx+7MzE7W0aknzvN3YJTI6
NThWOJYpv9tQ4/2q7d2gcBLSsbMgxMXK/vIWg5CJuUQNu1psw0ZjVZnaAxLY
4NW2Poym5u8syE3hiZnyGLhFPt75K6bAmGCWJxbH8iBkeqosG82twaqyDNrh
hvKJrecg5qJZLXEcoIj8GHzyqPz+w7oK5mIf7e5/93oHIaYtWTjMwguP3rRe
uD/BqC8/z+9xn/3iLBzDYVkDhKAJaXAVcZBFURUHIfRBwEPBFwESvtVliiyR
gJDygC6TETMwFjw5HAHIEdtoOuCRl0w1GUVeXMrMgyYxVwT8sHnpXG/bK2Kr
8lkc7smrsLKZJ94yCS0FyTJhCUaDXZSDY2lxIUHG7ftYzxF+hsIk/IRLNZNb
V8k5bl8GjXikpm+gJSNHpnwcurebkjGAELFSL3bubegGMdG8JRfOesnLCWXo
pnl5ENsrcNKkRitnCJ8emNBPfrz7wOhv58HYp8YmfNxsOnx2PPbzr4dkWEeA
SseQZdQE3KECK8Xx0PST961hjJSn6q4S2Sn5QJytyrfyS5gYe/CEZCM+9VLM
H+BcXIiydK1q6uoKp5Nqt/nwf1cXbTUILIy5r14j4KzOmKeRTMeCXWaCzyVI
tdXEuoPrwJ0b86UOTt03VaEBOZz14fZ3vjqHafP3v9wdNPoGhJM4tkCaFlyL
7Fypx/mf88PmfEv4tKEwDd0Qz9NPFyu5xevDTHzKD27hg/Av1lwxmtgZ4vc9
n1TrCTJ+i7l2DRTbJyAk0k2N034VPeFtsH//E4rFYIAAURkQgvVX8AVswJYc
ELyhlVZVp9AjlwVbvv7aQa6FT730BEJAIGypZcZcge/4mI88+ABXrYODtLUl
2EMgRIK3lp8YvCjKjlF5XKW1ysqfrb8tpQU1V2IXApHMe5xF635IZcQ4NdS/
slDITJGnl9/aanUSVFDu+plXspMzRP4QeUFdtSxP/OCwSrZqiD2c7HE6Ujic
tpLW5+fOXxAOMeCxYgpjC7Wyq6vVgwj8ywefv+nGv99Ik3n3PfYw/wYWIhdQ
BngAPwAbzzz9JFcBVj/w3JM33vBtSbg/8cSjfMsgA0K0i+111syTHCOSVsCm
f/Hp6uJUNw95IGW9TrP84vJQvabX3YLaVVN3DYTMDYxMd2Y13qPCJbtsAgmA
nAwIobelIPTxtThDYhByppYIFvEqxuBif5nRY4LZoLu/xz0GWHOs/823fW99
s8rKyvsTXUMnsMW88zG7bCwvihrW2YmjAiFsqSdfrhKwBJ/ADyGTawINFUOP
TeeTlTR5HhTxUQwFXKGFLU9IoZtnVSCEF5efiw0chNCc7Ipd1lUomgD20FVw
Cg/HaEEOjZmVEeENdnTvRwxC/FuDaksDgltCBdI7LQUZ1UzYReKl8coIS2zV
3uUFziePmVWZTyVE+L0ztY/5JI5G1kwQO5Es47yLi8Xp0pAiMixspkV+GVsT
Fk43Fi0EKCIviuurFJcGHY3s5Buxerhtryj+ohRdSag1hdmnead5XgwgpCHx
lRvkshVcjhM/POCirG1lS8XRGQmRrafC7Cp9yNWJEaHGW2t0ahoEcmJk6nz5
pJgJXHt5qtfVrmJ04aZTrh7MnIl2Lo35ltpGEXZOiq2x3q4tYgJmlocnKwY2
FExhPcZdMqFyXFjB37OJXKp5QmYb1GUD8EhYVfwKWRzvkmINMQ8T+yWBCJPx
XJhS0opYFjHEEjWFcdYIOLnUiLL9xzDKSYpr5xGVvk0oHEFRhDMeL16wcG11
ReOgyAuNBR6woDbZCqRR7QD6oFhPjEA0nuKKrEcUVvov+opbEy8sy7eW5jPc
MjnSm1enFwywMErqv+K8LuwmZLguDXb5wHtemhw/kS++444jz+nYCBrprgSi
8BB3xEGI1T2MOoNlv/vuf/j2nj2a/8qtlAEhYAPxbK+77trHH3uYYbHX8kMP
ivghKCKPyu233aIYDc1KQqfHYRvGKnNMgQqOuX/fo2Kn3HTjjUqvZnfLZjp3
9njHbwAheiuy3pLE64mLQyZbEUNPQknmU6ksapwMa5bdijaNxBIctagGnGOP
2vaaLDLNlu4aq4VE9FSBEO7+4txQfDqM/tzwMQBGnOCWwR5YczZTmoxF7tKe
2Bxqunr45HQs5+7AyZsSfxgWSZMZT2ZjSU3/queKnrPAL2Kp9Nbq2W7m8rQ/
f75pmbmbK/KBWNtcwVopjsO/y2vTEnL3hokXP1NxGW7cZirFGeOQTHEZuURK
oXxMopi6XeNd2qqAk10iEMyNgxCmroCQ1RDtZY1k21WcLq5b9xd6QmSjgR/1
+X6u3az5wf/EGk3wE9uaegzk5eArcAhPI3hAngFtjDVnx7a+Y8c7f8VCBoRg
mrnpMu4qktLd0xU8yeWh/nbFNdiXDQAPAiHCNhxNP0MeHn5ZcpJsgZDW5+db
7xUIUfpMBoTM10zfnoNzChod86tgWfBG0MJBiOAW67nkhdUSYInjgLWEN3SZ
co8Y1ur8lR9N/edKefwcIaieXVy9TuhiMxWVjT0hcaW5JMJSGmJ85APBvvM8
YGgalqERn8RpIdJDs5/e7+qAEIZ6crRX8EYg5BN75s37wSemhNuROEaGDgM/
CudLHe/O0yT0YfXyJn4DuojRCP3hyDQAElDE04fzcqmZVlzs2+hOyqCvtX+v
Yf4vD55Hl8AGY2PDefWPREszfcXJ7yFvg7wfKr6p40wMnJBdYwHjcnLughCI
++EXSu1ublZXpj0IshGq3/IkO4VPppOXv9JehEAUZWAbzIHhihC7pymdFmzj
2bVx5Xp5J1SxRRHw+WJXHoRIEq26UgziCT2eO6w5fnGyLMeItOItbJQWc8/k
X2SongkIKXbxClWtkwsTnczoPUYDkFie7jam7uDRarmHDbD+sQOBkwJFaD09
Xd4BQRcnnZ4r9SRp0YGQ6bEYH0/PgPbAFv2cKw96/fpMxMQXGAqrz9L3ikmS
zhTciaFYlfPN6NVaqq6jEBWwSteIwRI91fk2cZOfyvGJqt5or6RES2UyBiGx
U4gzvtFyWPERTD8XzpqGIISREWDgyQcYgDcEX8UEFsbgUOzCFVml5pVFRnuX
IITzAoTuv+8eBoEBZ0cWuKjWN4+xwL5PPb1PL+pwjQm1YzzQp4VG3Pozd7BE
gGBPZYvjpvIuoohk8uXj3Nidoiou8QQaYfm9jrsUl0l+FGNtgewxxm9ZZI/8
UwEgEdFU2MN7ZTG1qKZexzvFw2/+1/nFxfVIvsyL29ZTMZMkvWupor3mzl+o
R/V03NXjazgpfdt6PEpv6YWcOFI2V/7hru/zJHznhusZInbEoK9emrUX+Ker
f/wojcJ/uiocEkgsvaEOxTYJ9xiKxE4SDpVRTM0IiYBJQCZXTZxRIMZBiDlA
Pv6AFz4LfAXwEPVU2uzq+V8IQjJ/1ZmBPXv23HTTjZhpPgUAYtGMmZURmWxs
tHwLRje9NMf6m2/7HiuVkCIGRR6EgPMFAOQJuf67N8SZFJxIFl/HVziGzVjZ
092mvcQk4RT8xHT8wr/uEwgBPGDQHYSwgftngAq6Cul95a8i4K6ih2Mcg3FR
t912sw7ISrqqlVygxsfyUldLIp+Il8uCgxCPqmSK6gqE0Fsllvq83vmoTjQd
6G1dmN9ipYJGgKZyj+RbUns3mTsckrfE0s1SFwroJU6Q4avp/lBHrP9lzPGb
g2fkGAGTCITQYll70S0YYfoAGhFBK57SuuTLVUEI43ap69sfnr6TT0CIsnHj
ZuSZUnvi1SkcVmwlA0IS4mJ4XXj8JeMMocmdoqIzUh7gSk+NTfBvjECUGFvf
rpwZs0Pl51+L8hBlRjH3cV6GdDultylhtFSBIbFNST9TACAQAmRSYVwByIYg
hIN4ZOFKiIvRH9Pj+uwTezaGtrgcnk2cb8p1jddYVshYmzkf6EmhJyn7WyzE
6bS8UcUXUobIFoczRHDALVh2oQvHGBKiUY0Y87KGZBmvp6MF6WbQebbncXJ3
ioM0VbuzpJWARhSsiQ2Qigj7/Fca6YqqcEYLAEVicVfSBF55jZT+o3Sk9UbZ
srpZwmx+++SwsqhZcFhdfHcryYszMg5SweWTswCErv3WX18TuBnKpVVAJAYM
aytbIMT49iH4Ag6h+ZbyqLDBd264ATwDRPHjXBWE8GvSJE4UVo7D4HNGFjjU
4xZiuPHmW7+XKqxuRTrYRhFDZcHEXNA0YLqSIYUqa0k4xOMvMes7BflZBGKh
iqiIjMrpxhEWBVzypQCFPYzHVWzLH9nlQbagzlLl8MnpiQtb9W29b/l9vc95
FoqASlwnV/4Zeu6a8wJOHs3p7W5rO9ESRL9tL8VieBt/9PskqcRxiItmMPgh
xXgq4wZpCEtq1elMIV1gyVT747FLZPnoNwE5TercxZSPOBwzUGzbvHSOfkpR
Le7wX4JDjh17/dVjLx18+XnaL/6f52jvn3+H+SxWGKMs/wZmN+Y2qCIb831t
0zV0YnFtQcSJiUVzFLCevZS+yqMLTqgFuU5jivIqDvm5IIonf/Q4a8JcstuP
b87/seH5mqEXsAqN3w7/Gqtzs8ZeGPfWE8cwLsrM5fis4QlcOnX/L3/yjxIM
ofEtPwR24dR0SQGjGEoJ7YCv/CoUclLkhX8VhWGBb9nGN/Br18goiMOWfIpw
Qq+wv9OloS8+zYKQ+FNfKXcjE19Qk4svJqOC1jDxUwvdYrDEqTGpMyRZo4lq
qC59cjP9lf0pTJwBD5zU6tGcmwXbeDYNTbqpcoyw0seq4915F0LhIVQ9wXoq
N8Q9pVceFwCBKFmD93xxsQ+k0T90nDY2v50ctTQw2/4I8EMOWD6ZMue1WOW+
MA290d54oNwNoiRBFzNfTzVDXJWdpuQaBWImBk6wzJX+l2L9jYkqDwwDwnA5
ArGCO6kWZQaBeMzF6BCdNoXMcP4lfOpKWZ6Ba8hnaay6YlNITKoCMTG7UtuI
tjHWc0TcVM3NYz7qwtlxK2Ca5gvzXpIkpgsOS738SshFdT5qnL+jpE6xRGIK
pddl49TM0zX3VzgJO0uXLMowV8g7vYVPQC/0gRN5x7CG2F/Pr9zCIdUFPc+e
/hmDOoCT0vkF3jIgSu4p1dejV9VyD922dNqQ3ZO3TSK3JO6doTa/WQA2I96c
tVzyD/9tXBtLotbybjbn5XGykith8M2FNT8bPxL+kzGX0cp0NZX8vTxyj7Jl
tx6Jzz4BEAIqeI8pvMIFMrDPPfsTLpy7wMIbLYdF42Ebxk0hHsZTqdBia8gr
wpasef21gwrzcUCW+WQDHjl25yD8cFjJKQRCfFlcFHZ/iVfom0kCEU/L4ZZf
soYjc43szgOmJn0PcTbkVPTytbLOcoZkTLCwxHooNhdTQRpa+TzHY274mIMQ
AIls+tSpUNRpuEHAxR6tk6+okFxD18pGCNd6RElnVOZLBk7EGCneXSstKJNG
jnyveDlzRY5DeNsAjWKgpRq7ycE3VEh0CVvPJ01ohJWLU92VhNrXVj1nUYMR
Zi7nppsky9DzkfDDyeOKsdKbMUtEUGQnr0jI3Kymnoqt7Jgw+V0SAmFhy7H/
lzlDaOffH3+3/jbtfKl96czx2thRJsUyc55OwnJcxR5zfPmjyrn3J7WSf92+
a2M+rWLd2oyUQLy5UpmXNdGU2VxJazMYJl4mIJ9SWqZWFWRYye/r8f/r/8b0
g0M2g3SqDigOD4PDVDp4xirxGWWwJCHCv4uLWelXP4v3X06SkCZjgl0YOM2k
AANYUiNhLg34NaZ6s1uxKobCozACBnH8JQ7HeAzFsGWql7IV4Av95z3AiPG6
AD8M9bcDbGIc5fm2fnBnmNTnkyow/Bb8JyY7pbQaryDDQRjAkCBwSCCk2PHc
xc69leO3LB29js/51nunOp8EmYwXDhZHXpuYeENvdWvDLTT5Fsa7D5T7XnEc
YvPo068bzWB2QFfHBuyucJjlgx+/xd82NNAIjYuNYzE8CTyKle2UVHeA6JUu
+OHhGPlApN++mb5e4kAMl9nd0yUtPhNRMQP6OuutgKwiOMv9gBAMUGy+M4kq
Qg7yisd1YWR0tF40S4VdlDYrlQ8vD+0gxAugKAahBJlK0CtbD/IgOi+gwivF
cBZmvtL/FDhRN7jFWEzpdce2W8BDfNSYpzpmtMNQlSZovIMDJ8dPqDStfBGS
+Ja+Byu5L0IUckfIIyEEYpmwxVZsOp+MAMPbN1UZ6XjJ57ACCTwwir8kevWf
fSJL56ElMWQyjhp3iWRCSO6zUjkeiaVXZwqSus0AElaKNSqayvJ0Nz3xuJKq
4prXZXOeMecBoGnwGTHXgdctSzDVO+ZssfuYZsewgKGXMv9OSan+57pqDAW/
cV7ugohWuTKkWtPGh83Jo8YDIC8KQOKpp/cBG9ZT2RnJkngTgTl+VqWSR+OA
XspZZ/faAX5TpOahPxAvsxWBQ/3c8lkw62npunpUUVflR+tp6Tr3iuzUtJdx
b1JaSOX4rbq/EvewoTjdV0kyuI1o6hSR5i2GQ7SJC1VASB60LMyWY3eNb9Aw
hCQUsRNRVg105DhEPFUNgvFX54aAFrx5MOUy9N7412164gzh0Q3YA+svjJGH
H+srC5U1KyB+eggMP93YxXGxwIs3rsCrAM1M6wPNuCIXrWwWIIRHhcdAGiZf
IwLJqJ3U0pkOFod5fcOyblJBV0QDBBKUQ4rv5hTOVatuM9U4jaeuDkJcoAz7
vp7qOQiBxG310tzxY5YDJQFAFvh3yxgdvQ6jiYGmz1Y98+w4TQ9//k6Z3uDu
aDlM4bHU4mD4H2bRnPz97XyVTO1rvZkdGY2GkZd80EQV61hw2ZC4qyKBuDgh
V7RWmRQ91cFqzGL1JF+tZDNFZBiW9bTCrHtUlmoVrIbTQpQEx++FkYyJYQ1b
ZgPGn376vxulF+MR+2Otj+1prP9srdjwINog0Ss7et3U8fum2h/v7zwCAkwy
d945AkIQudTTW1TZkNsh+OHPgwc+XLJMXg5jDgSwxA9KCISHQcpslZAZ5Ekr
clYIhDRsMSBxKEJPYqPDMrcMe+GcxrFQhVwLnvwrAyG6iOeBMsd3B4KfJS5b
r/IoscSWzYBSSI8F9FiPaBVCHRYVCuXw3LXCv4km+UzBteKZnss4Khu6noqf
SBz+SgiygDcUVrDwytyYRF8ZQ1CojoOJx2JazmPxwnjXAaeO6DFz67ZmuoVV
pRo5M4T+s9KGNCT/bumXBnUyCb5lcAjQQhlSGaWXubJprTvh1psL8lsycpoT
lNR8GWtj/MUqUcFfOrAjCAn+Eza7PHJPkmk+tFfMZO4RIMFLE4Y8zTEF5ta2
K5w3/NMgCKjIl8KPV/TU+E1IY5y9eTIy5/VTG1gN+MF+LIEQ4o8oa9jM5OMG
2tnMXjLbaedX0oowV4ISuyRPRVWtb094ORvUKuaWxuP1kkI1FlCtzAa0+bVR
o5SkwmIZs451tp/D8VuFQIw3PjwkZQ9PGDkd6nXuBnv4KazGjXM2VhZ5LOcX
FxtunKl8VA/asxKhClym8i7PaCpDIe/YQXjitOn6WSaihAXHoNtMOUUgcWhj
YbzNnSGSDZGvI+8PmVwYGkmLcsZF7hqYtlphvPdATBTxujMWo2nkGOnqOPrF
F5+DQ7DUIBw6TLf/8ijMHwPHNeuEmSs4cisuDb4xUW1S4z72iuS/3anK7WYK
LBWz8HoxgTA/Pl4ezh+KId2379EYq/OvDmjso19/Y6jQjfXEavPAxOcSVzAO
cLBNJihgnpClsbyaOn1zVSXp7cQ/TLrNw0yHOTVbYi7lJAG60NtMqosn4WbS
WOTHMLQQQAhwznvOMeXRVWjDIjKVyVTi46L8NmKcenpvepYt7RHnpjLUrAd4
OC1EYz452gsIcTN9sXNvc/jREITMt9473n0gXvPFp5tXUmcIIES70J8/Xngj
D1RAJn/+fFMvcJZtZD7f5Ahcy58++4Srxkxwl1Nnwri4yg4/Ytqbhs6Lmunb
xdmBucIhmgIxdLXztytWiSAgEFkfXm5iSwqH2HGuBj8y2RP2vh3u7Wt7lfPG
UETalbznpXQhz4PXjPNDCSpIgVxG37JCBtqVI4NxMfWtlUXTmfzsk1oorLyU
K2rvqR+CYZI/VXUYRx2yqrLmHhgyAepQGdCzXWShOGl8seqVHfn8BcCVAwC6
LbkwbYlRdhyC2c3gkOTF+8kHHF+cBKOIhKTmjPmTq0e5tA2b+0AE5ERdoDOq
hCLbivF1wgln5GeyGp4oeUJEZXHd+DjA5Gk4QiZcteglfkYHIYCcmBCyeeqO
OAcnTqY2Sd6z4wYVRnrFH6Yp6qGuuii9htTgx58+9feeCmFLeczfhPzrwyiy
DcMYE6djLJFZI8TiI2muxSDrwWPM78u3V3WYK2n4TFIhHppxEDJtpRv7+QRj
+GRTyTLgkPxbPcYhTjWRxwbIIdcHRlzpbLopvMpM8jQUocsAmCZNsc6MG6QJ
fuDgjjpESXVniPjtzeHHdPi1ht/d7NrqMoOGqbVAUi6W5CBkddM8IVj2vNAo
K90ZwoPhMZfg7tiSVAWTjNhLb8LTdZW60qxdLIydfjUToJFjZO7EPSa1Gkmc
DRStDrgV0g1KuV+XD6RhaV3P0uWlfWbhLfESd7oKL6GbByGrl+YSksz22X3K
nNHvpdI30CJXw2qq9BhXYInxzE4gpHL8FhoPKnNnT2Va314+VVMAfl96DzBt
jy+h4aUBJ6Q9jh1kzDnyUCidoKzDDCDRZrzo7LUfXiaZWEyMQzLJLyyEqFZR
w6ifoeOfK14adSUBNtHRLkaHvRhzTvzgLoUaAMyKAmFupziy2BT8WNgmRiBL
R6+70LuPlkcgCtDw6Q34R9N62vpsq0AIP0POAq4AcnhbL9y/0X0HaMSHDrug
T4EWuq31dqWff7o80y0zIZFJdVhRGKXlqpShovAp1cEyUgEq8mabwmqYQykQ
8+bgGS9O5wiknmoC6Ahx7mqGkqoXtXIr9A6X5IWC+x7w0o2zKmPpfcQ66PlR
dMOPL0e68E8sMuY64cyk3AFyJYQqOGPsDVBz7qW0ynUQXYg05DWjF9XBnSFG
Zlgp6kJCDdDW8lRSgJV9nSPqzRTqQuk6OaPUbU2KY2BwVRyiJFbVFpFYhCfS
SpBWZ7kSkV7yIET3QhdOn2V/5QzxBKW8ITYzV2y19N7BoyLTmubJcEu+Gl0c
x1FJYgWelBqs3F6jcw8erY08t1X8aPBeqaKJGJxBm5nqMFo2ADw/K9F1lUUW
GnFYwqckcHlC8iAkAzDiq1Y35HGK3SABS5h7xPFbfTsNW9E3qa/r4KtRfRls
K50pnOwMmlp9crMsVaZ1HBaMbDZblpgtmKFYafCOPVt/25NQ2EWyJMIYodxA
UtjF6Z38ThVYibNvMgAgDo74gnJ8fKXqvDQHLRs5Ju1WmkzuvFvoJYgkq8Rw
5s+KgKel8ZS84zquIJCemRWPyOTN+vxIEi6sTvzGNVRr1enTqViBEEhDz/+l
9UplrYGLIG7gjZnWB2LaqjtGyr95KlE5u1jo6jjKYwMOAeosVse/FjdIJhDj
TbiLsXKZiHzbqSjtlu8iZTUAQvIuEacAjZYHFCAwodShwbw7wkFIw3AMj6jV
ye05wmR8utT4LmQcIzb/zdFC8q1/KCkbp6Qet++XN2vGwzTxQN6u43rdeVUX
/dHbJlEYRwjKjRWcME2zJaO2WsDI5pvdjAZ3nMExtkxwrcQww5FM5iwZ94vY
FA1BCP03ZY/Olv6TXdjruO4wiGK8+4C8YbPtjwhyCH64YmEcjpenenK0dyjS
8gJhBvZdFxfCZ093W2/bKzQNnbFruo7TVJXGYludRy4P3/uHyUfVtAxoea/c
lnryX4pZH3HSX3hLj6s0TFyfjlYctpk7fbMqXZVJzvLqqd9yvbXSW5oOTxcO
aybu6MIA51CCLkTMwyayzOtFquOxU12v6Pwc07jWUgNLc5r0Z6VhQtl6FmLF
LWNnhHCMUzFniwWZueXp7vTNv+IV2fLBII4gToXVUp+fpf8ZkU+JnAuEyBmi
FkDICa+dx2XqiqSIm7FNk5VR+Un46z/ZKZiXMWHuD5FZb4hDFA25ktYzcmCf
qJEEgU0GRCcCOHAXFGnl8k0cI9yXxPbVqk6SMdAyb1xrmVo3vopQsAv3UbyR
8f5jwyfftEhKZfJcqUe9kl6rsn7i1BtlDGVRSuo8sQSZoYPvjz4uEFI5uQ/c
qGuJaTl5l5ocBfKACX96tZfY/HnjK57wTDjmjZbDpuwRNZ6TGAlLpU2hGQ04
I6ZYnkcD4zvoeHs9LQTDiIlu/YePL9O35CwfvK+j0SsJqyYMFiBEEv5LfpLK
8G3SxqMyfE4LWZwb4k1bLbbptz8+cFhfhRllWa8dd0rkSaHxSnooVqpTUneK
xeRdKw1vRH4zOqy5qk86wGmi3+hh7mk7MtZ1MANu9YBZjsbMipwheQSiYI07
Q8QIjb0fPN6ORhq2ht6GfDO998LBC8dvzqAR/mXl2OlXR6Y7RU/987//e29X
i1mlv5iMKtGz1CHw9nvLxdXK2HsL79j1hh9XceS1jN/Dl2MaZ3MQUlktumtC
TMvYGaIaprJZWF6+bXhY1tdDtdx9+x6lKSnGXBzBRGLRACG8oMQ+bd6Ub8IA
Zhpfxf+uXprT7ygUZ1lxJ4Y+ZfrrITEEAyeTKko/aCofiHF/Rd5DQmcYgTAL
3qI6MBR6r3Kl8dFiL0cTnOMgR4m3NMZK4RgHIRMDJ2xNddrIrlNlz82fan+8
87crLpqK4RZolJn2qMdmNO+g84yA7uOfbOZ1mf7LhMU0Uc3NY96p17+br5XB
YC4YIgl3Pi/07vMXfrnvlQz8iLtRT5NQRBqRn8TGs9+0B7lYxbYYVRaShNx3
jox2vGT5O8M9QhfymGlailGIM1+axO6vpNQ+tjc/RqGHYyp4pCQI1viryWfo
0jGbmUzoqR5CEqgIotZj4k/Sz/pcAeuZybd1ee3KubMZAqQky2TUPAojiyMf
yEK9VJitlpfPKjqD8TUxjZFeATBxP+iept4KbPlxLK5Uq3IhiviIqRh7Qjw+
YmVoMjhk8IxVABlNSvRyXRIMEXY1wK+84MA6UKawoIUINu5r0vVmborCpqIB
Kxyji5J1i6X1LbclzVCO8ZJwCLBEJJPqTGF+uIWrYJpDT4RMEp+JtxiTRPZl
qXxsqfRWLK3GWS5MdCqgY3ksqctLj5yTkZIwWQisZGyfV0YGe+zf/8T+fY8e
bvml1OfyjSFVkbj4qdBTqgfJT5SyRrf5Z/w3Jbs/croPBKLyMcK3/N5FXg2U
2uXLmyuZKIYb6FBcr3xmcbxY6den3uoyjnzmvRkGP4YOaJpw4dSzpfFW31Li
ab5w1YgMOCp5PtMr4jncZRxnI9BU6lHWjDvuYreJyvL608hDKCeSuXGCQ8kq
Vy5ZHHy1Oil/CA+GfDvlrp9tBppKhgqSaTOpqPXiVLecIQrEgENOp9XkdwIh
O9noM9XG4ASwgRXIkFeVSjPT+gAHBIfw1A0U2/5ymTJFZBx7eNuqpRupvHrF
WOWSXBVWKSy1ujbDxkpR2ZGeGiA9hkPcVEuQ2QHSZBovRowmc3YQCFYmvguZ
cMxmmh3jFXg9+aKhRKe0ZWTRrPrGdkXTWMg0DrVwvTxylpYbAQYHLbZBJABi
1X6DlrgIhEFHfeuwGPEvPv8Ua86YNPR1NHez6NsPL856LV19JdTHesU4rEZM
ySCWKa+mbpA3B8+cGJnyHX0wY9KFLzPmcjW4O4vjm8j22fEMVNDGip5ovu+j
XauXxclZL9zvIARAwr+JCmJwei/ODjR0g/iCojM8FTqLMZxDLTYJg3Cl/pZ4
L9Rs5cLTl/M27nEykVmxKrcOHuTx0Mxa7BHlYoiQabPyYMEV8tMFCicYmAn5
sxZTSMUx9KeJbW+X1bHVXNiQSddxju+2A0Pmep5M2GVDzR0d3nJ5DqFnhva1
vSpUJvwA6tjcNOnO1U0jdrJc2ygrB6Q81at4hNJbaqF+meenLNS2BQjkNZIn
R9FhlZDT9dbTui2+kMch3f29idEPDVufDHhgXTIgGm0RelljFfTCaORToaW/
KmTC2GriCa4TLsr4izKOCFFl8nipEpJ3NGj1ILYPSNPt1g2thbpCyfahziAw
ozp0cOX0j/l0EKIAohKOMpNfcI4AaiJgG3J5xIN1GOCoIA7ieJ/Dq2OrBHND
EOJQxGPHgsoaNHd9bM3ut/OdMm4BuUS4FwCPufMXOLVyeAEnUhP12nYRqkn2
BYFY1km9nMihr8+ImDq3NM6/vN4zdn9xbkhktmqx7Xz5FD8B4RYP3wiECB15
nKWhN6MeyZXoK8BAE0JIQ3/I+vbsXYEQvXlslhGyF32Ek2oOlWkQiPlOT/f5
O8Qe7Pr5lMx8eDHA0Y3wbhTJM2+g3dXANkllmdQZImEQuZtmZybicExGQmR5
rXGmTLFW2AmHlJa3GCP5MM1G151/fO/t3i5Tw+Y18pcgkEvrlRh7ePMymth3
F9ZQEqtTF5q7QUo5rkXl/Qn7DF4Rt2u6s8ydleYwFPB5HoRw3owXRc0s1PFb
2ItPZ4M0xCHrm9WGYGOnJpDAO5AHoxb0CjhapqTLF9sVP/LYIE7LFRRRSilm
WrP1IFaTVXHXgjS3lZObD7LsFHzJrPGKMCELLCkW41RMvXJ537IlL0YhkIud
ewEhPd1tntsbow698XwN/ZcDRB5aVR6cHO3NQ4XMTRf60jRwqZbEoWjADAch
9ESEUvWWe50/bNwrZUYIfmjmazY0XEWwBa+PdrzEdSl92+bg84UrKelXM3F6
wrVoDi4bobiJ1FClhSWkgZmzsjJzY5lohcyWEIj7tF1uy1wcI72ZJBp5XRS7
4UQq0eLTfPPldh5xAqRpUPe9Ip9b7ARwIiIWylXlJcOVqEQum/YFl/BGy2Ea
02c1AAbgRFQQBllIyQMiihQwIIoR8N/rrx2Ub4SuAuD9LKLoyHRmBmR1Zdp1
0TnL+OQIOCQJyryTFI8TJYZboMm7AIlOuiXrEel7KPwkgg33wl0BsRkVg2Kn
UMh6EB/LBCBif4jCNL6BHD4xSHCREGX1emoMC6wBe3AFc+VwTwezacKW1T7W
FjNgnQebqMAF3dcMD9b7rOGSDA7P4ejUgD2QtUmj96RJuErkUeq3J8UoEakJ
YomJKw2ZEphXjgzYUNKuKgHFjyImPh+tkIdkI81pdYV2MIkq0cRhFNWeS4Dc
3JDmTaXxVrlNAC1sk46DHVzE753ghFNYvc0vLl4VhDRsGRwCughOyCTYajHQ
2bKVbQohXYn0xsxetuSJHes5kmS9nTrkR27iAwGEZHN1+R3NDMgZIg9z7BJp
LCHSNFPmqm10rrv8m6fyqTTLR7+Z8FeNAjr7FUHI8nRDECLJiMp2rapSVN9t
NyDEmxS/aW9MVAvnSypjupnCy6CAbfgZMClkCLLKHMFzRixiEmGMpaPXAZNm
2x/hN9ucDcJd+FIgxKbnQXtT1hzLxb3m55wnl+4+OMJB5PSQOCrv8B1QhOXL
YNzFM5G0aT6yE58r5ri646VmruBDCqkw5toAsy5PeFJjPdxizugEVBZeG66N
pjllPAkxeBD415risLHa9ArCfNuMvrOlIWcjCwiju59ETKKGWeHIFyePKkQy
MXCCBZqRS8UuDi1MIWcVIaKV54dcqUxCIlypdpcwCINwYmQqIaMGAMYtviLl
t0BTUThG2VVbSTfLaUpI0BDL2Ky8glk9TcKN17vWtzvApaXp2u8yr7K5Hqzh
W2O4hQRVrKFquZaHzIGDrfE3m/IrRVuVQprnZZgmSbBEirZvbp4DQvzwhw+Y
Gz9tivgofZXZvWIxeqNK7B37LrKKvB/srronplYR6aGJUbnFJUgL/qpt5cu8
c6Ra7ilOlguj43r85G9nqquYC5fAt+krPUkXkiicdEedcqn5ZsYPkMlX8vJ8
sR33JlePMpXkyTEy8+BWKWG6qmi+5a4GwBxnVZuhDA8SaCEGIbTqrD3G+mkM
n3zTnuqBdlO5B+zNFMSD1W8wJgbkm36kUmLRA2C53rODIBNBLOu2CQ4U4jZR
sTYy3Z0Kn245Uvw5bIJDorjMNqKFL5hDL5S+1Y2Q9+Py5goLmZIxvlcMQmKl
L5WhOVt/23eZm2zzEjDTnU9ukWE6n0xswWpRwMOFShQObpg5Kz92ZuVXAyHr
qXKsN8645a5cqhhonxxSXgzntdDV5kqYSH4q8bfpEHhdrU6Wu5JIt0vKN0Eg
8b+YZsexgBDNZGPDx0rV6Mx4Qi6tV3ZJC2newBugjp0YI8VawWvN7L5dvlRr
CEIWp7qF1lRHNePf8LjM7jsvvRFpitJPOTS4rZhal0zU8y+ck9kdG8r2H16c
jT0hViQoyFPw2VC5ZdtdWKt8WRBiNImAOhwbhF99uQnMiB0geTkyveU4jjtb
8jtuOTFKQwpwKL7Q/IyMz/JMt3nUU+kwE5oLCERlULSZ+S5CPggr14JdqwQJ
EXqy1v69hBDS8xITVb0HPAKSicVIMxzzDUz602efyGCZylYjukhDZ4hH0xIG
Qpheid+rmjhWZa9gwh2ic6gp2uItrTw7LDqNfo/Bf96vkruKwsgf0tPddnLu
gqggJq0WCW6YFyJo4HtkJ2mR2Vqqzykk4UoR5qJPq8b7ljL37uG3ukjLBZVo
iQkJMgSWddv2qoCcgAc2hV8BbzOLyKQCIMymbc3JTi4E+yUqhdJLRzpeEt9S
F6JCdW6pJb7h0IhLeOWXL4MiZpfGVjfn1zeq+lQsYLTPtEFULfdKGieS5pVi
Tyw4CFGww8vRMhNnG3oofMIa44LWJicroxz/8obpFZsOSbnHKs4MmQTHQKex
I5anu/nk1Gadyz2m+fnBps3u52d5+GVklT4szxIHUdaM+3/Eh4kJFZm7o4BO
Q0+I3yN5D3TJqjhstj5omulEjKcIxiItSyHfBU+4IsbQEYjJpYa7cCWVzRfg
satI6aYJ2yRo/VmWTeGIkMZOaETQSPVxxCWQcNl4/zGegYmxw2fm36LFUGRw
vEeyZrH3Jp+Y0wSN1HLq5e4QEFlO8mXYVm1svIhIiyNu0l7wf+XNiJtgydzw
MZfO4PcbiKnJwZlpyhYIsSjvZpuLZrsku7bJRGr0u24CQvKgq4kzRJEplbCU
iprpykbIhPcYAyVCdXwQl1F1Z8hV4Yc3Z0rMlCzc3NDv4aGZS8vbvgWK6HP1
0mxtrQwsoeU1Oq7aitW+YsdPV9puyUARaYxMLgx9KShi6cnb2SBqtbnC2b7k
J3Zm4a1MHwRCdu8J8ZbhaYgS6fdLd3a+Vs4jnNVLc6AIQEi8u4Vgun/Gw0m7
ihtkOydkNwhE7nGvzOLwQO4vp4js5APJU0n5wSpMIEdHQxDyRcomFWBQuiXm
GCuTJtGsfJJLhwF+NCwfGbz3hxSISXwjjHBICQGicAkCIexrb+9U9wO7/2ag
DuqrPLWGSxB01I1T+qRiH+vbK1XlMQkvH913IBYHGSp0KxyjQ6n+HXf5jxfe
UHaM5xfr0zkheTyzmZbU1GM5NnTYAzGgF670NatlN5VokhcOD4XClLoQ6dhv
5YFGIMRNVeISqU0qhcEd13HoQVYsRhpzJptQEJkwXi8jxVtLEQ3/w0hxEEcO
nvNCJ4uTZWMVhnK0Lrql5FC5dKxQ3UC79hJRJGjLtLkzhyMLhIANMNDK8AUh
TI70Pv7Yww899CCNb493/Obzzz557tmf8C+/AkAFe7FMVwVCfvrMfm25f/8T
4j22vnlMa2hPPb2PUeLgLx94gcMCQjgCy2xw7v1y+69fZJsf/ctjfALAgB/a
kU8Oy4Ior2I7rKXvBIlmiHqniIBXozNK5IqVBYzRIG1meZjBF4UjLhGYuaEx
3cIxjLE4govDk5KEyq5s/+NbVfSTxqmldKlqzKl/UlRLt0AgREDO1VTih4En
RL0V28SK4xSOxIK0Uthzx4gjH5oIJwrlpEJYtlex/4CQych0Nw1AQhNbKUNA
jSkoO8ZotltkLwPn8MNBYAaExJ4QxwPgDYEQd4no0yu+mRjIqUP6OV849awO
frF0zOmsG1HK7XqUhBvjEOXw1hsJeiwtVZhnfQVPSGmkzxhQv6vXUvEQMbhO
B+kGwRKf1wBLrLrT2fH8ocBafjdVUyaOvMTxl3yTipdSigJBq7Hhk8B7c3X3
beDEEjFmVcx3V7DkYqG3q+XzTzffG/pJ7BhhWY4R0MhidTyuPtMk2NTQExJz
UzMJMqU0LrN77KEiIxk6B/e0t7MlnQNe7u446g8zOAQTGQuPWLrK9nFbnBsz
N0ihG+vJHLbJCK+nWTluIneDQ+S1yJecU50Xnj2O2ZCVkY/IsIFcKHqLpsTU
i5IXywR0WPaBwkTqqcZkr69sS9H1xmYeP9VTrYbJZj34xPNxVEDHXAHvMPM6
zHrP3uX4LkFm2SKdiTvaknbXZlx0dDPovLkmp4romcVMC7UozJSJwniJGfbl
jve2vRKEJiqCMbxdxcoApIniZZm50k09db8uyvJ0Anhw3de8c0Y3V/FlYLNQ
mQIxHKGt7xT2nVPIESQQIpeOEYrSqC6zb8bcS8/EGEPBBQmoNozOSC4j4xhh
Po6JSYtWpN6PkPaSkaxkpU+glNNhweWUOsJjIHeKVJuSpJKhV6U6rn+ZESvj
Msw6x/xQ3h8HId7ABladZKCdhXOlHnYEDFh5tVr1pRefZVmlRhyE9J/sZK/D
Lb+kP1pmHLiPfAtokSIryy8ceBYQwicgZHVzHuzBMutZ2d7Xwl4cXN4DEAvb
8B6+MNG5f9+jfCVvklOXYxsnN4XgH8OoBF6lL8l95INv3puQeuy3xskhMeSo
RVIwnq0MGIjJHgI8DJ2o15aVkwrLyyXF+OgefVovbJSep33xyQciMPvNjdmM
Qr8KsUk9XtlJUoZvGDrBkPEYjw+aP4RPAAY9FINIeMl/9ZlQDgCGjWMPiSI1
4pAkKo5RVHE37hHzfgQZlgxXM+/uiJtcZw5CMm0j0jYHh6jGRLJj+yM6viXC
jLeerb+tcAxtJ9fHesh3aKgioia5VOmP7R6BCGZ48EW94vHABintRbebg4sx
rsgdOK3hAeUMUWOe+KUSXcd7X0tAyNmxOF1XIZiohp2pqnJHNrfXtlOjnwkC
2e4tCb6CBQcn3pYvZYmarl0GWlg6+q2GGiO08cLBpd/NfQViKm2m9QGLip4+
WOx47st6PDLNIYSb1/Ug6iIpsCtBGlpxfH+kGSIMtDtbePAyGMZ0ybp/xmfl
+C27dIP4ZHk95Ok0hyJyd8iHEDs0YooIR7tqaIZd5OzlaH7MOFfXDyviqHw1
6rPICZqkS+Ujj3OAGU7tML5HaPX5gvJq+eTnjalSDTuJVEt1kLN4vQx+BQIh
a+3fs5K4ITlXxhr4wV0AFjoN1T1XbKmk/vU0CVcVNjejWEzC+uhvV6XdP6Uv
8CuJWIENoyTgQJIck567W1tAwoRKgp58MvEPL6idoIg9LbXepP+JupQptB8r
1f1VxrUre8VfpJbdU+i2xGrLHbgsV0/sx449G5pfK8DhxU3koG6opiXQYtqS
23GFUBxWm5VS2/bwkIt0+axKFocB9Oq62BcGkAcV+OGOETEHaoGTr30l16lu
rK2YRwJDb1kngW3L7Nh4j3OFgc4jfLV//xN8axXW5mcdhMSeEAEPeXs4mjZm
HAyNBErtQr0E3uDf2kZZIOSCFXRIQAgrBUJG+4wEwnlZfvrFA4wMy+qbzLQY
GvIbZHCIghpaUME+J7KKExiDQDesAkgShctY+ThAps9YjN3voIVjUlU0TIxT
9xlASz/5eFniNlxLJoUn5Q9MjUx3CwZwgUIgAiE6b1ygMNMrTj0+OTK7NCbH
Gp8sK2Y0X+owkfnhFomnyQ2SKW3PSk6a4Y04JqFXYBLVuXAuq6foZhCIic8E
nqdQhzZwJCD5jp2MuJwneRDC7vTZEcjc8LF4ImMFHH1yGpwGjk+CPmH2dC5L
ki9tE7fjpRUvnrubxn33qYoQby3JPFrWEygkzKumNNK3Wp30tx/Pw0Yax8kc
k8vRnaJ9KRLF8vkzI6eNaS9myE7OEGEPhWwyCGT3Ld5RcZwtP8nFAu9JVZPp
6/rV3Il7MiAkRiPAiZnC4cXqeF4PltYwHEPjmAmRu/Xe4mIDJfkvEYXZrOYT
W7xkDC83rsXX+yOHlcxEfFz0zCK5qRuE2e6uPE7pjt6as0RMKCzno4hVPsAM
IgDkialxoTquQmV8BUK4hLjo7RcpxTSWXveBUu2nK4E8uTg3FsdreMKlduIl
6kzzc75QK73FwnT/yxjiUJvgUD7KbPGX+QL94VORjqVT9zsr9c3BM04I8dq7
Cp3zExOKADxwy2KSqrZxWojIHqaVYUHSqZg8/6dQa17FdzQrFFDR7dhI5Z48
FiPBecdFQlCCWHnWaz1UqYsDMePdB14brkl60RRpgmevnqqrbSGoMNmsBY0X
PZPSBItd97HN0sVK4HQs1VnKuNn1MldyLjY6xhUMiBy52ktRg762VzP2ay3M
qpQM6+eVyxojvoVS6udihQqb/3b8VF9JZ8/9A/KE1ILGmvkTlocvTHSKrfpG
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
gkY7jRGKQ/pb3thqns+VjcQEk2nVyPjg+NxQHIqSlHogxCV4NbCw6lWV14c6
QVK71itVnenAoxqxhcTaiUQZwsSYOt8yzIRAzK63saUSMRySphxSVwBur2mU
yehJ4ugYJUH26GNNICLJcStSNYSB54ZGlAl3JznryhAzE7AMHDAQQrONhjHY
y6hZzkV0kYOTTLHQ3bEhpYErLeyYV6VuUbqW+j+l823GV1aturixPNjfCdKQ
2kQKEwXj6Ks2pMEAh8yX+nSD7q0qB5hMbI6rgNyF1Za0F1jSluPkuXEjlZ1H
OO1Pn/0Z0Q8AYGIHilgqmcpkrNlwevaRjoO8fTLNGOPl0o587150jLmplDuV
n8XUF8FbVW4homfnU1yp62tVdwjZCwgRP8l1aUIyLqnuMQIUkWJk9t3x2267
9eZbbhbXFp8PPnQ/CEHhqEqpJjQiM4EsBdqZO5fvmDh/ZnjM/CrbG/QGBbZq
0xUgRhUFw+uprKDKGq+YOy7x3HOJz5vSnnKkcs2LoNs3KBJwFKZc4RCPqZGe
RJ+sxNkvG5BrQlTGxo4LhLBGAGsJhMSIJVNi5SFl7t0xZHF8pHwJas/yWa4W
hMRRYBSQjOc92ekvk5ftaiCDBbHEbXt75o3YCpMPaVky8lTFVSK7a3tO/9vy
2DyId06HmXNIuqIRaYManwEh8ih2KBJ3Cw8lxgYZPBADhpXVKdOEhCjdWgcS
N8S4dcYiU2Ymwp5FKc3i6Jta3JIWu6472QL5Ok43cr8IiLX1cgaHSNIJeFhm
jcCMGkfImqXgdJM4UeuCEA7YxR6RKVzFGEhC0UpWhBiKBRZQUcpaZ26XWEmy
4wXjBV9F8eptcG9MUIcp/MNiGYRAm82ZZHk+OO8lQi2OiFmabFMWYOkcYkOA
WcAHOzxRQpIM/VTj8cYjrtzghY0lJqCF4VSbps37kymXGjyk15z0Ai+HCFSL
C8PKR79QLekBmcdLZTyW/q4M4Ripa8RZagEvOyhDdF+u91AQrofMAAiVVUcR
YbGiw/2I1paybiHbcEhp2AlkBD/4VCfIxsenzgJ4uIuIWO9iu9JONhovcbJC
Y2WJDH/CcjwvjwH3SuSlLNeL3bUNvOyJJ+fAkfDiGCGqVveIVwQ6Ith8IbYb
L2KfiuC9Y/pScMjelSF1vTKk+FKEV+D1KrqThhxC1KpahxBFB8twI62ItEBy
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
7evn1Z8r68sJR8WLmzUukDRd3A95c4wjh53e+SSqhVcQlMUu3D1Y0cF04lzq
xpfgIzQvCFGV4eW0XqEyqrGCuyVPjZ2U2kQgsefZLZbOPXJB8Ujhzd+48+Hv
PcSVgi5uu82yyH7n3m9tuuOrS2OvsZWtcOcd5qNbHGMGIGErflUWFEUb8ZGe
hxCm7qfKjEt2hKkynJ+/MA2HqK6uqrps0G2j4Qopns3lzTEbtK008wZpuDmD
f3uk0tF2WBlCuGfciKOgmJHgEJLZXMG5GeJyRRA9yD4V5zABcob6OhQUIwip
Vsy+PDTY19HexlSakOshS8nBt/fBG/TDaoIQWILHXHYQIGRxYZZtx0+9ebH/
KdonpZ2Xz/1eQTQOIR4Py5osVD+vvGIGPn6Vq4bKkfece2f3vlf7S20OIXs7
Tm4EQhjegw/cb+t0mMmGkdMP69MPM+yLDUfLvU8/ZY6ysBDD07PT/87LpgPp
281U6euTBCOpFI5jKyTd8hCiSMnYL5T51sp5RB7CS99Np8aP3YTMrbWXxvdc
7LckJH9575+dPWju5jpbePbdvc939e432DjyOAQy+84DLOkvtp0P0UNtPQd/
c+A1kcDUlSH+pXGKWKG3u83zvccMxr+iDscPRxE2sfyTg/0IL+GHbFUs15e7
ZsLL/3h1ySoIHzqxd6hcaHGKChfObNymIzXI8FifuXwsldlLKNRejnU1SFiW
J/480yUZj3TSVku/4FXJOG3zmaFPzHlyWhBi6c0X5hTpLOoQmfirnk1ct98w
jSpnWN/sPGPuUBoLGqlBFG2dqUBH59xabBXyrfe3yKcam1fyuo686iOTCp7n
SJVxJEw5FQhZy8e+uozU4OTIgqBE7nHcrhtoXLaKE+Rc2p1mWfQgmtgik/l4
V1CMmy1UHtfVIEpXpSQkMq/IwhLXXV0ND6miUcrlcUZl1euURjWEQngcLl/l
kqqJE9H44GitgIAGq4QuyNAYQqQMQciGHPXrzh6sL38J2RfWopLBa2kOtyYQ
csn8LfuSeB+tr5zkfiY9irkh0uT9imEJmYqUxiS5HNUiHKLYlj/u/pXzjHcu
60ysZol3Z+qU1Qm5xEiD1wxCViPnEEGIhSkNJFYqLsred9oUV8UJDN6VBiEC
DxHIuk0kghAuFqfFVYVmj6uZHUcQ8tYLm8ES4FMwIxQRQkCKUnaZVn/H9yvl
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
ekN/Gy5ox9kavXFBJbPgGRgGFLlaGzz09t5/e+lFnpoD+/aAHzS4jnmZ5Bgn
HJXIymv2yL/44vMraf0dAcmZmcEW1Cd7jYiONQsXzkhDJSmmpKDXQwZ4nUOp
R9R5qTjKsdv8teU3X3+ZxmgFIaXi2Iu7dv785Z0D5fZ8tAWYMVgs8Cuggszi
Dc93ZQwhLLdfy73KFqJbCJHh/hsOITR3CPlwaVyfSA0/qC32KiCNgmIyvTVk
j5hAVoO5RELfY3YUjgQtSD0ie826i+bhu66nudQ4BMvEONSzlqR2MU+PsYle
NtR48hlL6E1hO6pf75AAFeirFrELUWTwI1aMaMo6E7XBWOdT77m6bv356IMF
+5yfKFi2jRx1ZEJrT3UfLx3ZPl8tekE9eeEq/ctoKFsjjEfKG1CFA+T2cAhR
Bg8W6olzT7xMfNP61VwcjxVoMMxwqSRbT4wf3AkMyZKP1QoxfqitTiTmEvmf
JHgTOKTOs7TwYHXevnQUP84tKhcUkY9QBA6hk6lK2cdJh1bf7dS3PXFZs4p1
LcSrfnVrRWzTgUPcKANIOITwE+QgPmHKtlfrg3NttVpJbXayD4BhOjNZoDGT
SWvGr3GRO7hCITnch3ARLxkecyUlGwlJ16XwsTEEwNi+va7K0o4d21nOhkIU
+dO21v/cEEVYDqXzZrZItzR9h0th01h2HQ71WFeu5/6G+jrsmUrhQSlVlf1D
LnyTiyPIcdXF0zqeHkT3p3aqFmdFW04L0pl9fLBPsQl6S9Ct/KsVBXOzLZMB
nifr4pXTnhstzhCbTIOcslz0ATNkbWcKivCeF5nIkcO/o2UaUGhMxjkkNusg
zqQG4bVm0rxlZK5xSG/PQDHrIoJUBQfo4QuoQfIQ4toP/StH0wxrIfHZqWTZ
F8Ce/mIb6KVoEWQ6/Zhk57upvtywN04sr/r2tkNjkz2u97Bba6IoD5BmChBl
PpdU1TzHYmblkEJkdLRTQEU/cfVe0wZMl5wq+Ur1AruVU6/CEnBUC78Ubobh
C9OTlYmYE4CZT8aevNi57a47b5fq7x9vuzWEsP189mzb4f/5/8gz/HoIZP4k
9VfkzXDvd7Y+8+zT27Y9uZamEHno4ft/c+C1FhCij3HT0i8OQCAjwRuE6SeW
56oc5wZZS6M8pA+hMYbEJ+TasgzHDFUX+tWXf64lhzrelAlG6bxcxbH/+Bv8
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
hYoP0odxEhAnMi7uZnOz8iuNG1hhbe/qLsroUZNvhJbVfFlecATFlXMotlHp
Ey64le/Ce8ZvIYME0yOqjuoNw/fKgb3JyjaNjTHir79wzytPfa20jT37RRCI
E0i4QatOm/P0ls50XclFYFoBj1I3SClWcUEYSekaTyZwQv6fH9x7+NSk2vHx
U4tr1a/f8bXbb//q5OyJyvLQ9773XUz/dH2kFIQosAIqGD81pCgJqIOeB4F8
846vg0zkKqHfeEuVcK3af1rJ2ysQwkqwB5ADECJR3Ftu+3sZaM7FNvQGm+19
/I73++/mM7D3bZov2MMuJ/s6BUI4jrJ0E8iRTH7FR3WZdNVS4XcnjVC9QizI
AeI1cYpuEFeVlyFeD5k7GQQNcqbxyy8bV5zXs16Fg0s9J1YX5sg+iZWJEjzQ
d3hu8jgX0NicyXwvSzOciwugmUTquW0Gsr/PberTCWWNDHXLzcITpM+lj1qa
EVMKQvh0n0mjNhJ/xT1y5So5Zy/23JAHsByKlGKD4soiDokfa6nj6y8n7/RC
uq3Qi0DI6oa9Nsyjk1xObWkDQsdeRWEkU1ZaatZUs0b79QqtNZY+E1XVmztP
WimLysq770UxoOOnOirLw0WL/9hjjya1bxhFObIOLmZpsovCMWrNUCmGS+p6
8yVuB+SjOlksMMop1aV9enLxkhy8cZvuA4kPYsV8bxQJZCBkdafjK8ch1fpC
99RCfy4uxMJYXvvvb9KUZigQos8Tb//Zv40jNR5eSZoYqrJrZqlDLMZ4pIHp
FyJo8z5KYOulnc63ki0V948JqYrLsEbui+yzr2sk5EnF3gYFC0J6zjTWlmU9
4ngbxRS0hgVtUJz4s56BHajDpar4mmr4BnW4agIGtIB1xlizL5fHspNMGLhG
+zuk2u3XqfPSODgbiyjiDhDP/fRych7dkN9DTS4ddQj/crXcHZ9GUe7rEsh5
/8Q/adyY7X3amR6iEwuegZ3ECVHN08XAEPBfGZcHalKEpb2HKlkTy8Dy+/rm
PT/ddd+e/02Ng4NPBAw26lPAD6/M8vaxZ4VAdji1yqCIQf2oQJ7gh1K0kqiN
gLEcYgogCoQkf6zsOLZfVXvETT1w5KW58xNFEGJm7nJzzxM/1Y5idzgnBBxS
mZrs7u76UjjOnd/6pjbAzNEEQqrVaUGXeq3CoQRCQBFcKrvcetttIJmbb7qJ
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
Zs7FZYP/H4yEetc=
          "], {{0, 729.}, {727., 0}}, {0, 255}, 
          ColorFunction -> RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> False, MetaInformation -> 
          Association[
           "Exif" -> Association[
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com"], 
            "GeoMetaInformation" -> {
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com", 
              "TileSources" -> 
              "Wolfram Knowledgebase with data from \[Copyright] \
OpenStreetMap contributors: http://www.openstreetmap.org/copyright", 
              "Projection" -> "Mercator", 
              "PlotRange" -> {{2.044830322265625, 2.5440216064453125`}, {
               55.902557373046875`, 56.40312194824219}}, 
              "LonLatBox" -> {{2.0449717681454325`, 2.5439171207434454`}, {
               48.693718238025966`, 49.02294452452364}}, "GeoModel" -> 
              "ITRF00"}]], Selectable -> False], DefaultBaseStyle -> 
        "ImageGraphics", ImageSizeRaw -> {727., 729.}, 
        PlotRange -> {{0, 727.}, {0, 729.}}]], 
      PolygonBox[{{2.0449717681454325`, 55.90261540984591}, {
       2.0449717681454325`, 56.403020281044924`}, {2.5439171207434454`, 
       56.403020281044924`}, {2.5439171207434454`, 55.90261540984591}, {
       2.0449717681454325`, 55.90261540984591}},
       VertexTextureCoordinates->{{0.00028335005896540366`, 
        0.00011594268133308105`}, {0.00028335005896540366`, 
        0.9997968949416247}, {0.999790690051733, 0.9997968949416247}, {
        0.999790690051733, 0.00011594268133308105`}, {0.00028335005896540366`,
         0.00011594268133308105`}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{2.444128050223843, 56.00269638408571}, {
         2.5439171207434454`, 56.00269638408571}, {2.5439171207434454`, 
         55.90261540984591}, {2.444128050223843, 55.90261540984591}, {
         2.444128050223843, 56.00269638408571}}]},
       "\"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Mercator", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Mercator", "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoPosition[{48.858333333333334`, 2.2944444444444443`}]}]], 
    "BasicGeoRange" -> {{48.7086830692304, 49.007979693319186`}, {
     2.067651102354433, 2.521237786534445}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> Automatic, GeoCenter -> 
      GeoPosition[{48.858333333333334`, 2.294444444444444}], GeoGridLines -> 
      None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{2.0449717681454325`, 2.5439171207434454`}, {
       55.90261540984591, 56.403020281044924`}}, GeoGridRangePadding -> None, 
      GeoModel -> "ITRF00", GeoProjection -> "Mercator", 
      GeoRange -> {{48.693718238025966`, 49.02294452452362}, {
       2.0449717681454325`, 2.5439171207434454`}}, GeoRangePadding -> Full, 
      GeoResolution -> Automatic, GeoServer -> {Automatic}, GeoZoomLevel -> 
      11, MetaInformation -> {
       "GeoModel" -> "ITRF00", 
        "LonLatBox" -> {{2.0449717681454325`, 2.5439171207434454`}, {
         48.693718238025966`, 49.02294452452364}}, 
        "PlotRange" -> {{2.044830322265625, 2.5440216064453125`}, {
         55.902557373046875`, 56.40312194824219}}, "Projection" -> "Mercator",
         "Software" -> "Created with the Wolfram Language: www.wolfram.com", 
        "TileSources" -> 
        "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright"}}},
  PlotRange->{{2.0449717681454325`, 2.5439171207434454`}, {55.90261540984591, 
   56.403020281044924`}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.8279157900432453`*^9, 3.8279158032338133`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"c1016682-34b2-46fe-b10d-66ed6c33b118"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["36. Creating Websites and Apps", "Section",
 CellChangeTimes->{{3.8279160170624113`*^9, 
  3.827916021022456*^9}},ExpressionUUID->"445bf2f6-b7a5-41fe-8292-\
07fe2c1de5b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormPage", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<x\>\"", "\[Rule]", "\"\<SemanticNumber\>\""}], "}"}], ",", 
   RowBox[{"#x", "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.827916024365394*^9, 3.827916102732366*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ee108503-c2e6-4bbd-9d4e-61f0f52605e8"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Forms`FormPage`PackagePrivate`temp$$ = Association[
   "x" -> Association["Interpreter" -> "SemanticNumber", "Input" -> "one"]], 
   Forms`FormPage`PackagePrivate`vals$$ = Association["x" -> 1], 
   Forms`FormPage`PackagePrivate`valid$$ = False, 
   Forms`FormPage`PackagePrivate`form2$$ = FormObject[
    Association[
    "x" -> Association["Interpreter" -> "SemanticNumber", "Input" -> "one"]], 
    
    Association["x" -> 1]], Forms`FormPage`PackagePrivate`valid2$$}, 
   DynamicBox[ToBoxes[
     With[{Forms`FormPage`PackagePrivate`formpane$ = Panel[
         Forms`getFormLayout[
          Forms`PackageScope`bindableForm[
          Forms`FormPage`PackagePrivate`temp$$, 
           Evaluate[Forms`FormPage`PackagePrivate`form2$$], None, None -> 
           Forms`PackageScope`completeAction[
            Forms`FormPage`PackagePrivate`form2$$, 
             Forms`FormPage`PackagePrivate`temp$$, 
             Forms`FormPage`PackagePrivate`vals$$, (
             Unset[Forms`FormPage`PackagePrivate`vals$$]; 
             Forms`FormPage`PackagePrivate`vals$$ = #; 
             Forms`FormPage`PackagePrivate`valid2$$ = Not[
                TrueQ[Forms`PackageScope`$DontComplete]])& , {}]]]], 
       Forms`FormPage`PackagePrivate`resultpane$ = Framed[
         If[
         Forms`FormPage`PackagePrivate`valid$$ = 
          And[Forms`FormPage`PackagePrivate`vals$$ =!= Association[], 
            FreeQ[
             Values[Forms`FormPage`PackagePrivate`vals$$], 
             Alternatives[
              Blank[Failure], Forms`PackageScope`fieldHidden]], 
            TrueQ[Forms`FormPage`PackagePrivate`valid2$$]], 
          Unset[Forms`FormPage`PackagePrivate`valid2$$]; Style[
            (Slot["x"]& )[Forms`FormPage`PackagePrivate`vals$$], "Output", 
            "StandardForm"], 
          Style["Invalid form", "Message"]], FrameStyle -> Lighter[Gray], 
         Background -> White]}, 
      Panel[
       Column[
        Forms`doLayout[
        Automatic, Forms`FormPage`PackagePrivate`valid$$, {
         Forms`FormPage`PackagePrivate`formpane$, 
          Forms`FormPage`PackagePrivate`resultpane$, 
          Panel[
           Item[
            Row[{
              Spacer[0], 
              DefaultButton[
               Forms`PackageScope`completeAction[
               Forms`FormPage`PackagePrivate`form2$$, 
                Forms`FormPage`PackagePrivate`temp$$, 
                Forms`FormPage`PackagePrivate`vals$$, (
                Unset[Forms`FormPage`PackagePrivate`vals$$]; 
                Forms`FormPage`PackagePrivate`vals$$ = #; 
                Forms`FormPage`PackagePrivate`valid2$$ = Not[
                   TrueQ[Forms`PackageScope`$DontComplete]])& , {}]]}], 
            Alignment -> Right]]}]]]], StandardForm],
    ImageSizeCache->{262., {55., 60.}},
    TrackedSymbols:>{Forms`FormPage`PackagePrivate`vals$$}],
   DynamicModuleValues:>{}],
  FormPage[
   FormObject[
    Association["x" -> Association["Interpreter" -> "SemanticNumber"]], 
    Association[]], Slot["x"]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8279160485638533`*^9, 3.827916103021798*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"082a3239-abb7-4900-9beb-86b5782c3b4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CloudDeploy", "@", 
   RowBox[{"Delayed", "@", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"RegularPolygon", "[", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"3", ",", "10"}], "}"}], "]"}], "]"}]}], "}"}], "]"}]}]}], "//",
   "URLShorten"}]], "Input",
 CellChangeTimes->{{3.827916399915683*^9, 3.827916448212195*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"d2411631-759a-4f94-bd1e-fcd26fee515d"],

Cell[BoxData["\<\"https://wolfr.am/UUjzBFYZ\"\>"], "Output",
 CellChangeTimes->{{3.827916411975925*^9, 3.827916449157238*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"cf7fccd5-ebfa-4e82-9e2d-798eeae4d075"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CloudDeploy", "@", 
   RowBox[{"FormPage", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<x\>\"", "\[Rule]", "\"\<SemanticNumber\>\""}], ",", 
       RowBox[{"\"\<y\>\"", "\[Rule]", "\"\<SemanticNumber\>\""}]}], "}"}], 
     ",", 
     RowBox[{
      RowBox[{"#x", "^", "#y"}], "&"}]}], "]"}]}], "//", 
  "URLShorten"}]], "Input",
 CellChangeTimes->{{3.827916473724052*^9, 3.82791656889853*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"d73c0514-2a30-42af-9186-9398b5d75e11"],

Cell[BoxData["\<\"https://wolfr.am/UUjHM5gJ\"\>"], "Output",
 CellChangeTimes->{{3.827916530323719*^9, 3.827916569841914*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"a584108a-7928-443e-b3e2-f0a4b02529a7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["37. Layout and Display", "Section",
 CellChangeTimes->{{3.82791712798951*^9, 
  3.827917130916926*^9}},ExpressionUUID->"784ac5d1-5cec-49ca-82e7-\
b56f088e630f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"PrimeQ", "[", "i", "]"}], ",", 
        RowBox[{"Labeled", "[", 
         RowBox[{
          RowBox[{"Framed", "[", "i", "]"}], ",", 
          RowBox[{"Mod", "[", 
           RowBox[{"i", ",", "4"}], "]"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", "LightGray"}]}], "]"}], ",", "i"}],
        "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "50"}], "}"}]}], "]"}], ",", "5"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827919890004136*^9, 3.827919926729231*^9}, {
  3.827919958947613*^9, 3.8279199645476513`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"58e3a153-9da7-428b-8175-193fc6db2585"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", 
     TemplateBox[{
       FrameBox["2", StripOnInput -> False], "2"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{
       FrameBox["3", StripOnInput -> False], "3"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "4", 
     TemplateBox[{
       FrameBox["5", StripOnInput -> False], "1"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )]},
    {"6", 
     TemplateBox[{
       FrameBox["7", StripOnInput -> False], "3"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "8", "9", "10"},
    {
     TemplateBox[{
       FrameBox["11", StripOnInput -> False], "3"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "12", 
     TemplateBox[{
       FrameBox["13", StripOnInput -> False], "1"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "14", "15"},
    {"16", 
     TemplateBox[{
       FrameBox["17", StripOnInput -> False], "1"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "18", 
     TemplateBox[{
       FrameBox["19", StripOnInput -> False], "3"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "20"},
    {"21", "22", 
     TemplateBox[{
       FrameBox["23", StripOnInput -> False], "3"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "24", "25"},
    {"26", "27", "28", 
     TemplateBox[{
       FrameBox["29", StripOnInput -> False], "1"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "30"},
    {
     TemplateBox[{
       FrameBox["31", StripOnInput -> False], "3"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "32", "33", "34", "35"},
    {"36", 
     TemplateBox[{
       FrameBox["37", StripOnInput -> False], "1"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "38", "39", "40"},
    {
     TemplateBox[{
       FrameBox["41", StripOnInput -> False], "1"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "42", 
     TemplateBox[{
       FrameBox["43", StripOnInput -> False], "3"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]
                 ], BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
               "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "44", "45"},
    {"46", 
     TemplateBox[{
       FrameBox["47", StripOnInput -> False], "3"},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> GrayLevel[0.85], DefaultBaseStyle -> 
           "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0.85], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.5666666666666667], FrameTicks -> 
                 None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0.85`", "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   GrayLevel[0.85]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0.85], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "48", "49", "50"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8279199179105673`*^9, 3.827919927105538*^9}, 
   3.827919965602049*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"20ff2644-4686-41e3-9d70-5a55bb5f8bca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["38. Assigning Names to Things", "Section",
 CellChangeTimes->{{3.827920008240521*^9, 
  3.827920012641419*^9}},ExpressionUUID->"60693498-f0c4-4b1e-84f4-\
dcbe74a53195"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "=", 
     RowBox[{"Range", "[", "10", "]"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "x"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8279200736886*^9, 3.827920086927581*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"d356680f-8b12-4ed3-a5b5-9dfcc259a8a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "12", ",", "20", ",", "30", ",", "42", ",", "56", ",", 
   "72", ",", "90", ",", "110"}], "}"}]], "Output",
 CellChangeTimes->{{3.827920080527896*^9, 3.8279200872265797`*^9}},
 CellLabel->"Out[55]=",ExpressionUUID->"fd3a4434-db21-41f6-b399-a808540dc3b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"allVowels", ",", "allCons"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"allVowels", "=", 
      RowBox[{"Characters", "[", "\"\<aeiou\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"allCons", "=", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"Alphabet", "[", "]"}], ",", "allVowels"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vowels", "=", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{"allVowels", ",", "25"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"cons", "=", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{"allCons", ",", "25"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{"Join", "/@", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Riffle", "[", 
          RowBox[{"vowels", ",", "cons"}], "]"}], ",", "5"}], "]"}]}], 
      "]"}]}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.827920288459126*^9, 3.827920499505076*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"6f077d4a-8f75-4191-9aea-b8a645de3f01"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"u\"\>", "\<\"z\"\>", "\<\"u\"\>", "\<\"q\"\>", "\<\"a\"\>"},
    {"\<\"r\"\>", "\<\"o\"\>", "\<\"v\"\>", "\<\"a\"\>", "\<\"m\"\>"},
    {"\<\"o\"\>", "\<\"j\"\>", "\<\"i\"\>", "\<\"t\"\>", "\<\"u\"\>"},
    {"\<\"t\"\>", "\<\"a\"\>", "\<\"k\"\>", "\<\"a\"\>", "\<\"f\"\>"},
    {"\<\"u\"\>", "\<\"z\"\>", "\<\"a\"\>", "\<\"v\"\>", "\<\"i\"\>"},
    {"\<\"x\"\>", "\<\"u\"\>", "\<\"p\"\>", "\<\"e\"\>", "\<\"l\"\>"},
    {"\<\"a\"\>", "\<\"y\"\>", "\<\"a\"\>", "\<\"r\"\>", "\<\"e\"\>"},
    {"\<\"w\"\>", "\<\"e\"\>", "\<\"x\"\>", "\<\"a\"\>", "\<\"x\"\>"},
    {"\<\"a\"\>", "\<\"h\"\>", "\<\"e\"\>", "\<\"v\"\>", "\<\"a\"\>"},
    {"\<\"q\"\>", "\<\"o\"\>", "\<\"r\"\>", "\<\"u\"\>", "\<\"k\"\>"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.827920468846395*^9, 3.827920499889583*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"adda5a07-bdc1-4787-a736-54f61dd8c849"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["39. Immediate and Delayed Values", "Section",
 CellChangeTimes->{{3.827920671270858*^9, 
  3.8279206773282223`*^9}},ExpressionUUID->"6a0fd6de-07cc-4b40-b74a-\
f1144ca9e837"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"x", "+", "1"}], ",", 
    RowBox[{"x", "+", "2"}], ",", 
    RowBox[{"x", "^", "2"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"RandomInteger", "[", "100", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.827921246695231*^9, 3.8279213315755377`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"6614a447-622f-4aa3-a119-56c1b2ff559c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"51", ",", "52", ",", "53", ",", "2601"}], "}"}]], "Output",
 CellChangeTimes->{{3.827921326185182*^9, 3.827921331966889*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"f029e181-7881-4b27-ae2e-450c1c818665"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"x", "+", "1"}], ",", 
    RowBox[{"x", "+", "2"}], ",", 
    RowBox[{"x", "^", "2"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{"x", "\[RuleDelayed]", 
    RowBox[{"RandomInteger", "[", "100", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8279213409941387`*^9, 3.82792135913041*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"4703157f-de38-48a3-b875-2d82423813a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"69", ",", "30", ",", "64", ",", "676"}], "}"}]], "Output",
 CellChangeTimes->{3.8279213595924664`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"f34c7b8b-920b-4263-902f-58dff4f198d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["40. Defining Your Own Functions", "Section",
 CellChangeTimes->{{3.827921365012019*^9, 
  3.8279213681798573`*^9}},ExpressionUUID->"d8c45f89-cea6-4604-9fa7-\
25ff105d9f3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nearWords", "[", 
   RowBox[{"s_String", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Nearest", "[", 
   RowBox[{
    RowBox[{"WordList", "[", "]"}], ",", "s", ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.827921553455079*^9, 3.8279216066670103`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"155ac69c-f714-4ba7-9679-c54786aa186a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nearWords", "[", 
  RowBox[{"\"\<yeet\>\"", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.827921608159947*^9, 3.8279216132630587`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"22d941f0-318f-4f9f-976d-99b06366b9ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"beet\"\>", ",", "\<\"meet\"\>", ",", "\<\"yet\"\>", 
   ",", "\<\"abet\"\>", ",", "\<\"beat\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8279216145146008`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"35801f11-3a68-48fb-bdb7-5fe2cbafe087"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["41. More about Patterns", "Section",
 CellChangeTimes->{{3.828017186928739*^9, 
  3.828017189490546*^9}},ExpressionUUID->"a858af4e-9599-47d8-baef-\
3edd547d04bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Black", ",", "White", ",", "Orange"}], "}"}], "/.", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Black", "|", "White"}], ")"}], ".."}], "\[Rule]", 
   "Red"}]}]], "Input",
 CellChangeTimes->{{3.8280175302003517`*^9, 3.828017537513424*^9}, {
  3.828017581124598*^9, 3.828017594946299*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"fccdfa87-48a7-409a-850c-bbf4af84e52c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.8280175957958813`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"a1fb17e2-885c-4be0-a137-416eb2c948e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Range", "[", "100", "]"}], "^", "2"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"___", ",", "x_", ",", "x_", ",", "___"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.828017907886579*^9, 3.828017981332992*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"5b40f68c-5ed9-43bc-95b0-61695c62eae5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "7", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.828017959876514*^9, 3.828017981557109*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"3c6b735d-26eb-4cc3-87e2-3872fe97fab6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"100", "!"}], "]"}], "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x___", ",", 
     RowBox[{"0", ".."}]}], "}"}], "\[Rule]", "x"}]}]], "Input",
 CellChangeTimes->{{3.828018440263939*^9, 3.828018482415122*^9}, {
  3.8280185157644463`*^9, 3.828018517708229*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"60aebc79-4881-4003-bfee-d00ba35f27b6"],

Cell[BoxData[
 RowBox[{"Sequence", "[", 
  RowBox[{
  "9", ",", "3", ",", "3", ",", "2", ",", "6", ",", "2", ",", "1", ",", "5", 
   ",", "4", ",", "4", ",", "3", ",", "9", ",", "4", ",", "4", ",", "1", ",", 
   "5", ",", "2", ",", "6", ",", "8", ",", "1", ",", "6", ",", "9", ",", "9", 
   ",", "2", ",", "3", ",", "8", ",", "8", ",", "5", ",", "6", ",", "2", ",", 
   "6", ",", "6", ",", "7", ",", "0", ",", "0", ",", "4", ",", "9", ",", "0", 
   ",", "7", ",", "1", ",", "5", ",", "9", ",", "6", ",", "8", ",", "2", ",", 
   "6", ",", "4", ",", "3", ",", "8", ",", "1", ",", "6", ",", "2", ",", "1", 
   ",", "4", ",", "6", ",", "8", ",", "5", ",", "9", ",", "2", ",", "9", ",", 
   "6", ",", "3", ",", "8", ",", "9", ",", "5", ",", "2", ",", "1", ",", "7", 
   ",", "5", ",", "9", ",", "9", ",", "9", ",", "9", ",", "3", ",", "2", ",", 
   "2", ",", "9", ",", "9", ",", "1", ",", "5", ",", "6", ",", "0", ",", "8", 
   ",", "9", ",", "4", ",", "1", ",", "4", ",", "6", ",", "3", ",", "9", ",", 
   "7", ",", "6", ",", "1", ",", "5", ",", "6", ",", "5", ",", "1", ",", "8", 
   ",", "2", ",", "8", ",", "6", ",", "2", ",", "5", ",", "3", ",", "6", ",", 
   "9", ",", "7", ",", "9", ",", "2", ",", "0", ",", "8", ",", "2", ",", "7", 
   ",", "2", ",", "2", ",", "3", ",", "7", ",", "5", ",", "8", ",", "2", ",", 
   "5", ",", "1", ",", "1", ",", "8", ",", "5", ",", "2", ",", "1", ",", "0", 
   ",", "9", ",", "1", ",", "6", ",", "8", ",", "6", ",", "4"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8280184429821577`*^9, 3.828018484768868*^9, 
  3.828018518026617*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"242365e6-b142-41d5-93db-5aacbc38c4d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", 
  RowBox[{"NestList", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "/.", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "x_", ",", "y___"}], "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "x_", ",", "y___"}], "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "0", ",", "0"}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}]}], "&"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", "200"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.828019039868648*^9, 3.828019150133485*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"4eab5e2e-3bd0-45b0-ba27-34a1fc945abc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "2", ",", "3", ",", "3", ",", "4", ",", "4", ",", "5", ",", "6", 
   ",", "6", ",", "7", ",", "8", ",", "9", ",", "9", ",", "10", ",", "11", 
   ",", "11", ",", "12", ",", "12", ",", "13", ",", "13", ",", "14", ",", 
   "14", ",", "15", ",", "16", ",", "16", ",", "17", ",", "17", ",", "18", 
   ",", "19", ",", "19", ",", "20", ",", "21", ",", "22", ",", "22", ",", 
   "23", ",", "23", ",", "24", ",", "24", ",", "25", ",", "25", ",", "26", 
   ",", "26", ",", "27", ",", "28", ",", "29", ",", "29", ",", "30", ",", 
   "30", ",", "31", ",", "32", ",", "32", ",", "33", ",", "33", ",", "34", 
   ",", "35", ",", "35", ",", "36", ",", "37", ",", "37", ",", "38", ",", 
   "38", ",", "39", ",", "40", ",", "40", ",", "41", ",", "42", ",", "43", 
   ",", "43", ",", "44", ",", "44", ",", "45", ",", "45", ",", "46", ",", 
   "46", ",", "47", ",", "47", ",", "48", ",", "48", ",", "49", ",", "50", 
   ",", "50", ",", "51", ",", "52", ",", "53", ",", "53", ",", "54", ",", 
   "55", ",", "55", ",", "56", ",", "56", ",", "57", ",", "58", ",", "58", 
   ",", "59", ",", "59", ",", "60", ",", "61", ",", "61", ",", "62", ",", 
   "62", ",", "63", ",", "64", ",", "64", ",", "65", ",", "66", ",", "67", 
   ",", "67", ",", "68", ",", "69", ",", "69", ",", "70", ",", "70", ",", 
   "71", ",", "71", ",", "72", ",", "72", ",", "73", ",", "74", ",", "74", 
   ",", "75", ",", "76", ",", "77", ",", "77", ",", "78", ",", "78", ",", 
   "79", ",", "79", ",", "80", ",", "80", ",", "81", ",", "82", ",", "82", 
   ",", "83", ",", "84", ",", "85", ",", "85", ",", "86", ",", "87", ",", 
   "87", ",", "88", ",", "88", ",", "89", ",", "89", ",", "90", ",", "90", 
   ",", "91", ",", "92", ",", "92", ",", "93", ",", "93", ",", "94", ",", 
   "95", ",", "95", ",", "96", ",", "97", ",", "98", ",", "98", ",", "99", 
   ",", "100", ",", "100", ",", "101", ",", "101", ",", "102", ",", "103", 
   ",", "103", ",", "104", ",", "104", ",", "105", ",", "106", ",", "106", 
   ",", "107", ",", "108", ",", "109", ",", "109", ",", "110", ",", "111", 
   ",", "111", ",", "112", ",", "112", ",", "113", ",", "113", ",", "114", 
   ",", "114", ",", "115", ",", "116", ",", "116", ",", "117", ",", "117", 
   ",", "118", ",", "119", ",", "119", ",", "120", ",", "121", ",", "122", 
   ",", "122", ",", "123", ",", "123", ",", "124", ",", "124", ",", "125", 
   ",", "125"}], "}"}]], "Output",
 CellChangeTimes->{3.828019103988426*^9, 3.828019150823188*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"2787b010-532a-4422-b337-b110f44edb72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<1 2 3 4\>\"", ",", 
   RowBox[{"\"\< \>\"", "\[Rule]", "\"\<---\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828019461258338*^9, 3.828019472192156*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c90cbc9f-f3d7-437a-868d-35da1645e315"],

Cell[BoxData["\<\"1---2---3---4\"\>"], "Output",
 CellChangeTimes->{3.828019473095313*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"cbfe5b84-8f4b-4ce7-9e13-15614f11a135"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"StringMatchQ", "[", 
         RowBox[{
          RowBox[{"EntityValue", "[", 
           RowBox[{
            RowBox[{"EntityList", "[", "\"\<Country\>\"", "]"}], ",", 
            "\"\<Name\>\""}], "]"}], ",", 
          RowBox[{"#", "~~", "___"}]}], "]"}], ",", "True"}], "]"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"ToUpperCase", "[", 
     RowBox[{"Alphabet", "[", "]"}], "]"}]}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"ToUpperCase", "[", 
     RowBox[{"Alphabet", "[", "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8280216935145693`*^9, 3.828021717012496*^9}, {
  3.8280217780245657`*^9, 3.8280218193108997`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"12ec9b3a-fe59-4d57-bfca-4118fefc5aaf"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.10465116279069775`, 0.}, {26.380143112701248`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.6198568872987478, 0.}, {1.3801431127012522`, 16.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{22.209054209919262`, 
            32.24064462386262}, {-1.3013422651331155`, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 16]& ,
         TagBoxNote->"16"],
        StyleBox["16", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[16, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.6198568872987478`, 0.}, {2.3801431127012522`, 
             21.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{34.74589901320005, 
            44.77748942714341}, {-31.781654892116563`, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 21]& ,
         TagBoxNote->"21"],
        StyleBox["21", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.6198568872987478`, 0.}, {3.3801431127012522`, 
             21.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{47.282743816480846`, 
            57.314334230424194`}, {-31.781654892116563`, 96.73565814121389}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 21]& ,
         TagBoxNote->"21"],
        StyleBox["21", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.6198568872987478`, 0.}, {4.380143112701252, 5.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{59.81958861976163, 69.85117903370498}, {
            65.75534551423044, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.619856887298748, 0.}, {5.380143112701252, 9.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{72.35643342304242, 82.38802383698577}, {
            41.3710954126437, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 9]& ,
         TagBoxNote->"9"],
        StyleBox["9", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.619856887298748, 0.}, {6.380143112701252, 8.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{84.8932782263232, 94.92486864026657}, {
            47.46715793804039, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.619856887298748, 0.}, {7.380143112701252, 17.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{97.430123029604, 
            107.46171344354735`}, {-7.397404790529805, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 17]& ,
         TagBoxNote->"17"],
        StyleBox["17", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[17, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.619856887298748, 0.}, {8.380143112701251, 4.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{109.96696783288479`, 119.99855824682813`}, {
            71.85140803962713, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.619856887298747, 0.}, {9.380143112701251, 10.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{122.50381263616556`, 132.53540305010893`}, {
            35.27503288724701, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{9.619856887298747, 0.}, {10.380143112701251`, 4.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{135.04065743944636`, 145.0722478533897}, {
            71.85140803962713, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{10.619856887298747`, 0.}, {11.380143112701251`, 6.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{147.57750224272715`, 157.60909265667053`}, {
            59.659282988833766`, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6]& ,
         TagBoxNote->"6"],
        StyleBox["6", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{11.619856887298747`, 0.}, {12.380143112701251`, 9.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{160.11434704600794`, 170.1459374599513}, {
            41.3710954126437, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 9]& ,
         TagBoxNote->"9"],
        StyleBox["9", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{12.619856887298747`, 0.}, {13.380143112701251`, 
             22.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{172.65119184928875`, 
            182.6827822632321}, {-37.87771741751325, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 22]& ,
         TagBoxNote->"22"],
        StyleBox["22", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[22, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{13.619856887298747`, 0.}, {14.380143112701251`, 
             15.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{185.18803665256954`, 195.21962706651288`}, {
            4.794720260263574, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 15]& ,
         TagBoxNote->"15"],
        StyleBox["15", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[15, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{14.619856887298747`, 0.}, {15.380143112701251`, 1.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{197.72488145585032`, 207.75647186979367`}, {
            90.1395956158172, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{15.619856887298747`, 0.}, {16.38014311270125, 11.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{210.2617262591311, 220.29331667307446`}, {
            29.17897036185032, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 11]& ,
         TagBoxNote->"11"],
        StyleBox["11", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[11, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{16.619856887298745`, 0.}, {17.380143112701248`, 1.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{222.79857106241187`, 232.83016147635522`}, {
            90.1395956158172, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{17.619856887298745`, 0.}, {18.380143112701248`, 5.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{235.33541586569265`, 245.367006279636}, {
            65.75534551423044, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{18.619856887298745`, 0.}, {19.380143112701248`, 
             33.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{247.87226066897347`, 
            257.9038510829168}, {-104.93440519687681`, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 33]& ,
         TagBoxNote->"33"],
        StyleBox["33", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[33, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{19.619856887298745`, 0.}, {20.380143112701248`, 
             13.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{260.4091054722542, 270.44069588619755`}, {
            16.986845311056953`, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 13]& ,
         TagBoxNote->"13"],
        StyleBox["13", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[13, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{20.619856887298745`, 0.}, {21.380143112701248`, 9.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{272.945950275535, 282.97754068947836`}, {
            41.3710954126437, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 9]& ,
         TagBoxNote->"9"],
        StyleBox["9", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{21.619856887298745`, 0.}, {22.380143112701248`, 4.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{285.4827950788158, 295.5143854927591}, {
            71.85140803962713, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{22.619856887298745`, 0.}, {23.380143112701248`, 3.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{298.0196398820966, 308.05123029603993`}, {
            77.94747056502382, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{23.619856887298745`, 0.}, {24.380143112701248`, 0.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{310.55648468537737`, 320.5880750993207}, {
            96.23565814121389, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{24.619856887298745`, 0.}, {25.380143112701248`, 1.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{323.0933294886582, 333.1249199026015}, {
            90.1395956158172, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{25.619856887298745`, 0.}, {26.380143112701248`, 2.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{335.63017429193894`, 345.66176470588226`}, {
            84.04353309042051, 96.73565814121389}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.10465116279069775`, 0.}, {26.905652951699462`, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.6198568872987478, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.6198568872987478, 0.}]}], 
        LineBox[{{26.38014311270125, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {26.38014311270125, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          LineBox[{{1.3801431127012522`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.3801431127012522`, 
             0.}]}], LineBox[{{1.6198568872987478`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.6198568872987478`, 
             0.}]}], LineBox[{{2.3801431127012522`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.3801431127012522`, 
             0.}]}], LineBox[{{2.6198568872987478`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.6198568872987478`, 
             0.}]}], LineBox[{{3.3801431127012522`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.3801431127012522`, 
             0.}]}], 
          LineBox[{{3.6198568872987478`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.6198568872987478`, 
             0.}]}], LineBox[{{4.380143112701252, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.380143112701252, 0.}]}],
           LineBox[{{4.619856887298748, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.619856887298748, 0.}]}],
           LineBox[{{5.380143112701252, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.380143112701252, 0.}]}],
           LineBox[{{5.619856887298748, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.619856887298748, 0.}]}],
           LineBox[{{6.380143112701252, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.380143112701252, 0.}]}],
           LineBox[{{6.619856887298748, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.619856887298748, 0.}]}],
           LineBox[{{7.380143112701252, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.380143112701252, 0.}]}],
           LineBox[{{7.619856887298748, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.619856887298748, 0.}]}],
           LineBox[{{8.380143112701251, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {8.380143112701251, 0.}]}],
           LineBox[{{8.619856887298747, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {8.619856887298747, 0.}]}],
           LineBox[{{9.380143112701251, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {9.380143112701251, 0.}]}],
           LineBox[{{9.619856887298745, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {9.619856887298745, 0.}]}],
           LineBox[{{10.380143112701251`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {10.380143112701251`, 
             0.}]}], LineBox[{{10.619856887298745`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {10.619856887298745`, 
             0.}]}], LineBox[{{11.380143112701251`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {11.380143112701251`, 
             0.}]}], LineBox[{{11.619856887298745`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {11.619856887298745`, 
             0.}]}], LineBox[{{12.380143112701251`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {12.380143112701251`, 
             0.}]}], LineBox[{{12.619856887298745`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {12.619856887298745`, 
             0.}]}], LineBox[{{13.380143112701251`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {13.380143112701251`, 
             0.}]}], LineBox[{{13.619856887298745`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {13.619856887298745`, 
             0.}]}], LineBox[{{14.380143112701251`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {14.380143112701251`, 
             0.}]}], LineBox[{{14.619856887298745`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {14.619856887298745`, 
             0.}]}], LineBox[{{15.380143112701251`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {15.380143112701251`, 
             0.}]}], LineBox[{{15.619856887298745`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {15.619856887298745`, 
             0.}]}], LineBox[{{16.38014311270125, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {16.38014311270125, 0.}]}],
           LineBox[{{16.619856887298745`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {16.619856887298745`, 
             0.}]}], LineBox[{{17.38014311270125, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {17.38014311270125, 0.}]}],
           LineBox[{{17.61985688729875, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {17.61985688729875, 0.}]}],
           LineBox[{{18.38014311270125, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {18.38014311270125, 0.}]}],
           LineBox[{{18.61985688729875, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {18.61985688729875, 0.}]}],
           LineBox[{{19.38014311270125, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {19.38014311270125, 0.}]}],
           LineBox[{{19.61985688729875, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {19.61985688729875, 0.}]}],
           LineBox[{{20.38014311270125, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {20.38014311270125, 0.}]}],
           LineBox[{{20.61985688729875, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {20.61985688729875, 0.}]}],
           LineBox[{{21.38014311270125, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {21.38014311270125, 0.}]}],
           LineBox[{{21.61985688729875, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {21.61985688729875, 0.}]}],
           LineBox[{{22.38014311270125, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {22.38014311270125, 0.}]}],
           LineBox[{{22.61985688729875, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {22.61985688729875, 0.}]}],
           LineBox[{{23.38014311270125, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {23.38014311270125, 0.}]}],
           LineBox[{{23.61985688729875, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {23.61985688729875, 0.}]}],
           LineBox[{{24.38014311270125, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {24.38014311270125, 0.}]}],
           LineBox[{{24.61985688729875, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {24.61985688729875, 0.}]}],
           LineBox[{{25.38014311270125, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {25.38014311270125, 0.}]}],
           LineBox[{{25.61985688729875, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {25.61985688729875, 
             0.}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"A\"\>", Offset[{0, -2}, {1., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"B\"\>", Offset[{0, -2}, {2., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"C\"\>", Offset[{0, -2}, {3., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"D\"\>", Offset[{0, -2}, {4., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"E\"\>", Offset[{0, -2}, {5., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"F\"\>", Offset[{0, -2}, {6., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"G\"\>", Offset[{0, -2}, {7., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"H\"\>", Offset[{0, -2}, {7.999999999999999, 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"I\"\>", Offset[{0, -2}, {9., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"J\"\>", Offset[{0, -2}, {10., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"K\"\>", Offset[{0, -2}, {11., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"L\"\>", Offset[{0, -2}, {12., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"M\"\>", Offset[{0, -2}, {13., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"N\"\>", Offset[{0, -2}, {14., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"O\"\>", Offset[{0, -2}, {15., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"P\"\>", Offset[{0, -2}, {16., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Q\"\>", Offset[{0, -2}, {17., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"R\"\>", Offset[{0, -2}, {18., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"S\"\>", Offset[{0, -2}, {19., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"T\"\>", Offset[{0, -2}, {20., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"U\"\>", Offset[{0, -2}, {21., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"V\"\>", Offset[{0, -2}, {22., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"W\"\>", Offset[{0, -2}, {23., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"X\"\>", Offset[{0, -2}, {24., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Y\"\>", Offset[{0, -2}, {25., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}], 
         InsetBox["\<\"Z\"\>", Offset[{0, -2}, {26., 0.}], 
          ImageScaled[{Rational[1, 2], 1}], Automatic, {1, 0}]}, 
        "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.10465116279069775`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.8280217961622887`*^9, 3.8280218203749647`*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"e3dbcf80-aad2-4846-b5b1-55882974e4e7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["43. Storing Things", "Section",
 CellChangeTimes->{{3.828090974906445*^9, 
  3.828090977204043*^9}},ExpressionUUID->"b7cd3e2e-2d39-4ad4-a408-\
0b372ec0353d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bin", "=", 
   RowBox[{"CreateDatabin", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.828189122328834*^9, 3.828189129387723*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"52f5d88a-ef15-40b2-88aa-7b2f883209c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DatabinAdd", "[", 
  RowBox[{"bin", ",", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "\"\<test1\>\""}], ",", 
     RowBox[{"2", "\[Rule]", "\"\<test2\>\""}]}], "|>"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8281891377064543`*^9, 3.828189146422495*^9}, {
  3.828189181270925*^9, 3.828189190260687*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"02dcfbdb-6279-459e-8f32-8f4ef74b64fb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Databin",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.05555555555555555], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}}}, {{{15.646999999999998`, 5.933000000000001}, {
                  13.585, 7.263}, {15.533, 8.458}, {17.332, 
                  7.363999999999999}, {15.646999999999998`, 
                  5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                  12.491, 6.591}, {14.725999999999999`, 
                  5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                  5.978000000000001, 2.285}, {8.666, 4.244}, {
                  11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                  3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                  7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                  1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                  1.6840000000000002`, 5.933000000000001}, {0., 
                  7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                  "]}]}, {
                FaceForm[
                 RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]]}, 
               StripOnInput -> False]}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, Frame -> True, FrameTicks -> None, 
              PlotRangePadding -> 2.5, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]], ImageSize -> {18., 19.}, 
              PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"UZ7dA5C1\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD49ebb2e851e-8176-4772-9bc1-43dab9de893a"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.05555555555555555], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}}}, {{{15.646999999999998`, 5.933000000000001}, {
                  13.585, 7.263}, {15.533, 8.458}, {17.332, 
                  7.363999999999999}, {15.646999999999998`, 
                  5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                  12.491, 6.591}, {14.725999999999999`, 
                  5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                  5.978000000000001, 2.285}, {8.666, 4.244}, {
                  11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                  3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                  7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                  1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                  1.6840000000000002`, 5.933000000000001}, {0., 
                  7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                  "]}]}, {
                FaceForm[
                 RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]]}, 
               StripOnInput -> False]}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, Frame -> True, FrameTicks -> None, 
              PlotRangePadding -> 2.5, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]], ImageSize -> {18., 19.}, 
              PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"UZ7dA5C1\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD49ebb2e851e-8176-4772-9bc1-43dab9de893a"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://wolfr.am/UZ7dA5C1\"", 
                    "https://wolfr.am/UZ7dA5C1"}, "HyperlinkURL"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"DD49ebb2e851e-8176-4772-9bc1-43dab9de893a\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://wolfr.am/UZ7dA5C1\"", 
                    "https://wolfr.am/UZ7dA5C1"}, "HyperlinkURL"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creator: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ben.jacobsohn07@gmail.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Owner: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ben.jacobsohn07@gmail.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Fri 23 Apr 2021 13:52:11\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Latest date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Replace[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD49ebb2e851e-8176-4772-9bc1-43dab9de893a"}], Except[
                    Blank[Association]] -> {}, {0}], "Timestamp", 
                    Missing[]], Pattern[DataDropClient`Private`date, 
                    Blank[DateObject]] :> 
                    DateString[DataDropClient`Private`date], {0}], 
                    StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    (If[
                    NumberQ[#], 
                    Round[#, 0.1], #]& )[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD49ebb2e851e-8176-4772-9bc1-43dab9de893a"}], Except[
                    Blank[Association]] -> {}, {0}], "Size", 
                    Missing[]]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Latest: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD49ebb2e851e-8176-4772-9bc1-43dab9de893a"}], Except[
                    Blank[Association]] -> {}, {0}], "Data", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ExpirationDate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Sun 23 May 2021\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Databin["UZ7dA5C1"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.828189191369841*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"51063865-7b7f-441e-aada-204b5f5ae6a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "[", "bin", "]"}]], "Input",
 CellChangeTimes->{{3.828189192762562*^9, 3.828189201579668*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"22fb78cc-282c-4c5b-b41f-a6f61d80e8d4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"{", "\<\"test1\"\>", "}"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", "\<\"test2\"\>", "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.828189202539201*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"bef60e42-1d86-4207-af1e-d6ab9a5b01c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Put", "[", 
  RowBox[{"bin", ",", 
   RowBox[{"LocalObject", "[", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828189220788104*^9, 3.828189245124352*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"1e232a0f-52fd-467c-a3d6-a9fbb5517ac0"],

Cell[BoxData[
 RowBox[{"LocalObject", 
  "[", "\<\"file:///home/ben/.Wolfram/Objects/c8eb30fd-0d37-45d3-bfd7-\
de8f50f1a2d7\"\>", "]"}]], "Output",
 CellChangeTimes->{{3.82818923338288*^9, 3.828189245539857*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"31e29e68-4b26-43e1-89d6-54ead0778e42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "@", 
  RowBox[{"Get", "[", "%", "]"}]}]], "Input",
 CellChangeTimes->{{3.828189238055678*^9, 3.828189250975543*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b7b00b57-a185-4a85-ac44-c30b193a1b6b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "\<\"test1\"\>"}], ",", 
      RowBox[{"2", "\[Rule]", "\<\"test2\"\>"}]}], "\[RightAssociation]"}], 
    ",", 
    TemplateBox[{
      RowBox[{"\"Fri 23 Apr 2021 13:53:11\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
            False]}], FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2021", ",", "4", ",", "23", ",", "13", ",", "53", ",", 
              "11.181000232696533`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", 
          RowBox[{"-", "4.`"}]}], "]"}]},
     "DateObject",
     Editable->False], 
    ",", "\<\"data2e28106b-1f06-40bc-9700-703d648b8eb7\"\>", ",", 
    TemplateBox[{"0.052`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
     "Quantity"], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"TimeRecorded\"\>", "\[Rule]", 
       TemplateBox[{
         RowBox[{"\"Fri 23 Apr 2021 13:53:11\"", 
           StyleBox[
            RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
              StyleBox[
               RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
               False]}], FontColor -> GrayLevel[0.5]]}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2021", ",", "4", ",", "23", ",", "13", ",", "53", ",", 
                 "11.181000232696533`"}], "}"}], ",", "\"Instant\"", ",", 
             "\"Gregorian\"", ",", 
             RowBox[{"-", "4.`"}]}], "]"}]},
        "DateObject",
        Editable->False]}], ",", 
      RowBox[{"\<\"TimeGiven\"\>", "\[Rule]", 
       RowBox[{"DateObject", "[", 
        RowBox[{"Missing", "[", "]"}], "]"}]}], ",", 
      RowBox[{"\<\"Authenticated\"\>", "\[Rule]", "False"}], ",", 
      RowBox[{"\<\"GeoLocation\"\>", "\[Rule]", 
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"39.05259704589844`", ",", 
          RowBox[{"-", "77.12100219726562`"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"\<\"SourceType\"\>", "\[Rule]", "\<\"WolframLanguage\"\>"}], 
      ",", 
      RowBox[{"\<\"SourceDetails\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"UserAgent\"\>", 
         "\[Rule]", "\<\"Wolfram HTTPClient 12.2\"\>"}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8281892403931913`*^9, 3.828189251713882*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"32ed7a10-fadc-47cc-852d-0c76593ead96"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["44. Importing and Exporting", "Section",
 CellChangeTimes->{{3.8281896051593237`*^9, 
  3.828189608218133*^9}},ExpressionUUID->"41e33e69-1e72-4985-af40-\
561252acdef2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"#", "->", 
       RowBox[{"LanguageIdentify", "[", "#", "]"}]}], "|>"}], "&"}], "/@", 
    RowBox[{"TextSentences", "[", 
     RowBox[{"Import", "[", "\"\<http://un.org\>\"", "]"}], "]"}]}], ",", 
   "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.8281896164499197`*^9, 3.8281897409183292`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"28f494cf-c973-4102-a6e8-3b6b31e20294"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"\:0631\:0633\:0645 \:062a\:0648\:0636\:064a\:062d\:064a \
\:0644\:0641\:0631\:064a\:0642 \:0627\:0644\:0639\:0645\:0644 \:0627\:0644\
\:0645\:0646\:0627\:062e\:064a \:0627\:0644\:062a\:0627\:0628\:0639 \:0644\
\:0644\:0623\:0645\:0645 \:0627\:0644\:0645\:062a\:062d\:062f\:0629\"\>", 
     "\[Rule]", 
     TemplateBox[{"\"Arabic\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Language\"", ",", "\"Arabic\""}], "]"}], 
       "\"Entity[\\\"Language\\\", \\\"Arabic\\\"]\"", "\"language\""},
      "Entity"]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"\:8054\:5408\:56fd\:6c14\:5019\:884c\:52a8\:5c0f\:7ec4\:56fe\
\:7247\"\>", "\[Rule]", 
     TemplateBox[{"\"Chinese\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Language\"", ",", "\"Chinese\""}], "]"}], 
       "\"Entity[\\\"Language\\\", \\\"Chinese\\\"]\"", "\"language\""},
      "Entity"]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Illustration by the UN Climate Action Team\"\>", "\[Rule]", 
     TemplateBox[{"\"English\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Language\"", ",", "\"English\""}], "]"}], 
       "\"Entity[\\\"Language\\\", \\\"English\\\"]\"", "\"language\""},
      "Entity"]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Illustration par l'\[CapitalEAcute]quipe de soutien sur les \
changements climatiques\"\>", "\[Rule]", 
     TemplateBox[{"\"French\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
       "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
      "Entity"]}], "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.828189631260193*^9, 3.8281897074850616`*^9}, 
   3.828189741577409*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"ab35d5cf-76cf-4373-9bdd-cb1093428d24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestGraph", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"#", ",", "\"\<Hyperlinks\>\""}], "]"}], ",", "5"}], "]"}], 
    "&"}], ",", "\"\<http://wikipedia.org\>\"", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.828189745932303*^9, 3.8281898349051228`*^9}, {
   3.8281898990370398`*^9, 3.828189918402854*^9}, 3.8281899686589403`*^9, {
   3.828190121825227*^9, 3.828190143884946*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"13b24943-ee71-4c1f-bc93-c94e50293e63"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "http://de.wikipedia.org/", 
       "http://de.wikipedia.org/wiki/Enzyklop%C3%A4die", 
       "http://de.wikipedia.org/wiki/Freie_Inhalte", 
       "http://de.wikipedia.org/wiki/Spezial:Statistik", 
       "http://de.wikipedia.org/wiki/Wikipedia:%C3%9Cber_Wikipedia", 
       "http://de.wikipedia.org/wiki/Wikipedia:Starthilfe", 
       "http://de.wikipedia.org/wiki/Datei:Danimarca_XIII_secolo,_plinio_\
historia_naturalis.JPG", 
       "http://de.wikipedia.org/wiki/Datei:Larousse_secXIX.jpg", 
       "http://de.wikipedia.org/wiki/Naturalis_historia", 
       "http://de.wikipedia.org/wiki/Plinius_der_%C3%84ltere", 
       "http://de.wikipedia.org/wiki/Datei:Definition_of_Free_Cultural_Works_\
logo_notext.svg", "http://de.wikipedia.org/wiki/Englische_Sprache", 
       "http://de.wikipedia.org/wiki/Inhalt", 
       "http://de.wikipedia.org/wiki/Urheberrecht", 
       "http://de.wikipedia.org/wiki/Spezial:Aktive_Benutzer", 
       "http://de.wikipedia.org/wiki/Spezial:Alle_Seiten", 
       "http://de.wikipedia.org/wiki/Spezial:Benutzer", 
       "http://de.wikipedia.org/wiki/Spezial:Medienstatistiken", 
       "http://de.wikipedia.org/w/index.php?title=Spezial:Alle_Seiten&\
hideredirects=1", "http://de.wikipedia.org/wiki/Hawaiische_Sprache", 
       "http://de.wikipedia.org/wiki/Wikipedia", 
       "http://de.wikipedia.org/wiki/Wikipedia:Shortcuts", 
       "http://de.wikipedia.org/wiki/Hilfe:Suche", 
       "http://de.wikipedia.org/wiki/Wikipedia:Autorenportal", 
       "http://de.wikipedia.org/wiki/Wikipedia:Einstieg_f%C3%BCr_Leser", 
       "http://en.wikipedia.org/", 
       "http://en.wikipedia.org/wiki/Encyclopedia", 
       "http://en.wikipedia.org/wiki/Free_content", 
       "http://en.wikipedia.org/wiki/Help:Introduction_to_Wikipedia", 
       "http://en.wikipedia.org/wiki/Special:Statistics", 
       "http://en.wikipedia.org/wiki/Wikipedia", 
       "http://en.wikipedia.org/wiki/Encyclop%C3%A6dia_Britannica", 
       "http://en.wikipedia.org/wiki/Encyclopedia_(disambiguation)", 
       "http://en.wikipedia.org/wiki/File:Encyclopaedia_Britannica_15_with_\
2002.jpg", "http://en.wikipedia.org/wiki/Wikipedia:Protection_policy#semi", 
       "http://en.wikipedia.org/wiki/File:Definition_of_Free_Cultural_Works_\
logo_notext.svg", "http://en.wikipedia.org/wiki/Free_Cultural_Works", 
       "http://en.wikipedia.org/wiki/Wikipedia:Free_content", 
       "http://en.wikipedia.org/wiki/Wiki", 
       "http://en.wikipedia.org/wiki/Wikipedia:Who_writes_Wikipedia%3F", 
       "http://en.wikipedia.org/wiki/Special:AllPages", 
       "http://en.wikipedia.org/wiki/Special:ListUsers", 
       "http://en.wikipedia.org/wiki/Special:MediaStatistics", 
       "http://en.wikipedia.org/wiki/Wikipedia:Wikimedia_Commons", 
       "http://en.wikipedia.org/w/index.php?title=Special:AllPages&\
hideredirects=1", "http://en.wikipedia.org/wiki/English_Wikipedia", 
       "http://en.wikipedia.org/wiki/File:Wikipedia-logo-v2.svg", 
       "http://en.wikipedia.org/wiki/Main_Page", 
       "http://en.wikipedia.org/wiki/Wikipedia_(disambiguation)", 
       "http://es.wikipedia.org/", 
       "http://es.wikipedia.org/wiki/Ayuda:Introducci%C3%B3n", 
       "http://es.wikipedia.org/wiki/Especial:Buscar", 
       "http://es.wikipedia.org/wiki/Especial:Estad%C3%ADsticas", 
       "http://es.wikipedia.org/wiki/Wikipedia:Bienvenidos", 
       "http://es.wikipedia.org/wiki/Wikipedia_en_espa%C3%B1ol", 
       "http://es.wikipedia.org/wiki/Ayuda:Edici%C3%B3n", 
       "http://es.wikipedia.org/wiki/Wikipedia:Editor_Visual", 
       "http://es.wikipedia.org/wiki/Wikipedia:Pol%C3%ADtica_de_protecci%C3%\
B3n", "http://es.wikipedia.org/wiki/Wikipedia:Wikipedistas", 
       "http://wikistream.wmflabs.org/#wiki=es.wikipedia", 
       "http://es.wikipedia.org/wiki/Ayuda:B%C3%BAsqueda", 
       "http://es.wikipedia.org/w/index.php?title=Especial:Buscar&profile=all&\
search=&fulltext=1", 
       "http://es.wikipedia.org/w/index.php?title=Especial:Buscar&profile=\
default&search=&fulltext=1", 
       "http://es.wikipedia.org/w/index.php?title=Especial:Buscar&profile=\
images&search=&fulltext=1", 
       "https://www.mediawiki.org/wiki/Special:MyLanguage/Help:CirrusSearch", 
       "http://es.wikipedia.org/wiki/Especial:ListaUsuarios", 
       "http://es.wikipedia.org/wiki/Especial:Todas", 
       "http://es.wikipedia.org/wiki/Especial:UsuariosActivos", 
       "http://es.wikipedia.org/wiki/Wikipedia:Bot", 
       "http://es.wikipedia.org/w/index.php?title=Especial:Todas&\
hideredirects=1", "http://es.wikipedia.org/wiki/20_de_mayo", 
       "http://es.wikipedia.org/wiki/Archivo:Alfombra_Bienvenida_Wikipedia.\
svg", "http://es.wikipedia.org/wiki/Contenido_libre", 
       "http://es.wikipedia.org/wiki/Enciclopedia", 
       "http://es.wikipedia.org/wiki/Archivo:Portada_wikipedia_esp_15.png", 
       "http://es.wikipedia.org/wiki/Archivo:Wikipedia-logo-v2-es.svg", 
       "http://es.wikipedia.org/wiki/Idioma_espa%C3%B1ol", 
       "https://es.wikipedia.org", "https://www.wikidata.org/wiki/Q8449", 
       "http://ja.wikipedia.org/", 
       "http://ja.wikipedia.org/wiki/%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%\
82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%88", 
       "http://ja.wikipedia.org/wiki/%E7%89%B9%E5%88%A5:%E7%B5%B1%E8%A8%88", 
       "http://ja.wikipedia.org/wiki/%E7%99%BE%E7%A7%91%E4%BA%8B%E5%85%B8", 
       "http://ja.wikipedia.org/wiki/Wikipedia:%E3%82%A6%E3%82%A3%E3%82%AD%E3%\
83%9A%E3%83%87%E3%82%A3%E3%82%A2%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6", 
       "http://ja.wikipedia.org/wiki/Wikipedia:%E3%82%A6%E3%82%A3%E3%82%AD%E3%\
83%9A%E3%83%87%E3%82%A3%E3%82%A2%E3%81%B8%E3%82%88%E3%81%86%E3%81%93%E3%81%\
9D", "http://ja.wikipedia.org/wiki/%E3%82%AF%E3%83%AA%E3%82%A8%E3%82%A4%E3%83%\
86%E3%82%A3%E3%83%96%E3%83%BB%E3%82%B3%E3%83%A2%E3%83%B3%E3%82%BA%E3%83%BB%E3%\
83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9", 
       "http://ja.wikipedia.org/wiki/%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB:\
Discussing_Creative_Commons_licensing_in_Khmer.jpg", 
       "http://ja.wikipedia.org/wiki/%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB:\
OpenCola_soft_drink_recipe.pdf", 
       "http://ja.wikipedia.org/wiki/%E7%89%B9%E5%88%A5:%E3%83%9A%E3%83%BC%E3%\
82%B8%E4%B8%80%E8%A6%A7", 
       "http://ja.wikipedia.org/wiki/%E7%89%B9%E5%88%A5:%E3%83%A1%E3%83%87%E3%\
82%A3%E3%82%A2%E7%B5%B1%E8%A8%88", 
       "http://ja.wikipedia.org/wiki/%E7%89%B9%E5%88%A5:%E6%B4%BB%E5%8B%95%E4%\
B8%AD%E3%81%AE%E5%88%A9%E7%94%A8%E8%80%85", 
       "http://ja.wikipedia.org/wiki/%E7%89%B9%E5%88%A5:%E7%99%BB%E9%8C%B2%E5%\
88%A9%E7%94%A8%E8%80%85%E4%B8%80%E8%A6%A7", 
       "http://ja.wikipedia.org/w/index.php?title=%E7%89%B9%E5%88%A5:%E3%83%\
9A%E3%83%BC%E3%82%B8%E4%B8%80%E8%A6%A7&hideredirects=1", 
       "http://ja.wikipedia.org/wiki/%E3%81%98", 
       "http://ja.wikipedia.org/wiki/%E3%82%A2%E3%83%AB%E3%83%95%E3%82%A1%E3%\
83%99%E3%83%83%E3%83%88%E9%A0%86", 
       "http://ja.wikipedia.org/wiki/%E3%83%A9%E3%83%86%E3%83%B3%E8%AA%9E", 
       "http://ja.wikipedia.org/wiki/%E7%9F%A5%E8%AD%98", 
       "http://ja.wikipedia.org/wiki/%E7%A7%91%E7%9B%AE", 
       "http://ja.wikipedia.org/wiki/%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB:\
Disambig_gray.svg", "http://ja.wikipedia.org/wiki/Help:%E7%9B%AE%E6%AC%A1", 
       "http://ja.wikipedia.org/wiki/Wikipedia:%E5%8D%8A%E4%BF%9D%E8%AD%B7%E3%\
81%AE%E6%96%B9%E9%87%9D", 
       "http://ja.wikipedia.org/wiki/Wikipedia:%E8%B3%AA%E5%95%8F", 
       "http://ja.wikipedia.org/wiki/Wikipedia:FAQ", 
       "http://ja.wikipedia.org/wiki/Help:%E6%97%A9%E8%A6%8B%E8%A1%A8", 
       "http://ja.wikipedia.org/wiki/Wikipedia:%E3%82%A6%E3%82%A3%E3%82%AD%E3%\
83%9A%E3%83%87%E3%82%A3%E3%82%A2%E7%94%A8%E8%AA%9E%E9%9B%86", 
       "http://ja.wikipedia.org/wiki/Wikipedia:%E3%82%AC%E3%82%A4%E3%83%89%E3%\
83%96%E3%83%83%E3%82%AF", 
       "http://ja.wikipedia.org/wiki/Wikipedia:%E3%83%81%E3%83%A5%E3%83%BC%E3%\
83%88%E3%83%AA%E3%82%A2%E3%83%AB", "http://ru.wikipedia.org/", 
       "http://ru.wikipedia.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%\
B4%D0%B8%D1%8F", 
       "http://ru.wikipedia.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%\
B4%D0%B8%D1%8F:%D0%9F%D0%B0%D1%82%D1%80%D1%83%D0%BB%D0%B8%D1%80%D0%BE%D0%B2%\
D0%B0%D0%BD%D0%B8%D0%B5", 
       "http://ru.wikipedia.org/wiki/%D0%A1%D0%B2%D0%BE%D0%B1%D0%BE%D0%B4%D0%\
BD%D1%8B%D0%B9_%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D1%82", 
       "http://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%\
B0:%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5_%D0%B2_%D0%92%D0%B8%D0%BA%\
D0%B8%D0%BF%D0%B5%D0%B4%D0%B8%D1%8E", 
       "https://ru.wikipedia.org/w/index.php?title=%D0%A1%D0%BB%D1%83%D0%B6%\
D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%96%D1%83%D1%80%D0%BD%D0%B0%D0%BB%D1%8B&type=\
review&page=%D0%97%D0%B0%D0%B3%D0%BB%D0%B0%D0%B2%D0%BD%D0%B0%D1%8F_%D1%81%D1%\
82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0", 
       "http://ru.wikipedia.org/wiki/%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B0%D1%\
8F_%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%B4%D0%B8%D1%8F", 
       "http://ru.wikipedia.org/wiki/%D0%A4%D0%BE%D0%BD%D0%B4_%D0%92%D0%B8%D0%\
BA%D0%B8%D0%BC%D0%B5%D0%B4%D0%B8%D0%B0", 
       "http://ru.wikipedia.org/wiki/%D0%AF%D0%B7%D1%8B%D0%BA%D0%BE%D0%B2%D1%\
8B%D0%B5_%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB%D1%8B_%D0%92%D0%B8%D0%BA%D0%B8%\
D0%BF%D0%B5%D0%B4%D0%B8%D0%B8", 
       "https://ru.wikipedia.org/w/index.php?title=%D0%A1%D0%BB%D1%83%D0%B6%\
D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%96%D1%83%D1%80%D0%BD%D0%B0%D0%BB%D1%8B&type=\
review&page=%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%B4%D0%B8%D1%8F", 
       "http://ru.wikipedia.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%\
B4%D0%B8%D1%8F:%D0%92%D0%9F", 
       "http://ru.wikipedia.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%\
B4%D0%B8%D1%8F:%D0%9A%D0%BE%D0%BD%D1%81%D0%B5%D0%BD%D1%81%D1%83%D1%81", 
       "http://ru.wikipedia.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%\
B4%D0%B8%D1%8F:%D0%A4%D0%BE%D1%80%D1%83%D0%BC/%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%\
D0%BB%D0%B0", 
       "http://ru.wikipedia.org/wiki/%D0%9A%D0%B0%D1%82%D0%B5%D0%B3%D0%BE%D1%\
80%D0%B8%D1%8F:%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%B4%D0%B8%D1%8F:%D0%9F%\
D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0", 
       "http://ru.wikipedia.org/wiki/%D0%A4%D0%B0%D0%B9%D0%BB:OOjs_UI_icon_\
check-constructive.svg", 
       "http://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%\
B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5_%D0%B8%D1%81%D0%BA%D1%83%D1%81%D1%81%D1%82%\
D0%B2%D0%B0", 
       "http://ru.wikipedia.org/wiki/%D0%A4%D0%B0%D0%B9%D0%BB:Definition_of_\
Free_Cultural_Works_logo_notext.svg", 
       "https://ru.wikipedia.org/w/index.php?title=%D0%A1%D0%BB%D1%83%D0%B6%\
D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%96%D1%83%D1%80%D0%BD%D0%B0%D0%BB%D1%8B&type=\
review&page=%D0%A1%D0%B2%D0%BE%D0%B1%D0%BE%D0%B4%D0%BD%D1%8B%D0%B9_%D0%BA%D0%\
BE%D0%BD%D1%82%D0%B5%D0%BD%D1%82", 
       "http://ru.wikipedia.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8", 
       "http://ru.wikipedia.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%\
B4%D0%B8%D1%8F:%D0%9E%D0%BF%D0%B8%D1%81%D0%B0%D0%BD%D0%B8%D0%B5", 
       "http://ru.wikipedia.org/wiki/%D0%A4%D0%B0%D0%B9%D0%BB:10_sharing_book_\
cover_background.jpg", "https://stats.wikimedia.org/#/ru.wikipedia.org", 
       "https://ru.wikipedia.org/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%BF%D0%B5%D0%\
B4%D0%B8%D1%8F:%D0%9F%D0%B0%D1%82%D1%80%D1%83%D0%BB%D0%B8%D1%80%D0%BE%D0%B2%\
D0%B0%D0%BD%D0%B8%D0%B5", 
       "https://ru.wikipedia.org/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%\
BD%D0%B0%D1%8F:%D0%9C%D0%B5%D1%82%D0%BA%D0%B8", 
       "https://ru.wikipedia.org/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%\
BD%D0%B0%D1%8F:%D0%A0%D0%B0%D1%81%D1%88%D0%B8%D1%80%D0%B5%D0%BD%D0%BD%D1%8B%\
D0%B9_%D0%B6%D1%83%D1%80%D0%BD%D0%B0%D0%BB_%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%\
80%D0%BE%D0%BA_%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D0%B9", 
       "https://ru.wikipedia.org/w/index.php?title=%D0%A1%D0%BB%D1%83%D0%B6%\
D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%96%D1%83%D1%80%D0%BD%D0%B0%D0%BB%D1%8B&dir=\
prev&type=review&page=%D0%97%D0%B0%D0%B3%D0%BB%D0%B0%D0%B2%D0%BD%D0%B0%D1%8F_%\
D1%81%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0&user=", 
       "https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Log", 
       "http://wikipedia.org"}, {{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 
       7}, {2, 8}, {2, 9}, {2, 10}, {3, 11}, {3, 12}, {3, 13}, {3, 14}, {4, 
       15}, {4, 16}, {4, 17}, {4, 18}, {4, 19}, {5, 2}, {5, 20}, {5, 21}, {5, 
       22}, {6, 23}, {6, 24}, {6, 25}, {6, 22}, {26, 27}, {26, 28}, {26, 
       29}, {26, 30}, {26, 31}, {27, 32}, {27, 33}, {27, 34}, {27, 35}, {28, 
       36}, {28, 37}, {28, 38}, {28, 35}, {29, 27}, {29, 28}, {29, 39}, {29, 
       35}, {29, 40}, {30, 41}, {30, 42}, {30, 43}, {30, 44}, {30, 45}, {31, 
       46}, {31, 47}, {31, 48}, {31, 49}, {31, 35}, {50, 51}, {50, 52}, {50, 
       53}, {50, 54}, {50, 55}, {51, 56}, {51, 57}, {51, 58}, {51, 59}, {51, 
       60}, {52, 61}, {52, 62}, {52, 63}, {52, 64}, {52, 65}, {53, 66}, {53, 
       67}, {53, 68}, {53, 69}, {53, 70}, {54, 71}, {54, 72}, {54, 73}, {54, 
       74}, {54, 55}, {55, 75}, {55, 76}, {55, 77}, {55, 78}, {55, 79}, {80, 
       81}, {80, 82}, {80, 83}, {80, 84}, {80, 85}, {81, 86}, {81, 87}, {81, 
       88}, {82, 89}, {82, 90}, {82, 91}, {82, 92}, {82, 93}, {83, 94}, {83, 
       95}, {83, 96}, {83, 97}, {83, 98}, {84, 99}, {84, 100}, {84, 101}, {84,
        102}, {84, 103}, {85, 104}, {85, 105}, {85, 106}, {85, 107}, {85, 
       101}, {108, 109}, {108, 110}, {108, 111}, {108, 112}, {108, 113}, {109,
        110}, {109, 114}, {109, 115}, {109, 116}, {109, 117}, {110, 118}, {
       110, 119}, {110, 120}, {110, 121}, {110, 122}, {111, 110}, {111, 
       123}, {111, 124}, {111, 125}, {112, 126}, {112, 127}, {112, 111}, {112,
        128}, {112, 129}, {113, 130}, {113, 131}, {113, 132}, {113, 133}, {
       113, 134}, {135, 1}, {135, 26}, {135, 50}, {135, 80}, {135, 108}}, 
       Null}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
1pqD/wDkMKtD
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.015950981361882357`], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 7}, {2, 8}, {2,
           9}, {2, 10}, {3, 11}, {3, 12}, {3, 13}, {3, 14}, {4, 15}, {4, 
          16}, {4, 17}, {4, 18}, {4, 19}, {5, 2}, {5, 20}, {5, 21}, {5, 22}, {
          6, 22}, {6, 23}, {6, 24}, {6, 25}, {26, 27}, {26, 28}, {26, 29}, {
          26, 30}, {26, 31}, {27, 32}, {27, 33}, {27, 34}, {27, 35}, {28, 
          35}, {28, 36}, {28, 37}, {28, 38}, {29, 27}, {29, 28}, {29, 35}, {
          29, 39}, {29, 40}, {30, 41}, {30, 42}, {30, 43}, {30, 44}, {30, 
          45}, {31, 35}, {31, 46}, {31, 47}, {31, 48}, {31, 49}, {50, 51}, {
          50, 52}, {50, 53}, {50, 54}, {50, 55}, {51, 56}, {51, 57}, {51, 
          58}, {51, 59}, {51, 60}, {52, 61}, {52, 62}, {52, 63}, {52, 64}, {
          52, 65}, {53, 66}, {53, 67}, {53, 68}, {53, 69}, {53, 70}, {54, 
          55}, {54, 71}, {54, 72}, {54, 73}, {54, 74}, {55, 75}, {55, 76}, {
          55, 77}, {55, 78}, {55, 79}, {80, 81}, {80, 82}, {80, 83}, {80, 
          84}, {80, 85}, {81, 86}, {81, 87}, {81, 88}, {82, 89}, {82, 90}, {
          82, 91}, {82, 92}, {82, 93}, {83, 94}, {83, 95}, {83, 96}, {83, 
          97}, {83, 98}, {84, 99}, {84, 100}, {84, 101}, {84, 102}, {84, 
          103}, {85, 101}, {85, 104}, {85, 105}, {85, 106}, {85, 107}, {108, 
          109}, {108, 110}, {108, 111}, {108, 112}, {108, 113}, {109, 110}, {
          109, 114}, {109, 115}, {109, 116}, {109, 117}, {110, 118}, {110, 
          119}, {110, 120}, {110, 121}, {110, 122}, {111, 110}, {111, 123}, {
          111, 124}, {111, 125}, {112, 111}, {112, 126}, {112, 127}, {112, 
          128}, {112, 129}, {113, 130}, {113, 131}, {113, 132}, {113, 133}, {
          113, 134}, {135, 1}, {135, 26}, {135, 50}, {135, 80}, {135, 108}}, 
          0.06776697885145273]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.06776697885145273], DiskBox[2, 0.06776697885145273], 
         DiskBox[3, 0.06776697885145273], DiskBox[4, 0.06776697885145273], 
         DiskBox[5, 0.06776697885145273], DiskBox[6, 0.06776697885145273], 
         DiskBox[7, 0.06776697885145273], DiskBox[8, 0.06776697885145273], 
         DiskBox[9, 0.06776697885145273], DiskBox[10, 0.06776697885145273], 
         DiskBox[11, 0.06776697885145273], DiskBox[12, 0.06776697885145273], 
         DiskBox[13, 0.06776697885145273], DiskBox[14, 0.06776697885145273], 
         DiskBox[15, 0.06776697885145273], DiskBox[16, 0.06776697885145273], 
         DiskBox[17, 0.06776697885145273], DiskBox[18, 0.06776697885145273], 
         DiskBox[19, 0.06776697885145273], DiskBox[20, 0.06776697885145273], 
         DiskBox[21, 0.06776697885145273], DiskBox[22, 0.06776697885145273], 
         DiskBox[23, 0.06776697885145273], DiskBox[24, 0.06776697885145273], 
         DiskBox[25, 0.06776697885145273], DiskBox[26, 0.06776697885145273], 
         DiskBox[27, 0.06776697885145273], DiskBox[28, 0.06776697885145273], 
         DiskBox[29, 0.06776697885145273], DiskBox[30, 0.06776697885145273], 
         DiskBox[31, 0.06776697885145273], DiskBox[32, 0.06776697885145273], 
         DiskBox[33, 0.06776697885145273], DiskBox[34, 0.06776697885145273], 
         DiskBox[35, 0.06776697885145273], DiskBox[36, 0.06776697885145273], 
         DiskBox[37, 0.06776697885145273], DiskBox[38, 0.06776697885145273], 
         DiskBox[39, 0.06776697885145273], DiskBox[40, 0.06776697885145273], 
         DiskBox[41, 0.06776697885145273], DiskBox[42, 0.06776697885145273], 
         DiskBox[43, 0.06776697885145273], DiskBox[44, 0.06776697885145273], 
         DiskBox[45, 0.06776697885145273], DiskBox[46, 0.06776697885145273], 
         DiskBox[47, 0.06776697885145273], DiskBox[48, 0.06776697885145273], 
         DiskBox[49, 0.06776697885145273], DiskBox[50, 0.06776697885145273], 
         DiskBox[51, 0.06776697885145273], DiskBox[52, 0.06776697885145273], 
         DiskBox[53, 0.06776697885145273], DiskBox[54, 0.06776697885145273], 
         DiskBox[55, 0.06776697885145273], DiskBox[56, 0.06776697885145273], 
         DiskBox[57, 0.06776697885145273], DiskBox[58, 0.06776697885145273], 
         DiskBox[59, 0.06776697885145273], DiskBox[60, 0.06776697885145273], 
         DiskBox[61, 0.06776697885145273], DiskBox[62, 0.06776697885145273], 
         DiskBox[63, 0.06776697885145273], DiskBox[64, 0.06776697885145273], 
         DiskBox[65, 0.06776697885145273], DiskBox[66, 0.06776697885145273], 
         DiskBox[67, 0.06776697885145273], DiskBox[68, 0.06776697885145273], 
         DiskBox[69, 0.06776697885145273], DiskBox[70, 0.06776697885145273], 
         DiskBox[71, 0.06776697885145273], DiskBox[72, 0.06776697885145273], 
         DiskBox[73, 0.06776697885145273], DiskBox[74, 0.06776697885145273], 
         DiskBox[75, 0.06776697885145273], DiskBox[76, 0.06776697885145273], 
         DiskBox[77, 0.06776697885145273], DiskBox[78, 0.06776697885145273], 
         DiskBox[79, 0.06776697885145273], DiskBox[80, 0.06776697885145273], 
         DiskBox[81, 0.06776697885145273], DiskBox[82, 0.06776697885145273], 
         DiskBox[83, 0.06776697885145273], DiskBox[84, 0.06776697885145273], 
         DiskBox[85, 0.06776697885145273], DiskBox[86, 0.06776697885145273], 
         DiskBox[87, 0.06776697885145273], DiskBox[88, 0.06776697885145273], 
         DiskBox[89, 0.06776697885145273], DiskBox[90, 0.06776697885145273], 
         DiskBox[91, 0.06776697885145273], DiskBox[92, 0.06776697885145273], 
         DiskBox[93, 0.06776697885145273], DiskBox[94, 0.06776697885145273], 
         DiskBox[95, 0.06776697885145273], DiskBox[96, 0.06776697885145273], 
         DiskBox[97, 0.06776697885145273], DiskBox[98, 0.06776697885145273], 
         DiskBox[99, 0.06776697885145273], DiskBox[100, 0.06776697885145273], 
         DiskBox[101, 0.06776697885145273], DiskBox[102, 0.06776697885145273],
          DiskBox[103, 0.06776697885145273], 
         DiskBox[104, 0.06776697885145273], DiskBox[105, 0.06776697885145273],
          DiskBox[106, 0.06776697885145273], 
         DiskBox[107, 0.06776697885145273], DiskBox[108, 0.06776697885145273],
          DiskBox[109, 0.06776697885145273], 
         DiskBox[110, 0.06776697885145273], DiskBox[111, 0.06776697885145273],
          DiskBox[112, 0.06776697885145273], 
         DiskBox[113, 0.06776697885145273], DiskBox[114, 0.06776697885145273],
          DiskBox[115, 0.06776697885145273], 
         DiskBox[116, 0.06776697885145273], DiskBox[117, 0.06776697885145273],
          DiskBox[118, 0.06776697885145273], 
         DiskBox[119, 0.06776697885145273], DiskBox[120, 0.06776697885145273],
          DiskBox[121, 0.06776697885145273], 
         DiskBox[122, 0.06776697885145273], DiskBox[123, 0.06776697885145273],
          DiskBox[124, 0.06776697885145273], 
         DiskBox[125, 0.06776697885145273], DiskBox[126, 0.06776697885145273],
          DiskBox[127, 0.06776697885145273], 
         DiskBox[128, 0.06776697885145273], DiskBox[129, 0.06776697885145273],
          DiskBox[130, 0.06776697885145273], 
         DiskBox[131, 0.06776697885145273], DiskBox[132, 0.06776697885145273],
          DiskBox[133, 0.06776697885145273], 
         DiskBox[134, 0.06776697885145273], 
         DiskBox[135, 0.06776697885145273]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.828190465486725*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"b99ad26a-50d7-4671-aa37-99de239bcb1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextCases", "[", 
  RowBox[{
   RowBox[{"Import", "[", "\"\<http://nato.int\>\"", "]"}], ",", 
   "\"\<Country\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.828190569209083*^9, 3.828190593101499*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"9d9eec0c-1d7e-4c2e-89f7-cb2e330ab15e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Russia\"\>", ",", "\<\"Afghanistan\"\>", 
   ",", "\<\"Ukraine\"\>", ",", "\<\"Czech Republic\"\>", 
   ",", "\<\"Poland\"\>", ",", "\<\"Turkey\"\>", ",", "\<\"United States\"\>",
    ",", "\<\"Russia\"\>", ",", "\<\"Russian\"\>", ",", "\<\"German\"\>", 
   ",", "\<\"Montenegro\"\>", ",", "\<\"US\"\>", ",", "\<\"Macedonia\"\>", 
   ",", "\<\"Romania\"\>", ",", "\<\"US\"\>", ",", "\<\"US\"\>", 
   ",", "\<\"Kosovo\"\>", ",", "\<\"Belgians\"\>", ",", "\<\"Ukraine\"\>", 
   ",", "\<\"Russia\"\>", ",", "\<\"Ukraine\"\>", ",", "\<\"Ukraine\"\>", 
   ",", "\<\"Russia\"\>", ",", "\<\"Ukraine\"\>", ",", "\<\"Russia\"\>", 
   ",", "\<\"Ukraine\"\>", ",", "\<\"Norway\"\>", 
   ",", "\<\"United Kingdom\"\>", ",", "\<\"US\"\>", ",", "\<\"S\"\>", 
   ",", "\<\"U\"\>", ",", "\<\"S\"\>", ",", "\<\"Slovakia\"\>", 
   ",", "\<\"US\"\>", ",", "\<\"US\"\>", ",", "\<\"Ukraine\"\>", 
   ",", "\<\"US\"\>", ",", "\<\"Georgia\"\>", ",", "\<\"Russia\"\>", 
   ",", "\<\"Afghanistan\"\>", ",", "\<\"Ukraine\"\>", 
   ",", "\<\"Kosovo\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8281905777049847`*^9, 3.828190608873578*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"a934dfca-edd2-4609-91e8-2b46b68cbd4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.828190611275887*^9, 3.828190628311449*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"7553e3c5-e747-4501-a217-90fca82f936c"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Ukraine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2641509433962264],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Russia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1994609164420485],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., -49.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"US\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.23180592991913748`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-7., 41.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Afghanistan\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07008086253369272],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {1., 73.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"United Kingdom\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {0., -76.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Kosovo\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07008086253369272],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {66., 38.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Czech Republic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[1, 0.75, 0]], {0., -87.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"Montenegro\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {62., 51.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"United States\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-79., 36.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Macedonia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-72., 47.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Belgians\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {0., 87.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Georgia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {86., -30.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Norway\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-73., 59.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Romania\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {45., 86.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Slovakia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-43., 87.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"German\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-63., -75.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Turkey\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {60., -76.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Russian\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {75., 62.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Poland\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {93., 22.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"S\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07008086253369272],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-20., -6.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"U\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03773584905660377],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-18., -20.},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-131.5, 133.5}, {-94.5, 93.5}}]], "Output",
 CellChangeTimes->{3.828190629826262*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"579ce9fc-69fa-42fd-ad84-1cab72d68265"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["45. Datasets", "Section",
 CellChangeTimes->{{3.8281908531883163`*^9, 
  3.828190854770289*^9}},ExpressionUUID->"4e40bc22-35b1-42fd-a091-\
82a58372505b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "=", 
  RowBox[{
  "CloudGet", "[", "\"\<http://wolfr.am/7FxLgPm5\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.82819085601968*^9, 3.82819085603526*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"bc857d82-64e3-4e53-a5a6-f5419eb3ecc7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Mercury" -> 
       Association[
        "Mass" -> Quantity[3.30104`6.*^23, "Kilograms"], "Radius" -> 
         Quantity[1515.9592977014236856756`5., "Miles"], "Moons" -> 
         Association[]], "Venus" -> 
       Association[
        "Mass" -> Quantity[4.867320000000000000000001`6.*^24, "Kilograms"], 
         "Radius" -> Quantity[3760.4452497415095840294`5., "Miles"], "Moons" -> 
         Association[]], "Earth" -> 
       Association[
        "Mass" -> Quantity[5.9721986`8.*^24, "Kilograms"], "Radius" -> 
         Quantity[3958.7608367135926191043`7., "Miles"], "Moons" -> 
         Association[
          "Moon" -> Association[
            "Mass" -> Quantity[
              7.3459006322855173653772`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1079.6324465123677722102`5., "Miles"]]]], 
       "Mars" -> Association[
        "Mass" -> Quantity[6.41693`6.*^23, "Kilograms"], "Radius" -> 
         Quantity[2106.1376560884434900182`5., "Miles"], "Moons" -> 
         Association[
          "Deimos" -> 
           Association[
            "Mass" -> Quantity[
              1.468340774924336`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[3.8525013918714706117`2., "Miles"]], 
           "Phobos" -> 
           Association[
            "Mass" -> Quantity[
              1.0724880884600402`3.9586073148417724*^16, "Kilograms"], 
             "Radius" -> Quantity[6.8972202338344070631`3., "Miles"]]]], 
       "Jupiter" -> 
       Association[
        "Mass" -> Quantity[1.89813`6.*^27, "Kilograms"], "Radius" -> 
         Quantity[43440.6814205042551499244`5., "Miles"], "Moons" -> 
         Association[
          "Adrastea" -> 
           Association[
            "Mass" -> Quantity[
              7.491534565940487`0.9999565727231415*^15, "Kilograms"], 
             "Radius" -> Quantity[5.0952437763461385509`2., "Miles"]], 
           "Aitne" -> Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.9320567883560009545`2., "Miles"]], "Amalthea" -> 
           Association[
            "Mass" -> Quantity[
              2.067663540199574478`2.995678626217367*^18, "Kilograms"], 
             "Radius" -> Quantity[51.8534259922055197645`4., "Miles"]], 
           "Ananke" -> 
           Association[
            "Mass" -> Quantity[
              2.9966138263761948`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[8.6991966913226755739`2., "Miles"]], 
           "Aoede" -> Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]], "Arche" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.9320567883560009545`2., "Miles"]], "Autonoe" -> 
           Association[
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "Callirrhoe" -> 
           Association[
            "Mass" -> Quantity[
              8.69018009649097`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.6718961266205360693`2., "Miles"]], "Callisto" -> 
           Association[
            "Mass" -> Quantity[
              1.07567783404752629528633`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[1497.6909846496460669689`5., "Miles"]], 
           "Carme" -> Association[
            "Mass" -> Quantity[
              1.31851008360552575`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[14.2915374214586813013`2., "Miles"]], 
           "Carpo" -> Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Chaldene" -> 
           Association[
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.1806052652509345422`2., "Miles"]], "Cyllene" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "Elara" -> 
           Association[
            "Mass" -> Quantity[
              8.6901800964909652`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[26.7189612662053606936`2., "Miles"]], 
           "Erinome" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.9941939075797343514`2., "Miles"]], "Euanthe" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.9320567883560009545`2., "Miles"]], "Eukelade" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]], "Euporie" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]], "Europa" -> 
           Association[
            "Mass" -> Quantity[
              4.7986859848371340385365`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[969.8361568440308597789`5., "Miles"]], 
           "Eurydome" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.9320567883560009545`2., "Miles"]], "Ganymede" -> 
           Association[
            "Mass" -> Quantity[
              1.48150100386563183602529`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[1634.9518810148731408574`5., "Miles"]], 
           "Harpalyke" -> 
           Association[
            "Mass" -> Quantity[
              1.19864553055047`0.9999565727231415*^14, "Kilograms"], "Radius" -> 
             Quantity[1.3670166229221347332`2., "Miles"]], "Hegemone" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Helike" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]], "Hermippe" -> 
           Association[
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "Herse" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "Himalia" -> 
           Association[
            "Mass" -> Quantity[
              6.742381109346438525`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[52.8165513401733874181`2., "Miles"]], "Io" -> 
           Association[
            "Mass" -> Quantity[
              8.9297833448203530011087`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1131.8897637795275590551`5., "Miles"]], 
           "Iocaste" -> 
           Association[
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[1.6155650998170683209`2., "Miles"]], "Isonoe" -> 
           Association[
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.1806052652509345422`2., "Miles"]], "Kale" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]], "Kallichore" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "Kalyke" -> 
           Association[
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[1.6155650998170683209`2., "Miles"]], "Kore" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "Leda" -> 
           Association[
            "Mass" -> Quantity[
              1.0937640466273112`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[6.2137119223733396961`2., "Miles"]], 
           "Lysithea" -> 
           Association[
            "Mass" -> Quantity[
              6.2928890353900092`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[11.1846814602720114531`2., "Miles"]], 
           "Megaclite" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[1.677702219040801718`2., "Miles"]], "Metis" -> 
           Association[
            "Mass" -> Quantity[
              1.19864553055047796`0.9999565727231415*^17, "Kilograms"], 
             "Radius" -> Quantity[13.3594806331026803464`3., "Miles"]], 
           "Mneme" -> Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "Orthosie" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]], "Pasiphae" -> 
           Association[
            "Mass" -> Quantity[
              2.9966138263761949`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[18.6411357671200190886`2., "Miles"]], 
           "Pasithee" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]], "Praxidike" -> 
           Association[
            "Mass" -> Quantity[
              4.34509004824548`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1126620536069354967`2., "Miles"]], "S/2000 J11" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "S/2003 J10" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "S/2003 J12" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]], "S/2003 J15" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "S/2003 J16" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "S/2003 J18" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "S/2003 J19" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "S/2003 J2" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "S/2003 J23" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "S/2003 J3" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "S/2003 J4" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "S/2003 J5" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]], "S/2003 J9" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]], "S/2010 J1" -> 
           Association[
            "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]], "S/2010 J2" -> 
           Association[
            "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]], "S/2011 J1" -> 
           Association[
            "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]], "S/2011 J2" -> 
           Association[
            "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]], "S/2016 J1" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.3106855961186669848`2., "Miles"]], "S/2017 J1" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]], "Sinope" -> 
           Association[
            "Mass" -> Quantity[
              7.4915345659404873`1.9995659225206786*^16, "Kilograms"], 
             "Radius" -> Quantity[11.8060526525093454228`2., "Miles"]], 
           "Sponde" -> 
           Association[
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]], "Taygete" -> 
           Association[
            "Mass" -> Quantity[
              1.6481376045069`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[1.553427980593334924`2., "Miles"]], "Thebe" -> 
           Association[
            "Mass" -> Quantity[
              1.49830691318809745`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[30.6335997773005647022`3., "Miles"]], 
           "Thelxinoe" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "Themisto" -> 
           Association[
            "Mass" -> Quantity[
              6.89221180066526`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]], "Thyone" -> 
           Association[
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]]]], "Saturn" -> 
       Association[
        "Mass" -> Quantity[5.68319`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[36183.6872663644317187624`5., "Miles"], "Moons" -> 
         Association[
          "Aegaeon" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.1553427980593334919`2., "Miles"]], "Aegir" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Albiorix" -> 
           Association[
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[9.941939075797343514`2., "Miles"]], "Anthe" -> 
           Association[
            "Mass" -> Quantity[5.`1.*^12, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`1., "Miles"]], "Atlas" -> 
           Association[
            "Mass" -> Quantity[
              2.097629678463337`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[6.2137119223733396961`2., "Miles"]], 
           "Bebhionn" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Bergelmir" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Bestla" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Calypso" -> 
           Association[
            "Mass" -> Quantity[
              3.595936591651433`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[5.9030263262546727113`2., "Miles"]], 
           "Daphnis" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4233476497256024816`2., "Miles"]], "Dione" -> 
           Association[
            "Mass" -> Quantity[
              1.095457133439213688532`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[349.5212956335003579097`4., "Miles"]], 
           "Enceladus" -> 
           Association[
            "Mass" -> Quantity[
              1.08027928440861826137`3.9586073148417764*^20, "Kilograms"], 
             "Radius" -> Quantity[156.7719518014793605344`4., "Miles"]], 
           "Epimetheus" -> 
           Association[
            "Mass" -> Quantity[
              5.25905726529022205`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[36.2259405074365704286`3., "Miles"]], 
           "Erriapo" -> 
           Association[
            "Mass" -> Quantity[
              7.64136525725929`1.9995659225206914*^14, "Kilograms"], "Radius" -> 
             Quantity[3.1068559611866698482`1., "Miles"]], "Farbauti" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Fenrir" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "Fornjot" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Greip" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Hati" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Helene" -> 
           Association[
            "Mass" -> Quantity[
              2.5471217524197656`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[9.941939075797343514`2., "Miles"]], 
           "Hyperion" -> 
           Association[
            "Mass" -> Quantity[
              5.543735578795960565`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[82.6423685675654179591`4., "Miles"]], 
           "Hyrrokkin" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]], "Iapetus" -> 
           Association[
            "Mass" -> Quantity[
              1.805459830391657427108`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[456.3971406983218006841`4., "Miles"]], 
           "Ijiraq" -> 
           Association[
            "Mass" -> Quantity[
              1.198645530550478`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[3.7282271534240038177`1., "Miles"]], 
           "Janus" -> Association[
            "Mass" -> Quantity[
              1.896856552096131371`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[56.1719557782549908535`3., "Miles"]], 
           "Jarnsaxa" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Kari" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Kiviuq" -> 
           Association[
            "Mass" -> Quantity[
              3.296275209013815`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[4.970969537898671757`1., "Miles"]], "Loge" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Methone" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.9941939075797343514`2., "Miles"]], "Mimas" -> 
           Association[
            "Mass" -> Quantity[
              3.7907164903658865482`3.9586073148417764*^19, "Kilograms"], 
             "Radius" -> Quantity[123.5285930167819931599`4., "Miles"]], 
           "Mundilfari" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]], "Narvi" -> 
           Association[
            "Mass" -> Quantity[
              3.44610590033262`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]], "Paaliaq" -> 
           Association[
            "Mass" -> Quantity[
              8.240688022534537`1.999565922520683*^15, "Kilograms"], "Radius" -> 
             Quantity[6.8350831146106736658`3., "Miles"]], "Pallene" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.6155650998170683209`2., "Miles"]], "Pan" -> 
           Association[
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[7.9535512606378748103`3., "Miles"]], 
           "Pandora" -> 
           Association[
            "Mass" -> Quantity[
              1.49081537862215657`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[25.2276704048357591665`3., "Miles"]], 
           "Phoebe" -> 
           Association[
            "Mass" -> Quantity[
              8.287135536843366995`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[66.2381690924998011613`4., "Miles"]], 
           "Polydeuces" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.7456454306848007635`2., "Miles"]], "Prometheus" -> 
           Association[
            "Mass" -> Quantity[
              1.86689041383236942`3.9586073148417764*^17, "Kilograms"], 
             "Radius" -> Quantity[29.0801717967072297782`3., "Miles"]], 
           "Rhea" -> Association[
            "Mass" -> Quantity[
              2.308441461148901741032`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[475.0382764654418197725`4., "Miles"]], 
           "S/2004 S12" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "S/2004 S13" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "S/2004 S17" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]], "S/2004 S7" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "S/2006 S1" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "S/2006 S3" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "S/2007 S2" -> 
           Association[
            "Mass" -> Quantity[1.5`2.*^14, "Kilograms"], "Radius" -> 
             Quantity[1.8641135767120019088`1., "Miles"]], "S/2007 S3" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.553427980593334924`2., "Miles"]], "S/2009 S1" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Missing["NotAvailable"]], "Siarnaq" -> 
           Association[
            "Mass" -> Quantity[
              3.8955979742890535`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[12.4274238447466793923`2., "Miles"]], 
           "Skathi" -> 
           Association[
            "Mass" -> Quantity[
              3.146444517695`1.9995659225206786*^14, "Kilograms"], "Radius" -> 
             Quantity[2.4854847689493358785`1., "Miles"]], "Skoll" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Surtur" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]], "Suttungr" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]], "Tarqeq" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]], "Tarvos" -> 
           Association[
            "Mass" -> Quantity[
              2.696952443738576`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[4.6602839417800047721`2., "Miles"]], 
           "Telesto" -> 
           Association[
            "Mass" -> Quantity[
              7.191873183302868`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[7.4564543068480076355`2., "Miles"]], 
           "Tethys" -> 
           Association[
            "Mass" -> Quantity[
              6.17452278924814959099`4.6989700043360205*^20, "Kilograms"], 
             "Radius" -> Quantity[333.2413703968822079058`4., "Miles"]], 
           "Thrymr" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]], "Titan" -> 
           Association[
            "Mass" -> Quantity[
              1.34520841449162446435527`4.958607314841778*^23, "Kilograms"], 
             "Radius" -> Quantity[1600.3415056072536387497`5., "Miles"]], 
           "Ymir" -> Association[
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[5.5923407301360057265`1., "Miles"]]]], 
       "Uranus" -> 
       Association[
        "Mass" -> Quantity[8.68103`6.*^25, "Kilograms"], "Radius" -> 
         Quantity[15759.2161775232641374374`5., "Miles"], "Moons" -> 
         Association[
          "Ariel" -> Association[
            "Mass" -> Quantity[
              1.352971142608851997243`2.9956786262173587*^21, "Kilograms"], 
             "Radius" -> Quantity[359.711783186192635012`4., "Miles"]], 
           "Belinda" -> 
           Association[
            "Mass" -> Quantity[
              3.56597045338767194`2.995678626217367*^17, "Kilograms"], 
             "Radius" -> Quantity[25.0412590471645589755`3., "Miles"]], 
           "Bianca" -> 
           Association[
            "Mass" -> Quantity[
              9.2895028617662042`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[15.9692396404994830191`3., "Miles"]], 
           "Caliban" -> 
           Association[
            "Mass" -> Quantity[
              7.34170387462167751`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[30.4471884196293645112`2., "Miles"]], 
           "Cordelia" -> 
           Association[
            "Mass" -> Quantity[
              4.4949207395642923`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[12.4895609639704127894`3., "Miles"]], 
           "Cressida" -> 
           Association[
            "Mass" -> Quantity[
              3.43112283120074311`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[24.7305734510458919908`3., "Miles"]], 
           "Cupid" -> Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.1068559611866698482`2., "Miles"]], "Desdemona" -> 
           Association[
            "Mass" -> Quantity[
              1.78298522669383596`2.995678626217367*^17, "Kilograms"], 
             "Radius" -> Quantity[19.8838781515946870277`3., "Miles"]], 
           "Ferdinand" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[6.2137119223733396961`2., "Miles"]], "Francisco" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[6.8350831146106736658`2., "Miles"]], "Juliet" -> 
           Association[
            "Mass" -> Quantity[
              5.57370171705972251`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[29.0801717967072297782`3., "Miles"]], "Mab" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.1068559611866698482`2., "Miles"]], "Margaret" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[6.2137119223733396961`2., "Miles"]], "Miranda" -> 
           Association[
            "Mass" -> Quantity[
              6.5925504180276287794`1.9995659225206872*^19, "Kilograms"], 
             "Radius" -> Quantity[146.5193271295633500358`4., "Miles"]], 
           "Oberon" -> 
           Association[
            "Mass" -> Quantity[
              3.013095202421263971712`3.9586073148417764*^21, "Kilograms"], 
             "Radius" -> Quantity[473.1120257695060844667`4., "Miles"]], 
           "Ophelia" -> 
           Association[
            "Mass" -> Quantity[
              5.3939048874771508`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[13.2973435138789469498`3., "Miles"]], 
           "Perdita" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[6.2137119223733396961`2., "Miles"]], "Portia" -> 
           Association[
            "Mass" -> Quantity[
              1.681100356597045339`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[42.0046925952437763461`3., "Miles"]], 
           "Prospero" -> 
           Association[
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[9.3205678835600095443`2., "Miles"]], "Puck" -> 
           Association[
            "Mass" -> Quantity[
              2.893230649366216176`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[50.3310665712240515389`2., "Miles"]], 
           "Rosalind" -> 
           Association[
            "Mass" -> Quantity[
              2.54712175241976567`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[22.3693629205440229062`2., "Miles"]], 
           "Setebos" -> 
           Association[
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[9.3205678835600095443`2., "Miles"]], 
           "Stephano" -> 
           Association[
            "Mass" -> Quantity[
              5.99322765275239`0.9999565727231373*^15, "Kilograms"], "Radius" -> 
             Quantity[6.2137119223733396961`2., "Miles"]], "Sycorax" -> 
           Association[
            "Mass" -> Quantity[
              5.378921818345269844`2.9956786262173627*^18, "Kilograms"], 
             "Radius" -> Quantity[59.0302632625467271138`2., "Miles"]], 
           "Titania" -> 
           Association[
            "Mass" -> Quantity[
              3.525516166731593299572`3.9586073148417764*^21, "Kilograms"], 
             "Radius" -> Quantity[490.1997335560327686312`4., "Miles"]], 
           "Trinculo" -> 
           Association[
            "Mass" -> Quantity[
              7.49153456594048`0.9999565727231373*^14, "Kilograms"], "Radius" -> 
             Quantity[3.1068559611866698482`1., "Miles"]], "Umbriel" -> 
           Association[
            "Mass" -> Quantity[
              1.171676006113092205807`2.9956786262173587*^21, "Kilograms"], 
             "Radius" -> Quantity[363.3157361011691720354`4., "Miles"]]]], 
       "Neptune" -> 
       Association[
        "Mass" -> Quantity[1.0241`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[15299.4014952676369999204`5., "Miles"], "Moons" -> 
         Association[
          "Despina" -> 
           Association[
            "Mass" -> Quantity[
              2.09762967846333643`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[46.6028394178000477213`2., "Miles"]], 
           "Galatea" -> 
           Association[
            "Mass" -> Quantity[
              3.745767282970243625`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[54.6806649168853893264`2., "Miles"]], 
           "Halimede" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[18.6411357671200190886`2., "Miles"]], "Laomedeia" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[12.4274238447466793923`2., "Miles"]], "Larissa" -> 
           Association[
            "Mass" -> Quantity[
              4.944412813520721585`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[60.2730056470213950529`2., "Miles"]], 
           "Naiad" -> Association[
            "Mass" -> Quantity[
              1.94779898714452669`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[20.5052493438320209974`2., "Miles"]], 
           "Nereid" -> 
           Association[
            "Mass" -> Quantity[
              3.0865122411674807466`2.9956786262173587*^19, "Kilograms"], 
             "Radius" -> Quantity[105.633102680346774835`3., "Miles"]], 
           "Neso" -> Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[18.6411357671200190886`2., "Miles"]], "Proteus" -> 
           Association[
            "Mass" -> Quantity[
              5.0343112283120074311`2.995678626217367*^19, "Kilograms"], 
             "Radius" -> Quantity[130.4879503698401336197`3., "Miles"]], 
           "Psamathe" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[12.4274238447466793923`2., "Miles"]], "S/2004 N1" -> 
           Association[
            "Mass" -> Quantity[5.`2.*^15, "Kilograms"], "Radius" -> Quantity[
               
               Interval[{
                4.5448630000795355123`1.961079694632928, 
                 6.6398184601924759406`2.0288050906515442}], "Miles"]], "Sao" -> 
           Association[
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[12.4274238447466793923`2., "Miles"]], "Thalassa" -> 
           Association[
            "Mass" -> Quantity[
              3.74576728297024363`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[25.4762188817306927544`2., "Miles"]], 
           "Triton" -> 
           Association[
            "Mass" -> Quantity[
              2.139432441341284348686`4.6989700043360205*^22, "Kilograms"], 
             "Radius" -> Quantity[840.9637715740077944802`5., "Miles"]]]]], 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> 
        Association[{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[0]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.20000000000002], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]]], 
           DirectedInfinity[1], 3, {All}]]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Miles"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Miles"]]}], TypeSystem`AnyLength]}], 8], "Meta" -> 
     Association["ID" -> 74754014623759], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> 
        Association[{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[0]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.20000000000002], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[67.20000000000002], 
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[
                   Association[
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]]], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]]], 
           DirectedInfinity[1], 3, {All}]]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Miles"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Miles"]]}], TypeSystem`AnyLength]}], 8], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 8, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 8, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Radius"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Radius"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moons", 
                  Style[
                  "Moons", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons", All, "Mass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons", All, "Radius"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Radius"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.30104`6.*^23", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1515.9592977014236856756`5", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"], 
                    Key["Moons"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.867320000000000000000001`6.*^24", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3760.4452497415095840294`5", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"], 
                    Key["Moons"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.9721986`8.*^24", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3958.7608367135926191043`7", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moon", 
                  Style[
                  "Moon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"], 
                    Key["Moons"], 
                    Key["Moon"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "7.3459006322855173653772`4.995678626217362*^22", 
                   "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1079.6324465123677722102`5", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.41693`6.*^23", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2106.1376560884434900182`5", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deimos", 
                  Style[
                  "Deimos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"], 
                    Key["Moons"], 
                    Key["Deimos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.468340774924336`1.9995659225206786*^15", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.8525013918714706117`2", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Phobos", 
                  Style[
                  "Phobos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"], 
                    Key["Moons"], 
                    Key["Phobos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.0724880884600402`3.9586073148417724*^16", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.8972202338344070631`3", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.89813`6.*^27", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43440.6814205042551499244`5", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Adrastea", 
                  Style[
                  "Adrastea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"], 
                    Key["Moons"], 
                    Key["Adrastea"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "7.491534565940487`0.9999565727231415*^15", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.0952437763461385509`2", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aitne", 
                  Style[
                  "Aitne", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"], 
                    Key["Moons"], 
                    Key["Aitne"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Aitne"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.4949207395643`0.9999565727231415*^13", "\"kg\""}],
                  FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Aitne"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.9320567883560009545`2", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Aitne"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["69 total \:203a ", ""], 
                  Style[
                   Superscript["69 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.68319`6.*^26", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"36183.6872663644317187624`5", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aegaeon", 
                  Style[
                  "Aegaeon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"], 
                    Key["Moons"], 
                    Key["Aegaeon"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegaeon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegaeon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.1553427980593334919`2", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegaeon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aegir", 
                  Style[
                  "Aegir", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"], 
                    Key["Moons"], 
                    Key["Aegir"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegir"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegir"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.8641135767120019088`2", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegir"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["62 total \:203a ", ""], 
                  Style[
                   Superscript["62 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"8.68103`6.*^25", "\"kg\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"15759.2161775232641374374`5", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ariel", 
                  Style[
                  "Ariel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"], 
                    Key["Moons"], 
                    Key["Ariel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ariel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "1.352971142608851997243`2.9956786262173587*^21", 
                   "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ariel"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"359.711783186192635012`4", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ariel"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Belinda", 
                  Style[
                  "Belinda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"], 
                    Key["Moons"], 
                    Key["Belinda"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Belinda"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "3.56597045338767194`2.995678626217367*^17", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Belinda"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"25.0412590471645589755`3", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Belinda"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["27 total \:203a ", ""], 
                  Style[
                   Superscript["27 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.0241`6.*^26", "\"kg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"15299.4014952676369999204`5", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Despina", 
                  Style[
                  "Despina", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"], 
                    Key["Moons"], 
                    Key["Despina"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Despina"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "2.09762967846333643`1.9995659225206872*^18", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Despina"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"46.6028394178000477213`2", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Despina"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Galatea", 
                  Style[
                  "Galatea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"], 
                    Key["Moons"], 
                    Key["Galatea"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Galatea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "3.745767282970243625`1.9995659225206872*^18", "\"kg\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Galatea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"54.6806649168853893264`2", "\"mi\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Galatea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["14 total \:203a ", ""], 
                  Style[
                   Superscript["14 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{572., {241.1328125, 246.8671875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{572., {241.1328125, 246.8671875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.828190858023121*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"322dd0b9-7976-443b-98d1-6332efbe2230"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{"Normal", "[", 
   RowBox[{"planets", "[", 
    RowBox[{"All", ",", "\"\<Mass\>\""}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828191239359077*^9, 3.828191263207925*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"9e7b9e55-680a-41a6-91e0-0b43d6d2379f"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Jupiter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.29535864978902954`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Saturn\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11796322819173177`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {13., -38.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Neptune\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05581144611068762],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-26., 26.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Mercury\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04219409282700422],
     FontColor->RGBColor[1, 0.75, 0]], {0., 37.}, Center, Automatic], InsetBox[
    StyleBox["\<\"Uranus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05373046215259781],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., 49.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Venus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04279935278138721],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {39., 33.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Earth\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.042946742451844766`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-35., 37.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Mars\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.042235658479581974`],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {0., -55.}, Center, 
    Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-118.5, 118.5}, {-61.5, 54.5}}]], "Output",
 CellChangeTimes->{{3.828191244390369*^9, 3.828191263757259*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"730379cc-b52f-4ea1-aed2-bffe8298742d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["46. Writing Good Code", "Section",
 CellChangeTimes->{{3.828192284537897*^9, 
  3.82819228730205*^9}},ExpressionUUID->"6670d28a-1caa-4ef0-9844-\
b6b118b106c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "i"}], "}"}], ",", 
   RowBox[{
    RowBox[{"a", "=", "0"}], ";", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", "1000"}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{"a", "=", 
       RowBox[{
        RowBox[{"i", "*", 
         RowBox[{"(", 
          RowBox[{"i", "+", "1"}], ")"}]}], "+", "a"}]}]}], "]"}], ";", 
    "a"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828192292407468*^9, 3.828192320577415*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"30fab903-2454-427b-9edf-3f1e572a4239"],

Cell[BoxData["334334000"], "Output",
 CellChangeTimes->{3.828192321580804*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"a93c7982-dbeb-457c-80d4-75cd4390847c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#1", "+", 
      RowBox[{"#2", "*", 
       RowBox[{"(", 
        RowBox[{"#2", "+", "1"}], ")"}]}]}], ")"}], "&"}], ",", "0", ",", 
   RowBox[{"Range", "[", "1000", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828192615021644*^9, 3.828192639156147*^9}, {
  3.828192676092256*^9, 3.828192744191258*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"bcbc7729-0be0-4d72-b211-bf5edfa86229"],

Cell[BoxData["334334000"], "Output",
 CellChangeTimes->{{3.8281927412239923`*^9, 3.828192744586638*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"89dbbaec-92fb-4343-aecb-fe00e3b14268"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ranges", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SortBy", "[", 
      RowBox[{
       RowBox[{"Range", "[", "n", "]"}], ",", 
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "&"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "200"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.828193180834281*^9, 3.82819320436478*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"67ca4b40-3241-499b-9bc3-b5861f4e35c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"Timing", "[", 
      RowBox[{"Sort", "[", "#", "]"}], "]"}], "]"}], "&"}], "/@", "ranges"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8281932117863283`*^9, 3.828193248985655*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"5a16d383-9931-493d-9c94-b9abf7015f64"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd1M1LlFEUx/FDELQ0aNHCxVOEiVhkL/ZmM1cnzbQXZ9RxntGcx9HRcRXR
tsVZtmnnH3Bx21ranlUUtGgRQYvoYkKEBLUqXGV0N/criHz83d85z51h5lT7
ca1zRETeHP7++/v/52f5XKV3f3f4oBT/4eb2ep48HfgUfSz6bXQPfMK9+LHj
f79+H30y2qJ74Qw+jf4ZzO+D++EBeBDzz8MXsG8Ivoh5l+DL8BX0h5Ffha/h
/HX4BnwTHoFvYX4JeRl26Xl1yEfdr+7X5zt/PsR8FPPH0vM6lp6XCuZXMP82
+rCMIx/H/AnkE8jvIIdlEvkk+ndxf1im0J9CPo3+NPbfQw7LfeSwPEAOy0Pk
sMykdrDOpJ9/Qy5V9GGtol/F/Wtp7mCFrYb9s+jPYj9yg2UOfVhhg2UefVhh
g6WO16/uXrVK+dDS59ivow/LQnrewbqAPiwN9Bt4/kZ8v0LsI5fclV++2/r4
ZTf28/S85tifp/ukideviedvYj8si6kdrIvpPINlCfeHFTZYHqEPK2ywLKO/
jOdHbrC0cP9W+n4ockMuRZpnBd5P5AWssIcN8wIsK9i/gv1wASv6HjY4oC/t
1Bns2rh/O35e9+J+2OO8IQ+YL6tpnsEOLmBdTed55AYHWNZw/zXshwtYYQ8b
HGDp4P4dt9138Gzr+Le4H3kBK+zRNzjgvKynebYev4++x/3IC1hhDxscYNlI
92Wwg4sN7Ic9bHCApYv7w66L/bDCHjY4wLLpjm6f7dQq+6W/KfJVVQ==
      
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 200.}, {0, 0.000025}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.828193237009397*^9, 3.8281932599027567`*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"06bf8616-82cc-418a-b6ad-13823b1d4342"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["47. Debugging Your Code", "Section",
 CellChangeTimes->{{3.828193307635746*^9, 
  3.828193311965757*^9}},ExpressionUUID->"cc4fd9ca-4563-4dee-99e8-\
98a6533b6cee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Counts", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"WordList", "[", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "[", "#", "]"}], "\[GreaterEqual]", "2"}], 
        "&"}]}], "]"}]}], "]"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.828193357671851*^9, 3.828193379046647*^9}, {
  3.828193499011758*^9, 3.828193517898576*^9}, {3.828193566184183*^9, 
  3.828193576187031*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"f4006e63-72b1-4c7b-b750-2f15edc6d85e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"aa\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"ab\"\>", "\[Rule]", "170"}], ",", 
   RowBox[{"\<\"ac\"\>", "\[Rule]", "217"}], ",", 
   RowBox[{"\<\"ad\"\>", "\[Rule]", "191"}], ",", 
   RowBox[{"\<\"ae\"\>", "\[Rule]", "26"}], ",", 
   RowBox[{"\<\"af\"\>", "\[Rule]", "72"}], ",", 
   RowBox[{"\<\"ag\"\>", "\[Rule]", "81"}], ",", 
   RowBox[{"\<\"ah\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"ai\"\>", "\[Rule]", "55"}], ",", 
   RowBox[{"\<\"AI\"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.828193518219796*^9, {3.82819356707592*^9, 3.828193576747694*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"65135de1-d852-4ce9-b868-19c4e70e32ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Reap", "[", 
    RowBox[{"Fold", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"10", 
         RowBox[{"Sow", "[", "#1", "]"}]}], "+", "#2"}], "&"}], ",", 
      RowBox[{"Range", "[", "5", "]"}]}], "]"}], "]"}], "//", "Last"}], "//", 
  "Flatten"}]], "Input",
 CellChangeTimes->{{3.8281935840015182`*^9, 3.8281936081567993`*^9}, {
  3.8281936605312843`*^9, 3.8281936802283916`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"47e23568-e67e-4569-ae1c-04c17fa937cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "12", ",", "123", ",", "1234"}], "}"}]], "Output",
 CellChangeTimes->{
  3.828193608642613*^9, {3.828193661403832*^9, 3.828193680594572*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"58dde63f-c920-4ae3-a9dd-0347910a3c81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Reap", "@", 
    RowBox[{"Nest", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "#", "]"}], ",", 
         RowBox[{
          RowBox[{"Sow", "[", "#", "]"}], "/", "2"}], ",", 
         RowBox[{
          RowBox[{"3", "#"}], "+", "1"}]}], "]"}], "&"}], ",", "1000", ",", 
      "20"}], "]"}]}], "//", "Last"}], "//", "Flatten"}]], "Input",
 CellChangeTimes->{{3.828193791189034*^9, 3.828193828248753*^9}, {
  3.8281938638063297`*^9, 3.828193871365532*^9}, {3.828193918168508*^9, 
  3.8281939335394907`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"03e24cca-246f-4084-bc62-aae45848c707"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1000", ",", "500", ",", "250", ",", "376", ",", "188", ",", "94", ",", 
   "142", ",", "214", ",", "322", ",", "484", ",", "242", ",", "364", ",", 
   "182"}], "}"}]], "Output",
 CellChangeTimes->{{3.8281938034980373`*^9, 3.8281938286152763`*^9}, 
   3.8281938652039547`*^9, {3.828193923622406*^9, 3.82819393386134*^9}},
 CellLabel->
  "Out[101]=",ExpressionUUID->"391bd9b2-d8d4-4a5f-9084-5e20a5975ebb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1003},
WindowMargins->{{Automatic, 0}, {Automatic, 37}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.2 for Linux x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7658bbc4-7db4-49d9-9e20-206982c5b2fe"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 159, 3, 98, "Title",ExpressionUUID->"c7ca2fb0-b882-4af8-a6c9-c7471bc5a2e1"],
Cell[CellGroupData[{
Cell[764, 29, 216, 4, 67, "Section",ExpressionUUID->"9b904985-492d-4519-a808-fbdd897c10f7"],
Cell[983, 35, 429, 12, 30, "Input",ExpressionUUID->"a76de33f-a02c-4664-aa84-33a6fa163adb"],
Cell[1415, 49, 54773, 1217, 181, "Input",ExpressionUUID->"4127bde4-d98d-4172-a61c-cdc5b733754a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56225, 1271, 225, 4, 67, "Section",ExpressionUUID->"83359d99-dca2-45a6-a205-74555312e3bc"],
Cell[CellGroupData[{
Cell[56475, 1279, 505, 12, 30, "Input",ExpressionUUID->"a3574409-fe27-426c-850b-59f0803e116b"],
Cell[56983, 1293, 896, 20, 109, "Output",ExpressionUUID->"e571bf28-d2f3-4f41-b06b-b020a539c1a8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57928, 1319, 174, 3, 67, "Section",ExpressionUUID->"13c2da56-cacf-4c05-a304-27df5d2933ce"],
Cell[CellGroupData[{
Cell[58127, 1326, 922, 26, 75, "Input",ExpressionUUID->"955f5044-835e-415c-ad7a-2c98361b529b"],
Cell[59052, 1354, 2214, 45, 549, "Output",ExpressionUUID->"edd1d297-5768-466f-9cda-beb649ad0aed"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61315, 1405, 202, 4, 67, "Section",ExpressionUUID->"563a6215-558e-4d4d-924d-e5be27d218cf"],
Cell[CellGroupData[{
Cell[61542, 1413, 2524, 52, 41, "Input",ExpressionUUID->"67bddb89-eced-47a3-a435-24a90c2314d9"],
Cell[64069, 1467, 6227, 108, 372, "Output",ExpressionUUID->"b14b733c-0abb-4f86-955f-5654c7e7ecda"]
}, Open  ]],
Cell[70311, 1578, 154, 3, 30, "Input",ExpressionUUID->"cce5b4f6-17f7-4297-8e48-6c7e90f348be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70502, 1586, 214, 4, 67, "Section",ExpressionUUID->"e3c4f93b-05d8-45c5-9c5e-aa78e653692f"],
Cell[CellGroupData[{
Cell[70741, 1594, 385, 8, 30, "Input",ExpressionUUID->"e8d22223-268d-48e3-9e59-ff5fd9680b81"],
Cell[71129, 1604, 103283, 1698, 375, "Output",ExpressionUUID->"4adad6a6-1329-4fd5-a05a-c5e9873e7b30"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174461, 3308, 206, 4, 67, "Section",ExpressionUUID->"810c0998-80c6-45cd-b101-35166d7d241b"],
Cell[174670, 3314, 396, 9, 30, "Input",ExpressionUUID->"cf0c0892-63ff-4596-a3a4-a3ff0c48e65d"],
Cell[175069, 3325, 5421, 121, 128, "Input",ExpressionUUID->"22ca8b4a-20f2-4cc2-8654-ffe8daf0607c"],
Cell[180493, 3448, 194, 3, 35, "Text",ExpressionUUID->"4e456190-b80e-4a3e-b865-97e7b391b220"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180724, 3456, 204, 4, 67, "Section",ExpressionUUID->"605fe58e-05ba-4312-8a64-04c92ab9930b"],
Cell[180931, 3462, 152, 3, 30, "Input",ExpressionUUID->"790921a4-6365-4ca7-b25c-474db3d5884b"],
Cell[CellGroupData[{
Cell[181108, 3469, 438, 11, 30, "Input",ExpressionUUID->"e6a7173b-7587-4531-acbe-81e459679e1e"],
Cell[181549, 3482, 4022, 75, 197, "Output",ExpressionUUID->"513cce8a-a124-428f-9f30-eec05fc2d21b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[185620, 3563, 175, 3, 67, "Section",ExpressionUUID->"3437db58-fbba-41df-9c80-5eeaa1f3ce72"],
Cell[CellGroupData[{
Cell[185820, 3570, 976, 26, 53, "Input",ExpressionUUID->"a19c8743-580c-4080-9d1c-4c9689d51eb2"],
Cell[186799, 3598, 25065, 424, 193, "Output",ExpressionUUID->"6647231b-15f4-4f1d-9ea4-0af5cb05f601"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[211913, 4028, 180, 3, 67, "Section",ExpressionUUID->"0fc477bf-21b8-40fe-a260-3d0f63f9eae1"],
Cell[CellGroupData[{
Cell[212118, 4035, 272, 6, 30, "Input",ExpressionUUID->"86492683-d2e7-49b9-9e81-dee3a22e5e4a"],
Cell[212393, 4043, 3047, 67, 80, "Output",ExpressionUUID->"d09bb86f-55f6-4fd8-b333-447e39dc984d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215477, 4115, 668, 16, 30, "Input",ExpressionUUID->"7720c9a8-cf3e-44e0-be89-638d6205e7b1"],
Cell[216148, 4133, 2147, 46, 80, "Output",ExpressionUUID->"08080778-7b42-4b1b-8a2a-bff1e4824dd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218332, 4184, 193, 3, 30, "Input",ExpressionUUID->"0d6d3d59-b43e-48ad-9851-11e522461f7c"],
Cell[218528, 4189, 184, 3, 34, "Output",ExpressionUUID->"868e8c88-ee02-42d4-ad38-53231111f0b5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[218761, 4198, 164, 3, 67, "Section",ExpressionUUID->"c22ccd75-0804-4b4d-b333-54417d3b2e1d"],
Cell[CellGroupData[{
Cell[218950, 4205, 464, 9, 42, "Input",ExpressionUUID->"0359d1cf-a056-4978-a275-b4b46f0dd2f3"],
Cell[219417, 4216, 2423, 54, 80, "Output",ExpressionUUID->"d08df687-f2ef-47c3-9f92-11bafe6c68be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221877, 4275, 458, 9, 42, "Input",ExpressionUUID->"f75eff41-9546-4a6a-922e-aff8ca540fad"],
Cell[222338, 4286, 6408, 150, 182, "Output",ExpressionUUID->"63e00d29-c539-43d9-8072-af5ebc9e3db1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228783, 4441, 516, 10, 42, "Input",ExpressionUUID->"9a96f41a-4c94-459f-a970-6e598ad73833"],
Cell[229302, 4453, 4271, 98, 148, "Output",ExpressionUUID->"37652c5a-b1d5-4f5d-9acb-086109e7aeaa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233622, 4557, 156, 3, 67, "Section",ExpressionUUID->"e6d99635-0214-47a6-b219-9054516723f8"],
Cell[CellGroupData[{
Cell[233803, 4564, 556, 12, 42, "Input",ExpressionUUID->"3b9362fa-3b25-439c-bcfb-3d0fe2b1f9ce"],
Cell[234362, 4578, 264, 6, 48, "Output",ExpressionUUID->"3e373393-5f0e-4a7d-85e7-c01a0fd114bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234663, 4589, 716, 17, 42, "Input",ExpressionUUID->"4caafbd0-9302-4a33-9fa4-f49016ad9d18"],
Cell[235382, 4608, 1278, 36, 70, "Output",ExpressionUUID->"290ffe90-d477-4249-a721-5c49d1a502ad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[236709, 4650, 163, 3, 67, "Section",ExpressionUUID->"5e898882-38f9-44c4-a62c-f281a6be0928"],
Cell[CellGroupData[{
Cell[236897, 4657, 1064, 24, 42, "Input",ExpressionUUID->"134fa796-24e3-4581-a585-9a3ea7573fa7"],
Cell[237964, 4683, 332, 5, 38, "Output",ExpressionUUID->"281c331e-4c31-4d36-90a0-3386db943167"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238333, 4693, 572, 11, 42, "Input",ExpressionUUID->"99f0e4e9-ca2d-46e0-bf4c-1ba38c1ac033"],
Cell[238908, 4706, 121860, 2016, 242, "Output",ExpressionUUID->"c034155e-3a9c-42ac-9b01-e785ae65a626"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360805, 6727, 1109, 25, 42, "Input",ExpressionUUID->"393343b9-4260-4796-9d7a-5d0d615840ae"],
Cell[361917, 6754, 201055, 3319, 251, "Output",ExpressionUUID->"4b801ea6-9237-4184-8c80-e36c26a03f4a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[563021, 10079, 166, 3, 67, "Section",ExpressionUUID->"8122c3e0-d712-454c-aea2-4bf227a9ce73"],
Cell[CellGroupData[{
Cell[563212, 10086, 176, 2, 30, "Input",ExpressionUUID->"7393151b-fd47-46bc-8251-dc12459bd7a2"],
Cell[563391, 10090, 734, 19, 42, "Output",ExpressionUUID->"ca16b6fa-0d6b-4367-9413-98be4c079a1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564162, 10114, 312, 6, 30, "Input",ExpressionUUID->"02ba4572-2092-4b96-b4f7-f24eef4bbf9e"],
Cell[564477, 10122, 17847, 417, 236, "Output",ExpressionUUID->"62df5834-016f-46dd-949c-aa335b34b115"]
}, Open  ]],
Cell[CellGroupData[{
Cell[582361, 10544, 311, 7, 30, "Input",ExpressionUUID->"656d6714-047c-48f3-a09a-83208ba72f35"],
Cell[582675, 10553, 239, 4, 40, "Output",ExpressionUUID->"41d2b4ed-6264-4f63-97a5-aeadea5a9b5d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[582963, 10563, 156, 3, 67, "Section",ExpressionUUID->"2fd0d343-ea70-4974-9eca-8736fea3c0ee"],
Cell[CellGroupData[{
Cell[583144, 10570, 1230, 30, 99, "Input",ExpressionUUID->"6be7e32a-607d-4824-b238-f7fbdbc9e8d9"],
Cell[584377, 10602, 11081, 212, 256, "Output",ExpressionUUID->"861fce3a-b274-442c-bcbb-2d4ad06825c1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[595507, 10820, 167, 3, 67, "Section",ExpressionUUID->"a952cd67-8c06-4e33-9cbe-f7774a516a5c"],
Cell[CellGroupData[{
Cell[595699, 10827, 779, 19, 75, "Input",ExpressionUUID->"af69b5f4-5922-4af2-957d-8724d3ca0f37"],
Cell[596481, 10848, 1752, 36, 453, "Output",ExpressionUUID->"ad105118-8ea6-4605-bfc1-adbb8b38a18c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[598282, 10890, 165, 3, 67, "Section",ExpressionUUID->"e3a05aa7-3ab6-4da3-b73a-73d325ac346d"],
Cell[CellGroupData[{
Cell[598472, 10897, 382, 8, 30, "Input",ExpressionUUID->"575b1b89-fab2-4f77-b59c-6fd17ecd7c04"],
Cell[598857, 10907, 277, 5, 34, "Output",ExpressionUUID->"28beb660-5010-44cd-9729-47eee9f3e097"]
}, Open  ]],
Cell[CellGroupData[{
Cell[599171, 10917, 777, 16, 97, "Input",ExpressionUUID->"d35f27e5-4292-4e80-949c-b76f0294e6a9"],
Cell[599951, 10935, 96563, 2532, 57, "Output",ExpressionUUID->"94ee98ee-48e0-40e2-9425-d48696fd1ecb"],
Cell[696517, 13469, 127217, 3257, 278, "Output",ExpressionUUID->"0fec02fb-56de-425c-85f1-4da8ce1341ca"],
Cell[823737, 16728, 292079, 6808, 378, "Output",ExpressionUUID->"191c2851-d63e-4da4-b963-343d0a846f18"],
Cell[1115819, 23538, 108875, 2364, 87, "Output",ExpressionUUID->"32339de0-bacf-4352-a7ee-ab94754ed881"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1224743, 25908, 166, 3, 67, "Section",ExpressionUUID->"7a668a46-487a-4500-9e60-38be6dcafb0a"],
Cell[CellGroupData[{
Cell[1224934, 25915, 279, 6, 30, "Input",ExpressionUUID->"1c3175fb-f589-4060-9b97-7183b040faaf"],
Cell[1225216, 25923, 248, 4, 34, "Output",ExpressionUUID->"73149197-4b16-4db1-8d52-97c0ffca1f60"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1225513, 25933, 176, 3, 67, "Section",ExpressionUUID->"ed6da7e4-5655-4707-9af0-7c174444b992"],
Cell[CellGroupData[{
Cell[1225714, 25940, 392, 8, 30, "Input",ExpressionUUID->"8462f33f-c7b9-4893-9b97-635745ed8e0a"],
Cell[1226109, 25950, 14910, 444, 235, "Output",ExpressionUUID->"82613675-00dd-47e0-9a17-2e84c0647bc9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1241068, 26400, 174, 3, 67, "Section",ExpressionUUID->"40bf5d0f-4527-4ea4-a935-95f255ab1734"],
Cell[CellGroupData[{
Cell[1241267, 26407, 621, 16, 53, "Input",ExpressionUUID->"c593a3a1-efc1-42ce-b874-61b8c92b5a8b"],
Cell[1241891, 26425, 35207, 873, 150, "Output",ExpressionUUID->"ef744353-3aab-434a-905c-f385da6e582e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1277147, 27304, 172, 3, 67, "Section",ExpressionUUID->"939ccd6c-e30d-4700-8ab2-894b4d435ef2"],
Cell[CellGroupData[{
Cell[1277344, 27311, 323, 8, 30, "Input",ExpressionUUID->"1155881d-c576-4e10-84f9-f97fabe7a108"],
Cell[1277670, 27321, 290, 6, 34, "Output",ExpressionUUID->"82f35c32-4c19-4c39-9452-a0c390964085"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1277997, 27332, 302, 6, 30, "Input",ExpressionUUID->"a0db2fec-921d-4990-8bb6-8d267f86f801"],
Cell[1278302, 27340, 290, 6, 34, "Output",ExpressionUUID->"fda0655c-2450-4ffe-bf93-a5a98af6846e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1278641, 27352, 180, 3, 67, "Section",ExpressionUUID->"74dd862c-2288-4e66-a932-90609e5b933b"],
Cell[CellGroupData[{
Cell[1278846, 27359, 390, 10, 30, "Input",ExpressionUUID->"c8daeca4-005e-4230-9a0f-6857d90cc5ea"],
Cell[1279239, 27371, 1878, 48, 242, "Output",ExpressionUUID->"e1149540-8864-4064-81ae-08b72cafd2ec"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1281166, 27425, 171, 3, 67, "Section",ExpressionUUID->"221af7d6-7d1e-4bdb-82c1-8bd646fdb6a3"],
Cell[CellGroupData[{
Cell[1281362, 27432, 377, 10, 30, "Input",ExpressionUUID->"98279a29-7b6d-48b2-a8e5-5c4c7581f06e"],
Cell[1281742, 27444, 205, 4, 34, "Output",ExpressionUUID->"0edfaede-834a-49c7-9058-ee4dd6b030be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1281984, 27453, 466, 12, 30, "Input",ExpressionUUID->"f467b9db-2e8f-4487-90a3-7d76ecb9c862"],
Cell[1282453, 27467, 459, 12, 99, "Output",ExpressionUUID->"0aced990-a044-48f6-b10b-321ab2755e39"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1282961, 27485, 174, 3, 67, "Section",ExpressionUUID->"5b7c266b-ad3f-4acd-9bf8-717d6f29c945"],
Cell[CellGroupData[{
Cell[1283160, 27492, 231, 4, 30, "Input",ExpressionUUID->"130831b7-052b-4d96-b7ec-11a187636a7d"],
Cell[1283394, 27498, 1411, 21, 123, "Output",ExpressionUUID->"818629d5-d1be-477b-b07a-32a41ce268ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1284842, 27524, 422, 10, 30, "Input",ExpressionUUID->"988fad80-2709-4693-9f92-8efdaed7e6eb"],
Cell[1285267, 27536, 333, 7, 34, "Output",ExpressionUUID->"78c9d70c-1a3e-4bc3-b7bc-96a2baf1913a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1285637, 27548, 482, 12, 30, "Input",ExpressionUUID->"1377cd3d-d276-4597-b96c-8784baa00dbe"],
Cell[1286122, 27562, 860, 17, 185, "Output",ExpressionUUID->"6b8fb8be-46a2-45f0-b232-f2fb1600ce19"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1287031, 27585, 168, 3, 67, "Section",ExpressionUUID->"d8c1f415-f955-4f3c-b625-f701fd4323ae"],
Cell[CellGroupData[{
Cell[1287224, 27592, 301, 6, 30, "Input",ExpressionUUID->"59a32185-fe29-44c2-b36a-ecb68d5b4b87"],
Cell[1287528, 27600, 1438, 30, 57, "Output",ExpressionUUID->"df1b9769-65a5-4f58-b4d2-8f0df8cc0e14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1289003, 27635, 646, 18, 30, "Input",ExpressionUUID->"ceaa9b14-d236-4022-ab64-8f0df1648615"],
Cell[1289652, 27655, 359, 7, 34, "Output",ExpressionUUID->"7fc2a344-1245-4a32-ab3c-e2de1a3f66f9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1290060, 27668, 162, 3, 67, "Section",ExpressionUUID->"a3f8b988-0dec-4dec-ad26-0e2b89a93d09"],
Cell[CellGroupData[{
Cell[1290247, 27675, 289, 6, 30, "Input",ExpressionUUID->"38aa8963-354f-4c6f-a483-0f3d43dda378"],
Cell[1290539, 27683, 566, 9, 79, "Output",ExpressionUUID->"5bab57c4-02f1-4edc-92a7-4e6ac6819a0f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1291154, 27698, 156, 3, 67, "Section",ExpressionUUID->"37bdb6bf-9231-44bb-8a43-9674ee20854e"],
Cell[CellGroupData[{
Cell[1291335, 27705, 413, 9, 30, "Input",ExpressionUUID->"6a9ea114-84bb-4f07-8a4b-535a365e4dbf"],
Cell[1291751, 27716, 863, 24, 34, "Output",ExpressionUUID->"816415eb-6e6d-40c0-8a82-cf139416aab4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1292651, 27745, 367, 8, 30, "Input",ExpressionUUID->"c12ad9c4-e527-4b81-a76f-010b3edefae4"],
Cell[1293021, 27755, 794, 22, 34, "Output",ExpressionUUID->"965d8624-99c5-4245-b048-969e7534f6ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1293852, 27782, 435, 10, 30, "Input",ExpressionUUID->"092f4083-5b57-472a-9372-ce68f844f45b"],
Cell[1294290, 27794, 58121, 1549, 189, "Output",ExpressionUUID->"427a88dd-816a-43f5-a5ad-908fcbdc6484"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1352460, 29349, 180, 3, 67, "Section",ExpressionUUID->"c1b12b5f-634d-481a-bf5b-60321d6b198e"],
Cell[CellGroupData[{
Cell[1352665, 29356, 262, 5, 30, "Input",ExpressionUUID->"9b9945eb-9065-4d5b-8d7d-c91fd4ec8c5f"],
Cell[1352930, 29363, 180, 2, 34, "Output",ExpressionUUID->"acf53bed-9441-4dea-9051-c2a78411c522"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1353147, 29370, 235, 4, 30, "Input",ExpressionUUID->"6879f80f-8584-4863-ad1d-2b80dd7f9b23"],
Cell[1353385, 29376, 312, 5, 57, "Output",ExpressionUUID->"81e8af60-0ed6-4804-a994-c1d83200ac80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1353734, 29386, 307, 7, 30, "Input",ExpressionUUID->"47a023d7-2b59-4a7f-ad74-64d0082a30bf"],
Cell[1354044, 29395, 455, 12, 34, "Output",ExpressionUUID->"e86496cb-9bc5-48c9-aef8-38e6a50c02fc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1354548, 29413, 163, 3, 67, "Section",ExpressionUUID->"f10fd236-5c50-459c-8bd9-a8998ff82572"],
Cell[CellGroupData[{
Cell[1354736, 29420, 332, 7, 30, "Input",ExpressionUUID->"f7943f77-a905-45c1-8a8e-6112ffc37075"],
Cell[1355071, 29429, 295, 6, 34, "Output",ExpressionUUID->"45cc1fe4-80a1-4afd-bcea-534973da2131"]
}, Open  ]],
Cell[1355381, 29438, 344, 8, 30, "Input",ExpressionUUID->"100d73e5-e7d0-4b15-8870-e7cf290f6cd2"],
Cell[CellGroupData[{
Cell[1355750, 29450, 402, 10, 30, "Input",ExpressionUUID->"8d81a659-8d47-412a-8beb-ec97a6986d0d"],
Cell[1356155, 29462, 408, 7, 34, "Output",ExpressionUUID->"d6570e79-c2ce-42e5-968a-0574d9e24a1b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1356612, 29475, 183, 3, 67, "Section",ExpressionUUID->"bfe6c418-d04d-4918-bfda-6b1d255093ba"],
Cell[CellGroupData[{
Cell[1356820, 29482, 500, 11, 30, "Input",ExpressionUUID->"4d784d63-c9b5-41a1-9f7d-8c7a9e35f852"],
Cell[1357323, 29495, 917, 16, 101, "Output",ExpressionUUID->"0ce4566c-7265-43c9-a600-aab3cfc30c2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1358277, 29516, 392, 8, 30, "Input",ExpressionUUID->"65eadb88-927f-45e4-bec1-59d9ffffa287"],
Cell[1358672, 29526, 720666, 11830, 437, "Output",ExpressionUUID->"c1016682-34b2-46fe-b10d-66ed6c33b118"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2079387, 41362, 177, 3, 67, "Section",ExpressionUUID->"445bf2f6-b7a5-41fe-8292-07fe2c1de5b5"],
Cell[CellGroupData[{
Cell[2079589, 41369, 333, 7, 30, "Input",ExpressionUUID->"ee108503-c2e6-4bbd-9d4e-61f0f52605e8"],
Cell[2079925, 41378, 3297, 70, 134, "Output",ExpressionUUID->"082a3239-abb7-4900-9beb-86b5782c3b4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2083259, 41453, 516, 13, 30, "Input",ExpressionUUID->"d2411631-759a-4f94-bd1e-fcd26fee515d"],
Cell[2083778, 41468, 205, 2, 34, "Output",ExpressionUUID->"cf7fccd5-ebfa-4e82-9e2d-798eeae4d075"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2084020, 41475, 535, 14, 30, "Input",ExpressionUUID->"d73c0514-2a30-42af-9186-9398b5d75e11"],
Cell[2084558, 41491, 205, 2, 34, "Output",ExpressionUUID->"a584108a-7928-443e-b3e2-f0a4b02529a7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2084812, 41499, 166, 3, 67, "Section",ExpressionUUID->"784ac5d1-5cec-49ca-82e7-b56f088e630f"],
Cell[CellGroupData[{
Cell[2085003, 41506, 795, 21, 30, "Input",ExpressionUUID->"58e3a153-9da7-428b-8175-193fc6db2585"],
Cell[2085801, 41529, 44192, 933, 505, "Output",ExpressionUUID->"20ff2644-4686-41e3-9d70-5a55bb5f8bca"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2130042, 42468, 174, 3, 67, "Section",ExpressionUUID->"60693498-f0c4-4b1e-84f4-dcbe74a53195"],
Cell[CellGroupData[{
Cell[2130241, 42475, 359, 9, 30, "Input",ExpressionUUID->"d356680f-8b12-4ed3-a5b5-9dfcc259a8a4"],
Cell[2130603, 42486, 316, 6, 34, "Output",ExpressionUUID->"fd3a4434-db21-41f6-b399-a808540dc3b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2130956, 42497, 1188, 30, 163, "Input",ExpressionUUID->"6f077d4a-8f75-4191-9aea-b8a645de3f01"],
Cell[2132147, 42529, 1009, 17, 193, "Output",ExpressionUUID->"adda5a07-bdc1-4787-a736-54f61dd8c849"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2133205, 42552, 179, 3, 67, "Section",ExpressionUUID->"6a0fd6de-07cc-4b40-b74a-f1144ca9e837"],
Cell[CellGroupData[{
Cell[2133409, 42559, 436, 11, 30, "Input",ExpressionUUID->"6614a447-622f-4aa3-a119-56c1b2ff559c"],
Cell[2133848, 42572, 244, 4, 34, "Output",ExpressionUUID->"f029e181-7881-4b27-ae2e-450c1c818665"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2134129, 42581, 442, 11, 30, "Input",ExpressionUUID->"4703157f-de38-48a3-b875-2d82423813a8"],
Cell[2134574, 42594, 221, 4, 34, "Output",ExpressionUUID->"f34c7b8b-920b-4263-902f-58dff4f198d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2134844, 42604, 178, 3, 67, "Section",ExpressionUUID->"d8c45f89-cea6-4604-9fa7-25ff105d9f3b"],
Cell[2135025, 42609, 372, 8, 30, "Input",ExpressionUUID->"155ac69c-f714-4ba7-9679-c54786aa186a"],
Cell[CellGroupData[{
Cell[2135422, 42621, 243, 4, 30, "Input",ExpressionUUID->"22d941f0-318f-4f9f-976d-99b06366b9ab"],
Cell[2135668, 42627, 284, 5, 34, "Output",ExpressionUUID->"35801f11-3a68-48fb-bdb7-5fe2cbafe087"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2136001, 42638, 168, 3, 67, "Section",ExpressionUUID->"a858af4e-9599-47d8-baef-3edd547d04bf"],
Cell[CellGroupData[{
Cell[2136194, 42645, 429, 11, 30, "Input",ExpressionUUID->"fccdfa87-48a7-409a-850c-bbf4af84e52c"],
Cell[2136626, 42658, 5026, 136, 34, "Output",ExpressionUUID->"a1fb17e2-885c-4be0-a137-416eb2c948e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2141689, 42799, 429, 11, 30, "Input",ExpressionUUID->"5b40f68c-5ed9-43bc-95b0-61695c62eae5"],
Cell[2142121, 42812, 2283, 59, 101, "Output",ExpressionUUID->"3c6b735d-26eb-4cc3-87e2-3872fe97fab6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2144441, 42876, 410, 10, 30, "Input",ExpressionUUID->"60aebc79-4881-4003-bfee-d00ba35f27b6"],
Cell[2144854, 42888, 1649, 24, 101, "Output",ExpressionUUID->"242365e6-b142-41d5-93db-5aacbc38c4d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2146540, 42917, 928, 23, 141, "Input",ExpressionUUID->"4eab5e2e-3bd0-45b0-ba27-34a1fc945abc"],
Cell[2147471, 42942, 2564, 36, 189, "Output",ExpressionUUID->"2787b010-532a-4422-b337-b110f44edb72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2150072, 42983, 296, 5, 30, "Input",ExpressionUUID->"c90cbc9f-f3d7-437a-868d-35da1645e315"],
Cell[2150371, 42990, 169, 2, 34, "Output",ExpressionUUID->"cbfe5b84-8f4b-4ce7-9e13-15614f11a135"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2150577, 42997, 896, 23, 53, "Input",ExpressionUUID->"12ec9b3a-fe59-4d57-bfca-4118fefc5aaf"],
Cell[2151476, 43022, 34324, 858, 245, "Output",ExpressionUUID->"e3dbcf80-aad2-4846-b5b1-55882974e4e7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2185849, 43886, 163, 3, 67, "Section",ExpressionUUID->"b7cd3e2e-2d39-4ad4-a408-0b372ec0353d"],
Cell[2186015, 43891, 249, 5, 30, "Input",ExpressionUUID->"52f5d88a-ef15-40b2-88aa-7b2f883209c1"],
Cell[CellGroupData[{
Cell[2186289, 43900, 422, 9, 30, "Input",ExpressionUUID->"02dcfbdb-6279-459e-8f32-8f4ef74b64fb"],
Cell[2186714, 43911, 13657, 276, 64, "Output",ExpressionUUID->"51063865-7b7f-441e-aada-204b5f5ae6a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2200408, 44192, 205, 3, 30, "Input",ExpressionUUID->"22fb78cc-282c-4c5b-b41f-a6f61d80e8d4"],
Cell[2200616, 44197, 365, 9, 34, "Output",ExpressionUUID->"bef60e42-1d86-4207-af1e-d6ab9a5b01c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2201018, 44211, 259, 5, 30, "Input",ExpressionUUID->"1e232a0f-52fd-467c-a3d6-a9fbb5517ac0"],
Cell[2201280, 44218, 290, 5, 34, "Output",ExpressionUUID->"31e29e68-4b26-43e1-89d6-54ead0778e42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2201607, 44228, 228, 4, 30, "Input",ExpressionUUID->"b7b00b57-a185-4a85-ac44-c30b193a1b6b"],
Cell[2201838, 44234, 2788, 68, 129, "Output",ExpressionUUID->"32ed7a10-fadc-47cc-852d-0c76593ead96"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2204675, 44308, 174, 3, 67, "Section",ExpressionUUID->"41e33e69-1e72-4985-af40-561252acdef2"],
Cell[CellGroupData[{
Cell[2204874, 44315, 480, 12, 30, "Input",ExpressionUUID->"28f494cf-c973-4102-a6e8-3b6b31e20294"],
Cell[2205357, 44329, 1982, 39, 117, "Output",ExpressionUUID->"ab35d5cf-76cf-4373-9bdd-cb1093428d24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2207376, 44373, 560, 12, 30, "Input",ExpressionUUID->"13b24943-ee71-4c1f-bc93-c94e50293e63"],
Cell[2207939, 44387, 24613, 376, 351, "Output",ExpressionUUID->"b99ad26a-50d7-4671-aa37-99de239bcb1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2232589, 44768, 304, 6, 30, "Input",ExpressionUUID->"9d9eec0c-1d7e-4c2e-89f7-cb2e330ab15e"],
Cell[2232896, 44776, 1236, 19, 101, "Output",ExpressionUUID->"a934dfca-edd2-4609-91e8-2b46b68cbd4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2234169, 44800, 207, 3, 30, "Input",ExpressionUUID->"7553e3c5-e747-4501-a217-90fca82f936c"],
Cell[2234379, 44805, 5279, 126, 272, "Output",ExpressionUUID->"579ce9fc-69fa-42fd-ad84-1cab72d68265"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2239707, 44937, 159, 3, 67, "Section",ExpressionUUID->"4e40bc22-35b1-42fd-a091-82a58372505b"],
Cell[CellGroupData[{
Cell[2239891, 44944, 267, 5, 30, "Input",ExpressionUUID->"bc857d82-64e3-4e53-a5a6-f5419eb3ecc7"],
Cell[2240161, 44951, 159747, 3169, 507, "Output",ExpressionUUID->"322dd0b9-7976-443b-98d1-6332efbe2230"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2399945, 48125, 313, 6, 30, "Input",ExpressionUUID->"9e7b9e55-680a-41a6-91e0-0b43d6d2379f"],
Cell[2400261, 48133, 2325, 54, 193, "Output",ExpressionUUID->"730379cc-b52f-4ea1-aed2-bffe8298742d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2402635, 48193, 165, 3, 67, "Section",ExpressionUUID->"6670d28a-1caa-4ef0-9844-b6b118b106c5"],
Cell[CellGroupData[{
Cell[2402825, 48200, 654, 19, 30, "Input",ExpressionUUID->"30fab903-2454-427b-9edf-3f1e572a4239"],
Cell[2403482, 48221, 157, 2, 34, "Output",ExpressionUUID->"a93c7982-dbeb-457c-80d4-75cd4390847c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2403676, 48228, 477, 12, 30, "Input",ExpressionUUID->"bcbc7729-0be0-4d72-b211-bf5edfa86229"],
Cell[2404156, 48242, 183, 2, 34, "Output",ExpressionUUID->"89dbbaec-92fb-4343-aecb-fe00e3b14268"]
}, Open  ]],
Cell[2404354, 48247, 490, 13, 30, "Input",ExpressionUUID->"67ca4b40-3241-499b-9bc3-b5861f4e35c6"],
Cell[CellGroupData[{
Cell[2404869, 48264, 368, 9, 30, "Input",ExpressionUUID->"5a16d383-9931-493d-9c94-b9abf7015f64"],
Cell[2405240, 48275, 2134, 52, 223, "Output",ExpressionUUID->"06bf8616-82cc-418a-b6ad-13823b1d4342"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2407423, 48333, 168, 3, 67, "Section",ExpressionUUID->"cc4fd9ca-4563-4dee-99e8-98a6533b6cee"],
Cell[CellGroupData[{
Cell[2407616, 48340, 693, 18, 30, "Input",ExpressionUUID->"f4006e63-72b1-4c7b-b750-2f15edc6d85e"],
Cell[2408312, 48360, 760, 16, 36, "Output",ExpressionUUID->"65135de1-d852-4ce9-b868-19c4e70e32ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2409109, 48381, 529, 14, 30, "Input",ExpressionUUID->"47e23568-e67e-4569-ae1c-04c17fa937cc"],
Cell[2409641, 48397, 269, 5, 34, "Output",ExpressionUUID->"58dde63f-c920-4ae3-a9dd-0347910a3c81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2409947, 48407, 699, 19, 30, "Input",ExpressionUUID->"03e24cca-246f-4084-bc62-aae45848c707"],
Cell[2410649, 48428, 446, 9, 57, "Output",ExpressionUUID->"391bd9b2-d8d4-4a5f-9084-5e20a5975ebb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

